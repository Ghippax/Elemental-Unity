//INFO GENERAL
/*
  
	Elemental Unity, juego plataformas en 2D.
  
  - Mecánicas a implementar:
  	+ Motor físico HECHO 
    + Poderes elementales HECHO
    + Pickups y monedas HECHO
    + Coleccionables HECHO   
    + Escenarios HECHO
    + Mapa mundi HECHO
    + Bloques especiales HECHO
    + Bloques animados HECHO
    + Animaciones HECHO   
    + Menu principal HECHO
    + UI HECHO
    + Editor (tiles, texto, enemigo, fondo, guardado, opciones) HECHO    
    + Clase para enemigos y jugador HECHO
    + Transiciones HECHO
    + Sistema de partículas HECHO    
    + Arte HECHO
    + Niveles jugables HECHO
  
  - Bugs sin resolver:  	
  	+ Hay un  "tembleque" al estar encima de bloques de tierra generados
  
  - Bugs resueltos:
		+ Las paredes de tierra te pueden atravesar RESUELTO (Ahora te matan)
    + No se pueden poner monedas u otros coleccionables en el agua.
    Para ello separar en dos capas y que funcione en el editor. RESUELTO (Hay determinadas tiles que se ponen
    automaticamente en la segunda capa. Implementada toda funcionalidad con el editor)

*/

//VARIABLES GLOBALES

//UI
int scene = 1;
int titleScreen = round(random(0,4));

int numStages = 21;
int numExtras = 5;
String loadingText = "...";
int unlockScreen = 0;
int unlockScreenTimer = 0;

//Opciones código
int[] bgColor = {255,255,255};
double TileSize = 20;
boolean debug = false;
boolean fullPower = false;

//Colisión
double tileCollisionOffset = 2;

//FPS
int sec = second();
int lastSec = second();
int FPS = 0;
int timer = 0;

//Mapa
int curLevel = 0;
boolean moveMap = false;

//Editor 
int edMenu = 0;
int[] tileSlots = {4,0,0,0};
int tileSlot = 0;
int bgPage = 0;

boolean grid = true;

//Extra
int extraPage = 0;
int lvPerPage = 9;
int extraLevel = 0;

//Nivel
boolean pause = false;
boolean endLevel = false;
boolean dead = false;
boolean allowEndRender = false;

//Controles
boolean wPressed;
boolean aPressed;
boolean sPressed;
boolean dPressed;
boolean onePressed;
boolean twoPressed;
boolean thrPressed;
boolean fouPressed;
boolean spacePressed;
boolean leftPressed;
boolean rightPressed;
boolean downPressed;
boolean upPressed;
boolean mPressed;
boolean zPressed;
boolean xPressed;
boolean slidePressed;
boolean qPressed;
boolean ePressed;
boolean ctrlPressed;
boolean tabPressed;
boolean escPressed;

//Opciones
boolean showFps = false;
boolean crosshair = true;
boolean hideUI = false;

//FUNCIONES DE AYUDA

//Teclas al pulsar
void onKeyPressed(String key){ 
  switch (key) {
    case "w":
    	wPressed = true;
    	break;
    case "a":
    	aPressed = true;
    	break;
    case "s":
    	sPressed = true;
    	break;
    case "d":
    	dPressed = true;
    	break;
    case "W":
    	wPressed = true;
    	break;
    case "A":
    	aPressed = true;
    	break;
    case "S":
    	sPressed = true;
    	break;
    case "D":
    	dPressed = true;
    	break;
    case "m":
    	mPressed = true;
    	break;
    case " ":
    	spacePressed = true;
    	break;
    case "up":
    	upPressed = true;
    	break;
    case "down":
    	downPressed = true;
    	break;
    case "left":
    	leftPressed = true;
    	break;
    case "right":
    	rightPressed = true;
    	break;
    case "z":
    	zPressed = true;
    	break;
    case "x":
    	xPressed = true;
    	break;
    case "q":
    	qPressed = true;
    	break;
    case "e":
    	ePressed = true;
    	break;
    case "Q":
    	qPressed = true;
    	break;
    case "E":
    	ePressed = true;
    	break;
    case "Control":
    	ctrlPressed = true;
    	break;
    case "Tab":
    	tabPressed = true;
    	break;
   	case "Escape":
    	escPressed = true;
    	break;
    case "1":
    	onePressed = true;
    	break;
   	case "2":
    	twoPressed = true;
    	break;
    case "3":
    	thrPressed = true;
    	break;
    case "4":
    	fouPressed = true;
    	break;
  }
}

//Teclas al levantar
void onKeyReleased(String key) {
  switch (key) {
    case "w":
    	wPressed = false;
    	break;
    case "a":
    	aPressed = false;
    	break;
    case "s":
    	sPressed = false;
    	break;
    case "d":
    	dPressed = false;
    	break;
   	case "W":
    	wPressed = false;
    	break;
    case "A":
    	aPressed = false;
    	break;
    case "S":
    	sPressed = false;
    	break;
    case "D":
    	dPressed = false;
    	break;
    case "m":
    	mPressed = false;
    	break;
    case " ":
    	spacePressed = false;
    	break;
   	case "up":
    	upPressed = false;
    	break;
    case "down":
    	downPressed = false;
    	break;
    case "left":
    	leftPressed = false;
    	break;
    case "right":
    	rightPressed = false;
    	break;
    case "z":
    	zPressed = false;
    	break;
    case "x":
    	xPressed = false;
    	break;
    case "q":
    	qPressed = false;
    	break;
    case "e":
    	ePressed = false;
    	break;
    case "Q":
    	qPressed = false;
    	break;
    case "E":
    	ePressed = false;
    	break;
    case "Control":
    	ctrlPressed = false;
    	break;
    case "Tab":
    	tabPressed = false;
    	break;
    case "Escape":
    	escPressed = false;
    	break;
    case "1":
    	onePressed = false;
    	break;
   	case "2":
    	twoPressed = false;
    	break;
    case "3":
    	thrPressed = false;
    	break;
    case "4":
    	fouPressed = false;
    	break;
  }
}

//Función ángulos a randianes
double aToRad(double x){
  return x*PI/180
}

//Función radianes a ángulos
double radToA(double x){
  return x*180/PI
} 

//Función distancia
double D(double x1, double y1, double x2, double y2){
  return sqrt(pow(x2-x1,2)+pow(y2-y1,2))
}

//Función intersección entre rectángulo y rectángulo
boolean intersectRR(double x1, double y1, double w1, double h1, double x2, double y2, double w2, double h2){
 if(x1 + w1 >= x2 && x2 + w2 >= x1 &&
    y1 + h1 >= y2 && y2 + h2 >= y1 ){
   return true
 } 
 return false
}

//Función intersección punto y rectángulo
boolean intersectPR(double x, double y, double width, double height, double px, double py){
  if(px >= x && px <= x + width && py >= y && py <= y + height){
    return true;
  }
  return false;
}

//Función intersección con círculo
boolean intersectPC(double x, double y, double r, double px, double py){
  if(D(x,y,px,py) < r){
    return true;
  }
  return false;
}

//Función intersección con arco de solo radio
boolean intersectPA(double x, double y, double r, double arc, double px, double py){
  if(D(x,y,px,py) < r && D(x,y,px,py) > r-arc){
    return true;
  }
  return false;
}

//Función intersección con ellipse
boolean intersectPE(double x1, double y1, double x2, double y2, double width, double height){
  boolean result = false;
    
  if(pow(x1-x2,2)/pow(width/2,2) + pow(y1-y2,2)/pow(height/2,2) <= 1){
    result = true;
  }
  return result;
}

//Funcion intersección con arco de ellipse
boolean intersectPFullA(double x1, double y1, double x2, double y2, double width, double height, double arc){
  boolean result = false;
    
  if(pow(x1-x2,2)/pow(width/2,2) + pow(y1-y2,2)/pow(height/2,2) <= 1 && pow(x1-x2,2)/pow(width/2-arc/2,2) + pow(y1-y2,2)/pow(height/2-arc/2,2) > 1){
    result = true;
  }
  return result;
}

//Redondeo en décimas
double Round(double x){
  double y = round(x*10);
  return y/10
}

//Redondeo a cualquier punto decimal
double roundTo(double x, int a){
  double b = pow(10,a);
  double y = round(x*b);
  return y/b;
}

//Funcion map, canviar de un intervalo a otro
double map(double num, double min, double max, double min2, double max2){
  return (num-min) * (max2 - min2) / (max - min) + min2;
}

//Conversión de HSL a RGB
int[] fromHSLtoRGB(double h, double s, double l){
  
  double c = (1 - abs(2*l - 1)) * s;
	double x = c * (1 - abs((h/60) % 2 - 1));
	double m = l - c/2;
  
  double r1;
  double g1;
  double b1;
  if(h < 60){
    r1 = c;
    g1 = x;
    b1 = 0;
  }else if(h < 120){
    r1 = x;
    g1 = c;
    b1 = 0;
  }else if(h < 180){
    r1 = 0;
    g1 = c;
    b1 = x;
  }else if(h < 240){
    r1 = 0;
    g1 = x;
    b1 = c;
  }else if(h < 300){
    r1 = x;
    g1 = 0;
    b1 = c;
  }else{
    r1 = c;
    g1 = 0;
    b1 = x;
  } 
  int r = round((r1+m)*255);
  int g = round((g1+m)*255);
  int b = round((b1+m)*255);
  int[] colors = {r,g,b};
  return colors
}

//Carácteres a enteros
int getNum(char x){
  int num;
  switch(x){
    case "0":
    	num = 0;
    break
    case "1":
    	num = 1;
    break
    case "2":
    	num = 2;
    break
    case "3":
    	num = 3;
    break
    case "4":
    	num = 4;
    break
    case "5":
    	num = 5;
    break
    case "6":
    	num = 6;
    break
    case "7":
    	num = 7;
    break
    case "8":
    	num = 8;
    break
    case "9":
    	num = 9;
    break
    case "A":
    	num = 10;
    break
    case "B":
    	num = 11;
    break
    case "C":
    	num = 12;
    break
    case "D":
    	num = 13;
    break
    case "E":
    	num = 14;
    break
    case "F":
    	num = 15;
    break
  }
  return num;
}

//Convertir de hexadecimal a rgb
int[] fromHexToRGB(String hex){
  int[] c = new int[3];
  char[] nHex = stringToCharArray(hex);
  c[0] = getNum(nHex[0]) * 16 + getNum(nHex[1]);
  c[1] = getNum(nHex[2]) * 16 + getNum(nHex[3]);
  c[2] = getNum(nHex[4]) * 16 + getNum(nHex[5]);   
  return c
}

//Escribir números en base16
String base16(int n){
  String num;
  switch(n){
    case 0:
    	num = "0";
    break
    case 1:
    	num = "1";
    break
    case 2:
    	num = "2";
    break
    case 3:
    	num = "3";
    break
    case 4:
    	num = "4";
    break
    case 5:
    	num = "5";
    break
    case 6:
    	num = "6";
    break
    case 7:
    	num = "7";
    break
    case 8:
    	num = "8";
    break
    case 9:
    	num = "9";
    break
    case 10:
    	num = "A";
    break
    case 11:
    	num = "B";
    break
    case 12:
    	num = "C";
    break
    case 13:
    	num = "D";
    break
    case 14:
    	num = "E";
    break
    case 15:
    	num = "F";
    break
  }
  return num;
}

//Pasar números a base16
String toBase16(int num){
  String result = "";
  int aux = num;
  int size = 0;
  do{
    aux /= 16;
    size++;
  }while(aux >= 16);
  int c = num / 16;
  int r = num % 16;
  double rs[] = new double[size];
  int i = 0;
  rs[i] = r;
  while(c >= 16){
    r = c % 16;
    c = c / 16;
    
    i++;
    rs[i] = r;
  }
  result += ""+base16(floor(c));
  for(int j = rs.length-1; j > -1; j--){
    result += ""+base16(round(rs[j]));
  }
  return result;
}

//Pasar de RGB a Hexadecimal
String fromRGBToHex(int[] rgb){
  String c = "";
  c += toBase16(rgb[0]);
  c += toBase16(rgb[1]);
  c += toBase16(rgb[2]);
  return c;
}

boolean isAround(double x, double y, double margin){
  if(abs(x-y) < margin){
    return true
  }
  return false
}

/// Funciones gráficas ///

//Función Arco
void arc(double x, double y, double width, double height, double startAngle, double endAngle, int resolution){
  double xP;
  double yP;
  double angle;
  double fxP;
  double fyP;
  double fangle;
  for(int i = 0; i < resolution+1; i++){
    fangle = map(i, 0, resolution, startAngle, endAngle);
    fxP = x+width*cos(aToRad(fangle));
    fyP = y-height*sin(aToRad(fangle));
    if(i == 0){
      angle = fangle;
      xP = fxP;
      yP = fyP;
    }
    line(xP,yP,fxP,fyP);
    angle = fangle;
    xP = fxP;
    yP = fyP;
    
    
  }
}

//Rota un punto sobre un eje
double[] rotatePoint(double x, double y, double rad, double angle){
  double[] result = {x+rad*cos(aToRad(angle)),y-rad*sin(aToRad(angle))};
  return result
}

//Convierte el sistema a polar (sobre origen)
double[] toPolar(double x, double y, double x2, double y2){
  if(round(y2-y) == 0){
    double[] r = {0,0};
    return r
  }
  double angle = radToA(atan((x2-x)/(y2-y)));
	angle += 90;
  if(y2 > y){
    angle += 180;
  }
  double dist = D(x,y,x2,y2);
  double[] result = {dist,angle};
  return result;
}

//Pasa de polar a cartesiano (sin origen)
double[] toCartesian(double d, double angle){
  double[] results = {d*cos(aToRad(angle)),d*-sin(aToRad(angle))};
  return results;
}

//Renderiza cuadrados customizables
void fancySquare(double x, double y, double size, double cirSize, double angle){
  double[] p1 = toPolar(x,y,x-size/2,y+size/2);
  double[] p2 = toPolar(x,y,x+size/2,y+size/2);
  double[] p3 = toPolar(x,y,x-size/2,y-size/2);
  double[] p4 = toPolar(x,y,x+size/2,y-size/2);
  double[] corner1 = rotatePoint(x,y,p1[0],p1[1]+angle); 
  double[] corner2 = rotatePoint(x,y,p2[0],p2[1]+angle); 
  double[] corner3 = rotatePoint(x,y,p3[0],p3[1]+angle); 
  double[] corner4 = rotatePoint(x,y,p4[0],p4[1]+angle); 
  
  triangle(corner1[0],corner1[1],corner2[0],corner2[1],corner3[0],corner3[1]);
  triangle(corner2[0],corner2[1],corner3[0],corner3[1],corner4[0],corner4[1]);
  
  if(cirSize > 0){
    ellipse(corner1[0],corner1[1],cirSize,cirSize);
    ellipse(corner2[0],corner2[1],cirSize,cirSize);
    ellipse(corner3[0],corner3[1],cirSize,cirSize);
    ellipse(corner4[0],corner4[1],cirSize,cirSize);

    double[] p5 = toPolar(x,y,x-size/2-cirSize/2,y+size/2);
    double[] p6 = toPolar(x,y,x-size/2,y+size/2+cirSize/2);

    double[] p7 = toPolar(x,y,x+size/2+cirSize/2,y+size/2);
    double[] p8 = toPolar(x,y,x+size/2,y+size/2+cirSize/2);

    double[] p9 = toPolar(x,y,x-size/2-cirSize/2,y-size/2);
    double[] p10 = toPolar(x,y,x-size/2,y-size/2-cirSize/2);

    double[] p11 = toPolar(x,y,x+size/2+cirSize/2,y-size/2);
    double[] p12 = toPolar(x,y,x+size/2,y-size/2-cirSize/2);

    double[] border1 = rotatePoint(x,y,p5[0],p5[1]+angle);
    double[] border2 = rotatePoint(x,y,p6[0],p6[1]+angle);
    double[] border3 = rotatePoint(x,y,p7[0],p7[1]+angle);
    double[] border4 = rotatePoint(x,y,p8[0],p8[1]+angle);
    double[] border5 = rotatePoint(x,y,p9[0],p9[1]+angle);
    double[] border6 = rotatePoint(x,y,p10[0],p10[1]+angle);
    double[] border7 = rotatePoint(x,y,p11[0],p11[1]+angle);
    double[] border8 = rotatePoint(x,y,p12[0],p12[1]+angle);

    triangle(border1[0],border1[1],corner1[0],corner1[1],corner3[0],corner3[1]);
    triangle(border5[0],border5[1],border1[0],border1[1],corner3[0],corner3[1]);

    triangle(corner1[0],corner1[1],corner2[0],corner2[1],border2[0],border2[1]);
    triangle(border4[0],border4[1],corner2[0],corner2[1],border2[0],border2[1]);

    triangle(corner3[0],corner3[1],corner4[0],corner4[1],border6[0],border6[1]);
    triangle(border8[0],border8[1],corner4[0],corner4[1],border6[0],border6[1]);

    triangle(border3[0],border3[1],corner2[0],corner2[1],corner4[0],corner4[1]);
    triangle(border3[0],border3[1],border7[0],border7[1],corner4[0],corner4[1]);
  }
  strokeWeight(1);
}

//Renderiza polígonos de n lados
void polygon(double x, double y, double rad, int sides, double angle){
  double miniAngle = 360/sides;
  double corners[][] = new double[sides][2];
  for(int i = 0; i < sides; i++){
    double[] p1 = rotatePoint(x,y,rad,angle+miniAngle*i);
    corners[i][0] = p1[0];
    corners[i][1] = p1[1];
  }
  for(int i = 0; i < sides; i++){
    if(i < sides-1){
      triangle(x,y,corners[i][0],corners[i][1],corners[i+1][0],corners[i+1][1]);
    }else{
      triangle(x,y,corners[i][0],corners[i][1],corners[0][0],corners[0][1]);
    }
  }
}

//Renderiza estrellas de n lados
void star(double x, double y, double rad, double starLength, double starFactor, int sides, double angle){
  double miniAngle = 360/sides;
  double corners[][] = new double[sides][2];
  double starCorners[][] = new double[sides][2];
  for(int i = 0; i < sides; i++){
    double[] p1 = rotatePoint(x,y,rad,angle+miniAngle*i);
    double[] s1 = rotatePoint(x,y,rad*starLength,angle+starFactor+miniAngle*i);
    corners[i][0] = p1[0];
    corners[i][1] = p1[1];
    starCorners[i][0] = s1[0];
    starCorners[i][1] = s1[1];
  }
  for(int i = 0; i < sides; i++){
    if(i < sides-1){
      triangle(x,y,corners[i][0],corners[i][1],corners[i+1][0],corners[i+1][1]);
      triangle(starCorners[i][0],starCorners[i][1],corners[i][0],corners[i][1],corners[i+1][0],corners[i+1][1]);
    }else{
      triangle(x,y,corners[i][0],corners[i][1],corners[0][0],corners[0][1]);
      triangle(starCorners[i][0],starCorners[i][1],corners[i][0],corners[i][1],corners[0][0],corners[0][1]);
    }
  }
}

void illuminate(double x, double y, double step, double radius, double stopRadius){
  noFill();
  for(double i = 0; i < (radius-stopRadius)/step; i++){
    strokeWeight(round(step));
    stroke(0,0,0,map(i,0,(radius-stopRadius)/step,0.99,0.01));
    ellipse(x,y,radius-i*step,radius-i*step);
  }
	fill(0,0,0);
  stroke(0,0,0);
  rect(-10,-10,1,1);
}

/// Arrays ///

int[] pushInt(int[] arr, int newInt){
  int[] aux = arr;
  arr = new int[aux.length+1];
  for(int i = 0; i < aux.length; i++){
  	arr[i] = aux[i];
  }
  arr[aux.length] = newInt;
  return arr
}

int[] delInt(int[] arr, int index){
  int[] aux = arr;
  arr = new int[aux.length-1];
  int n = 0;
  for(int i = 0; i < aux.length; i++){
    if(i != index){
      arr[n] = aux[i];
      n++;
    }
  }
  return arr
}

int searchNum(int[] arr, int num){
  int counter = 0;
  for(int i = 0; i < arr.length; i++){
    if(arr[i] == num){
      counter++;
    }
  }
  return counter
}

int[] delNum(int[] arr, int num){
  int[] aux = arr;
  arr = new int[aux.length-searchNum(arr,num)];
  int n = 0;
  for(int i = 0; i < aux.length; i++){
    if(aux[i] != num){
      arr[n] = aux[i];
      n++;
    }
  }
  return arr
}

int[] mergeInt(int[] arr, int[] arr2){
  for(int i = 0; i < arr2.length; i++){
    arr = pushInt(arr,arr2[i]);
  }
  return arr;
}

boolean anyTrue(boolean[] arr){
  for(int i = 0; i < arr.length; i++){
    if(arr[i]){
      return true
    }
  }
  return false
}

int[][] copyInt2(int[][] arr){
  int[][] arr2 = new int[sizeOf(arr,1)][sizeOf(arr,2)];
  for(int i = 0; i < sizeOf(arr,1); i++){
    for(int j = 0; j < sizeOf(arr,2); j++){
    	arr2[i][j] = arr[i][j];
  	}
  }
  return arr2
}

double log10(double x){
  return log(x)/log(10)
}

double logB(double x, int base){
  return log(x)/log(base)
}

int digits(int x){
  if(x == 0){
    return 1
  }
  return floor(log10(x))+1
}

double min(double a1, double a2){
  if(a2 < a1){
    return a2
  }
  return a1
}

//Unas variables
double[] mainColorHSL = {114,0.91,0.64};
double[] secColorHSL = {320,0.01,0.01};
double[] mainColorRGB = fromHSLtoRGB(mainColorHSL[0],mainColorHSL[1],mainColorHSL[2]);
double[] secColorRGB = fromHSLtoRGB(secColorHSL[0],secColorHSL[1],secColorHSL[2]);

//CLASES

class vector{
  double x;
  double y;
  vector(double x, double y){
    this.x = x;
    this.y = y;
  }
  
  public void equal(double x2, double y2){
    x = x2;
		y = y2;
  }
  
  public void add(vector v){
    x += v.x;
    y += v.y;
  }
  
  public void sus(vector v){
    x -= v.x;
    y -= v.y;    
  }
  
  public void mult(double escalar){
    x *= escalar;
    y *= escalar;
  }
  
  public void div(double escalar){
    x /= escalar;
    y /= escalar;
  }
  
  public double getMod(){
    return sqrt(x*x+y*y);
  }
  
  public double getAngle(vector reference){
    return toPolar(reference.x,reference.y,x,y)[1]
  }
  
  public vector get(){
    return this
  }
  
  public void normalize(){
    double mod = getMod();
    if(mod > 0){
    	x /= mod;
    	y /= mod;
    }
  }
  
  public void limit(double max){
   	double mod = getMod();
    if(mod > max){
      this.normalize();
      this.mult(max);
    }
  }
  
  public void round(int digits){
    x = roundTo(x,digits);
    y = roundTo(y,digits);
  }
  
  public void show(){
    println(x + " " + y + " " + getMod());
  }
}

vector copyVector(vector v){
  return new vector(v.x,v.y)
}

vector addVectors(vector v, vector u){
  return new vector(v.x+u.x,v.y+u.y);
}

vector susVectors(vector v, vector u){
  return new vector(v.x-u.x,v.y-u.y);
}

vector multVector(vector v, double escalar){
  return new vector(v.x*escalar,v.y*escalar);
}

vector divVector(vector v, double escalar){
  return new vector(v.x/escalar,v.y/escalar);
}

vector normalize(vector v){
  double mod = v.getMod();
  if(mod <= 1){
    return new vector(0,0);
  }
  return new vector(v.x/mod,v.y/mod);
}

vector fromPolar(double angle, double mod){
  double[] pos = toCartesian(mod,angle);
  return new vector(pos[0],pos[1]);
}

double animationTimer1 = 0;
double animationTimer2 = 0;
double animationTimer3 = 0;

void animationTimers(){
  animationTimer1++;
  animationTimer2++;
  animationTimer3++;
  if(animationTimer1 >= 33){
    animationTimer1 = 0;
  }    
  if(animationTimer2 >= 32){
    animationTimer2 = 0;
  }
  if(animationTimer3 >= 32){
    animationTimer3 = 0;
  }
}

class animation{
  int ID;
  
  double timer;
  double dur;
  double vel = 1;
  
  int nFrames;
  int frame;
  
  boolean animateOnce;
  boolean active;
  
  animation(int ID, double dur, int nFrames){
    this.ID = ID;
    this.dur = dur;
    this.timer = 0;
    this.nFrames = nFrames;
    
    animateOnce = false;
    active = true;
  }
  
  public void render(double x, double y, double width, double height){
    
    if(active == true){
      
      timer += vel; 
      
      if(ID == 9 || ID == 8){
        timer = animationTimer2;
      }else if(ID == 6){
        timer = animationTimer1;
      }else if(ID == 19){
        timer = animationTimer3;
      }
      
      frame = floor(map(timer,0,dur*nFrames+vel,0,nFrames));

      switch(ID){ 
        case 1:
          switch(frame){
            case 0:
              image("https://1.bp.blogspot.com/-Pf_f3KR97WM/X3hab8hw5uI/AAAAAAAADcs/U4GKt1McegcM-rJC3AX8RkHqi5mQdCu_gCLcBGAsYHQ/s320/TestIdle1.png",x,y,width,height);
            break
            case 1:
              image("https://1.bp.blogspot.com/-NB1vSgPhpCM/X3hab100SsI/AAAAAAAADck/RMjo5ji7b34-j8eLuQksPQjCU6l7jKayACLcBGAsYHQ/s320/TestIdle2.png",x,y,width,height);
            break
            case 2:
              image("https://1.bp.blogspot.com/-LaOLvlGf6Zc/X3habxcJNzI/AAAAAAAADco/DaTso5iXcq8ZzkVROr8hOiCxeO6cctwUgCLcBGAsYHQ/s320/TestIdle3.png",x,y,width,height);
            break
            case 3:
              image("https://1.bp.blogspot.com/-PsNM4xAbGlw/X3hactA4sHI/AAAAAAAADcw/hpBWmqXaXDoKblc3SBKETL3vNSq_2cdGwCLcBGAsYHQ/s320/TestIdle4.png",x,y,width,height);
            break
            case 4:
              image("https://1.bp.blogspot.com/-Wo19u-XDUHw/X3hac488n4I/AAAAAAAADc0/ZytmCSZ81S8yNz5rAErWEnoaLeNsDL1qACLcBGAsYHQ/s320/TestIdle5.png",x,y,width,height);
            break
            case 5:
              image("https://1.bp.blogspot.com/-OSnnDNEO0D0/X3hac5GPZ8I/AAAAAAAADc4/th-F40ycBtkQt0O0uCyiBTbKgs4zfwDHQCLcBGAsYHQ/s320/TestIdle6.png",x,y,width,height);
            break
          }
        break
        case 2:
          switch(frame){
            case 0:
              image("https://1.bp.blogspot.com/-9gy2QzCsmlM/X3iekbAq51I/AAAAAAAADfE/e7XUMzU6sBI-Zu_IFO4dWajB4EOKBqYRACLcBGAsYHQ/s0/TestJump1.png",x,y,width,height);          
            break
            case 1:
              image("https://1.bp.blogspot.com/-CEbl16nmZhg/X3iekZdYY_I/AAAAAAAADfA/73V66NsB4B0AxsBXrxzrTD6a-7zCeNPawCLcBGAsYHQ/s0/TestJump2.png",x,y,width,height);          
            break
            case 2:
              image("https://1.bp.blogspot.com/-ZSM4-252KxQ/X3iekAq1hgI/AAAAAAAADe8/SBmVBnQvrWocliaeFDrwJBWXGUsFz9shACLcBGAsYHQ/s0/TestJump3.png",x,y,width,height);          
            break
          }
        break
        case 3:
          switch(frame){
            case 0:
              image("https://1.bp.blogspot.com/-aStGLRLAfpo/X3ig6z_ul7I/AAAAAAAADfU/33IfUssbb2UqR-nI4KNNc577bk1OJKRqQCLcBGAsYHQ/s0/TestFall1.png",x,y,width,height);       
            break
            case 1:
              image("https://1.bp.blogspot.com/-LXjL9s0itnc/X3ig6_C7fjI/AAAAAAAADfY/aJQQoQTACdkMQSLYmoJdPVJf982hRTpiACLcBGAsYHQ/s0/TestFall2.png",x,y,width,height);          
            break
            case 2:
              image("https://1.bp.blogspot.com/-15e61UtNJzk/X3ig68oOd3I/AAAAAAAADfc/p_H5OGEo5MEBQBKGtZPzeuM5kZtdHVyfgCLcBGAsYHQ/s0/TestFall3.png",x,y,width,height);          
            break
          }
        break
        case 4:
          switch(frame){
            case 0:
              image("https://1.bp.blogspot.com/-6SSxYILhM_M/X3i0TCOAJ8I/AAAAAAAADfo/VWldfy-hWXkkzIL-hz9_gJ75WGZUkoyxQCLcBGAsYHQ/s0/TestWalkL1.png",x,y,width,height);
            break
            case 1:
              image("https://1.bp.blogspot.com/-PCPiOSrUYHU/X3i0TGTO-pI/AAAAAAAADfw/ymXaAM_20aUIO5VND8B38ZvyKYsktX0xACLcBGAsYHQ/s0/TestWalkL2.png",x,y,width,height);
            break
            case 2:
              image("https://1.bp.blogspot.com/-c3Y9R7SiMXw/X3i0TMd4b0I/AAAAAAAADfs/Y0z_duRuAXI0g9lllIZdNqkSwivhfFxNQCLcBGAsYHQ/s0/TestWalkL3.png",x,y,width,height);
            break
            case 3:
              image("https://1.bp.blogspot.com/-wEkBJotEXBs/X3i0TpQ3FPI/AAAAAAAADf0/cOhYgYk1C2kAgSdBCP9zHHKtT2mG5Pg9wCLcBGAsYHQ/s0/TestWalkL4.png",x,y,width,height);
            break
            case 4:
              image("https://1.bp.blogspot.com/-R-hF13xAf_o/X3i0T796thI/AAAAAAAADf4/7hZ_63Jsigsky56f2hOPd4vcP10x8O0dwCLcBGAsYHQ/s0/TestWalkL5.png",x,y,width,height);
            break
            case 5:
              image("https://1.bp.blogspot.com/-So8qh-Hapkg/X3i0Tz4CIUI/AAAAAAAADf8/LrudDGY-CsMvL-DSywaxaQYh3USPHoIsACLcBGAsYHQ/s0/TestWalkL6.png",x,y,width,height);
            break
            case 6:
              image("https://1.bp.blogspot.com/-DW7GJhZpXG4/X3i0UGKtMaI/AAAAAAAADgA/Wr7fyOFz8VsYj51WeejinU1TpiCN5XzJACLcBGAsYHQ/s0/TestWalkL7.png",x,y,width,height);
            break
            case 7:
              image("https://1.bp.blogspot.com/-VN0-naXeqx0/X3i0UijOinI/AAAAAAAADgE/bL0_3bQKhGwdjgM7TEFIJcVxxaPozNsWwCLcBGAsYHQ/s0/TestWalkL8.png",x,y,width,height);
            break
          }
        break
        case 5:
          switch(frame){
            case 0:
              image("https://1.bp.blogspot.com/-KLGiLo1kU2I/X3i0VBtWqSI/AAAAAAAADgI/zFhA4A_etBoD33ariPDt65C90w0aKx8BgCLcBGAsYHQ/s0/TestWalkR1.png",x,y,width,height);
            break
            case 1:
              image("https://1.bp.blogspot.com/-eireEYLXXjI/X3i0Vj0O6bI/AAAAAAAADgM/tviKvwBK4akiHur-yF6rT2irvrQSCO3BQCLcBGAsYHQ/s0/TestWalkR2.png",x,y,width,height);
            break
            case 2:
              image("https://1.bp.blogspot.com/-XAe7ILqxTjg/X3i0VyuglWI/AAAAAAAADgQ/x15YJ-r7VZQs3F8LlIsEjeHeP56j2uFigCLcBGAsYHQ/s0/TestWalkR3.png",x,y,width,height);
            break
            case 3:
              image("https://1.bp.blogspot.com/-EVU5805m7ow/X3i0VxC0HQI/AAAAAAAADgU/2QA0Nllb1GwFo1LGU_16uC_OYIj9pt2DACLcBGAsYHQ/s0/TestWalkR4.png",x,y,width,height);
            break
            case 4:
              image("https://1.bp.blogspot.com/-oVZdkP-Sn58/X3i0WPl8FeI/AAAAAAAADgY/gDShradgUDMNwW3NoU919GSPUNOneYfgwCLcBGAsYHQ/s0/TestWalkR5.png",x,y,width,height);
            break
            case 5:
              image("https://1.bp.blogspot.com/-fXGR8A0q0AA/X3i0WX-ycOI/AAAAAAAADgc/1ck4MiXVWmE8oaFaWBXQh833TgTQnOgAACLcBGAsYHQ/s0/TestWalkR6.png",x,y,width,height);
            break
            case 6:
              image("https://1.bp.blogspot.com/-CVbuDDNFMHM/X3i0Wbp0F6I/AAAAAAAADgg/zGj7dAoW-oUg1I3mSHkBTmNBjB_i08z_ACLcBGAsYHQ/s0/TestWalkR7.png",x,y,width,height);
            break
            case 7:
              image("https://1.bp.blogspot.com/-gI1dl7r7Lks/X3i0Wp5PTPI/AAAAAAAADgk/7cx1Djdwb1se_gUL2ryHNfcMFTkR7lG9QCLcBGAsYHQ/s0/TestWalkR8.png",x,y,width,height);
            break
          }
        break
        case 6:
          switch(frame){
            case 0:
              image("https://1.bp.blogspot.com/-ZGAKYAopC50/YFUn9TIp5pI/AAAAAAAAD50/Z-u6WWqtCuQJPMOGGAnBtoibo2HcaXO4gCLcBGAsYHQ/s0/coinF1.png",x,y,width,height);
            break
            case 1:
              image("https://1.bp.blogspot.com/-kDMLBuCWp_o/YFUn9fBMVCI/AAAAAAAAD5s/8YOYlU_s7icHCqdXlrRsB5nLkdUQgiNWwCLcBGAsYHQ/s0/coinF2.png",x,y,width,height);
            break
            case 2:
              image("https://1.bp.blogspot.com/-oOOyb6q3pno/YFUn9Z7RyJI/AAAAAAAAD5w/TeIsy5b8rFAeU4JpdPK2ynaSuWFk-4D5QCLcBGAsYHQ/s0/coinF3.png",x,y,width,height);
            break
            case 3:
              image("https://1.bp.blogspot.com/-z7KDwPeOkyA/YFUn-MtWCGI/AAAAAAAAD54/nFfUHkG7s70wSZ-bSysBEBUb_ekRwXRKwCLcBGAsYHQ/s0/coinF4.png",x,y,width,height);
            break
            case 4:
              image("https://1.bp.blogspot.com/-ejCc4266FNo/YFUn-cjAInI/AAAAAAAAD58/R7nq6pYhVyM13tAyyeFrQcgk-ANttPsSgCLcBGAsYHQ/s0/coinF5.png",x,y,width,height);
            break
            case 5:
              image("https://1.bp.blogspot.com/-Wy2qQe8Wl9E/YFUn-paV7wI/AAAAAAAAD6A/JHeh6W1qj1YtR1-jnszSBflFo-E5qTeJgCLcBGAsYHQ/s0/coinF6.png",x,y,width,height);
            break
            case 6:
              image("https://1.bp.blogspot.com/--dbGi890ZB4/YFUn-2xX0tI/AAAAAAAAD6E/BYqzqPNkDLobBa22TFH8e3-OzRerGmR0wCLcBGAsYHQ/s0/coinF7.png",x,y,width,height);
            break
            case 7:
              image("https://1.bp.blogspot.com/-L0YxJgqbtHs/YFUn_ZK8vxI/AAAAAAAAD6I/BwfLXl9YegsSoaJBQd5UXZX1iz3y4sONQCLcBGAsYHQ/s0/coinF8.png",x,y,width,height);
            break
          }
        break
        case 7:
          switch(frame){
            case 0:
              image("https://1.bp.blogspot.com/-pn_-pAwt8X4/X9eYxArS-6I/AAAAAAAADmg/i9OTgTnK68w6V5Ma2xkFDZJuqIDTY7XUwCLcBGAsYHQ/s0/coin1.png",x,y,width,height);
            break
            case 1:
              image("https://1.bp.blogspot.com/-oEZYHg7Dqro/X9eYxOCt46I/AAAAAAAADmo/VZEUIezmsVwqBs-aVAk6470W-rfJSGOJgCLcBGAsYHQ/s0/coin2.png",x,y,width,height);
            break
            case 2:
              image("https://1.bp.blogspot.com/-epJ2TA2Xy80/X9eYxMJ8EXI/AAAAAAAADmk/GC0YyvARjKwvb4SPM0TpPuoOM21iycN5ACLcBGAsYHQ/s0/coin3.png",x,y,width,height);
            break
            case 3:
              image("https://1.bp.blogspot.com/-D2bMCVZyf5E/X9eYx9mpZzI/AAAAAAAADms/AhyI7qAju1cX5YFXIsXlC7fSq6u0kpWoACLcBGAsYHQ/s0/coin4.png",x,y,width,height);
            break
            case 4:
              image("https://1.bp.blogspot.com/-Eu0hrXBLZrQ/X9eYyCiVifI/AAAAAAAADm0/LjddSBrxYkIDjlloPvYrZcNrxpmNZP4SACLcBGAsYHQ/s0/coin5.png",x,y,width,height);
            break
            case 5:
              image("https://1.bp.blogspot.com/-adqFhNQNciw/X9eYyDCxROI/AAAAAAAADmw/uD-c1hbiE00JOipoPgYWV7n7eLO_pKkowCLcBGAsYHQ/s0/coin6.png",x,y,width,height);
            break
          }
        break
        case 8:
          switch(frame){
            case 0:
              image("https://1.bp.blogspot.com/-vFmLXt2XlXQ/YClpJSGHlAI/AAAAAAAADrU/AoizO_NRuZUetGzJRJUYIl35981QTctNQCLcBGAsYHQ/s0/grass1.png",x,y,width,height);
            break
            case 1:
              image("https://1.bp.blogspot.com/-M4ZikPraNPM/YClpJoE0uZI/AAAAAAAADrY/IeSGvlD82oowsBcM-tCqOErFUm5cgyf8QCLcBGAsYHQ/s0/grass2.png",x,y,width,height);
            break
            case 2:
              image("https://1.bp.blogspot.com/-XW0TUTQgmAQ/YClpJpdqLdI/AAAAAAAADrc/uoQ35WknOO8uiQKwPXmnKDyPqCxyVGjqgCLcBGAsYHQ/s0/grass3.png",x,y,width,height);
            break
            case 3:
              image("https://1.bp.blogspot.com/-ZQwb1tEWG70/YClpKFb4utI/AAAAAAAADrg/LYZCAjapWrc1IFjqG2Vfyhe6AROiXhxOACLcBGAsYHQ/s0/grass4.png",x,y,width,height);
            break
          }
        break
        case 9:
          switch(frame){      
            case 0:
              image("https://1.bp.blogspot.com/-iZbouVgjsGs/YClpH9f1w9I/AAAAAAAADrE/URZ-1GC10L4sQ9UhGEaO4a1rw-ZOdSidgCLcBGAsYHQ/s0/flowers1.png",x,y,width,height);
            break
            case 1:
              image("https://1.bp.blogspot.com/-balVO4EZFNk/YClpIR3ornI/AAAAAAAADrI/gT4F6Y5_z4ArJ4Eye5MRqC56lfBI4hw0gCLcBGAsYHQ/s0/flowers2.png",x,y,width,height);
            break
            case 2:
              image("https://1.bp.blogspot.com/-E6IWUPBdeT4/YClpI3DLz3I/AAAAAAAADrM/RaKiVnwIKx4prhYD3RThpIyZET5DPaumwCLcBGAsYHQ/s0/flowers3.png",x,y,width,height);
            break
            case 3:
              image("https://1.bp.blogspot.com/-d36Ja6esvRA/YClpJHetQgI/AAAAAAAADrQ/sA_xl5jEH2gG772gC26chsp0AmrXWA6KwCLcBGAsYHQ/s0/flowers4.png",x,y,width,height);
            break
          }
        break
        case 10://idle main
          switch(frame){
            case 0:
              image("https://1.bp.blogspot.com/-gpBNmtqvAD0/YEe1Nt3TJ9I/AAAAAAAADy4/vVKc1NCDxmAONntJOnYC8_2Ums-cbwmzACLcBGAsYHQ/s0/chIdle1.png",x,y,width,height);
            break
            case 1:
              image("https://1.bp.blogspot.com/-c92B6BOZ5XE/YEe1NhtE2LI/AAAAAAAADyw/8cG823hE1scO16l886Co8yWC6g4rgJpRwCLcBGAsYHQ/s0/chIdle2.png",x,y,width,height);
            break
            case 2:
              image("https://1.bp.blogspot.com/-eBzNb2edcy0/YEe1Nu9O0iI/AAAAAAAADy0/tDpuuVr8HiwFlf8F3WHwe-xDVSOkGtXCQCLcBGAsYHQ/s0/chIdle3.png",x,y,width,height);
            break
            case 3:
              image("https://1.bp.blogspot.com/-6X-Hg8IpUqc/YEe1OdwUu9I/AAAAAAAADy8/0nZtlqjriUA2h3CBPn2MtynD4gAMD6JJwCLcBGAsYHQ/s0/chIdle4.png",x,y,width,height);
            break
            case 4:
              image("https://1.bp.blogspot.com/-EBlQD1G3F1A/YEe1OlN28NI/AAAAAAAADzA/o7_KhP5BDCMzDZNnC0DnNftMaqBkrlY5ACLcBGAsYHQ/s0/chIdle5.png",x,y,width,height);
            break
            case 5:
              image("https://1.bp.blogspot.com/-Z5PmWansDAk/YEe1OzoJxtI/AAAAAAAADzE/2Eox8chwLIAqJgkNhchewMxs1_akKMqVQCLcBGAsYHQ/s0/chIdle6.png",x,y,width,height);
            break
          }
        break
        case 11://run right
          switch(frame){
            case 0:
              image("https://1.bp.blogspot.com/-39eKcy2WiWI/YEzyQq6KxlI/AAAAAAAAD0c/X6aiQaVjyL863r7kXgv97DDSkSLi8Bq5ACLcBGAsYHQ/s0/runD1.png",x,y,width,height);
            break
            case 1:
              image("https://1.bp.blogspot.com/-ZVVj-tllapw/YEzyQgOCsxI/AAAAAAAAD0g/7ey9EffVwKAtWxUQ6nNJqX9w9zenMns1QCLcBGAsYHQ/s0/runD2.png",x,y,width,height);
            break
            case 2:
              image("https://1.bp.blogspot.com/-dB3GvkfdRAY/YEzyQpKGR1I/AAAAAAAAD0k/XIdBJD_HD5IuqsLJIzE25ULoCgJ32EkZQCLcBGAsYHQ/s0/runD3.png",x,y,width,height);
            break
            case 3:
              image("https://1.bp.blogspot.com/-RzMvoVzE1p0/YEzyRV6Wp3I/AAAAAAAAD0o/kae-0KUDd4QaU282jtZPyKN_pdT6rt7FwCLcBGAsYHQ/s0/runD4.png",x,y,width,height);
            break
            case 4:
              image("https://1.bp.blogspot.com/-Kwnk1uYpK78/YEzyRfgcJgI/AAAAAAAAD0s/ULTQUYmCjc03HnzJPR3aioDw06U6pvchgCLcBGAsYHQ/s0/runD5.png",x,y,width,height);
            break
            case 5:
              image("https://1.bp.blogspot.com/-lkoVInuWIJg/YEzyRqwHEbI/AAAAAAAAD0w/CCp8dLDGwZQoaHvqBPf_M1liCbuYLg3AgCLcBGAsYHQ/s0/runD6.png",x,y,width,height);
            break
            case 6:
              image("https://1.bp.blogspot.com/-jLyPHgbsIds/YEzyR2UWEbI/AAAAAAAAD00/xXEvpUeNirMS47nmfEmPmgnRduxITH7BACLcBGAsYHQ/s0/runD7.png",x,y,width,height);
            break
            case 7:
              image("https://1.bp.blogspot.com/-pABEZoif6ck/YEzySFTwSxI/AAAAAAAAD04/sZpW5mL4JNQdGqvEopEB8xvWYqeibWJsgCLcBGAsYHQ/s0/runD8.png",x,y,width,height);
            break
          }
    		break
        case 12://run left
          switch(frame){
            case 0:
              image("https://1.bp.blogspot.com/-4y1VDO0MRDI/YEzySb3vuMI/AAAAAAAAD08/_rBBFV0ec7Eg7CErfk5p0qJru2bVC2VhgCLcBGAsYHQ/s0/runL1.png",x,y,width,height);
            break
            case 1:
              image("https://1.bp.blogspot.com/-TuURIDJuSr4/YEzySW61a7I/AAAAAAAAD1A/ij156RPSI4s6s0trK6tdTk1mo3-fo1lRwCLcBGAsYHQ/s0/runL2.png",x,y,width,height);
            break
            case 2:
              image("https://1.bp.blogspot.com/-MxEIJI-UYcE/YEzySkIa0UI/AAAAAAAAD1E/SNnmPkUUcKo2uk9Ay2m4z2xslJ8-yfjegCLcBGAsYHQ/s0/runL3.png",x,y,width,height);
            break
            case 3:
              image("https://1.bp.blogspot.com/-mSCec0ySErg/YEzyTDhQ8FI/AAAAAAAAD1M/wvR3HFuCsP0REATkJ-gfaoIeIXCujMq6wCLcBGAsYHQ/s0/runL4.png",x,y,width,height);
            break
            case 4:
              image("https://1.bp.blogspot.com/-rdCsYGw4Twk/YEzyTCrqTOI/AAAAAAAAD1I/80sLfCUHZmY3C12phuEFr4SSOR6oR7GcwCLcBGAsYHQ/s0/runL5.png",x,y,width,height);
            break
            case 5:
              image("https://1.bp.blogspot.com/-vr3tSct1B4I/YEzyTWvDygI/AAAAAAAAD1Q/9OxllYwPVWkCSaahcz5jX5Vs4ZD5twd4ACLcBGAsYHQ/s0/runL6.png",x,y,width,height);
            break
            case 6:
              image("https://1.bp.blogspot.com/-iOxXWJKN4nA/YEzyThR5LGI/AAAAAAAAD1U/Yq0_ylLUUpAkNPDGiMRPG89jwOoBBtSpACLcBGAsYHQ/s0/runL7.png",x,y,width,height);
            break
            case 7:
              image("https://1.bp.blogspot.com/-tr3nZzvIJyU/YEzyUKkW3EI/AAAAAAAAD1Y/YPyANoslLgIj9bxuIrCFDkBEA7DU8oznACLcBGAsYHQ/s0/runL8.png",x,y,width,height);
            break
          }
    		break
        case 13://jump
          switch(frame){
            case 0:
              image("https://1.bp.blogspot.com/-0iVly2eo7Ro/YEz3r9Iv4XI/AAAAAAAAD2A/ar3FuErNZdkhkAISdqfUzJVW7A1hSswugCLcBGAsYHQ/s0/jump1.png",x,y,width,height);
            break
            case 1:
              image("https://1.bp.blogspot.com/-xP5w1Eo1qOU/YEz3sI61zLI/AAAAAAAAD2E/au2g-VHQAAcq5Xk8eZyWsDQjDaCJQcalACLcBGAsYHQ/s0/jump2.png",x,y,width,height);
            break
            case 2:
              image("https://1.bp.blogspot.com/-HKh65Cp9SMc/YEz3sceqKRI/AAAAAAAAD2I/RmPl3R3Q4mUJkcWuOeziW6cKQW1PW6xNQCLcBGAsYHQ/s0/jump3.png",x,y,width,height);
            break
          }
    		break
        case 14://fall
          switch(frame){
            case 0:
              image("https://1.bp.blogspot.com/-LbCSR5ffu8w/YEz3rFEJhVI/AAAAAAAAD10/8E0RZaMCSQ4TyZ12d7iZElKaraL-pSXgACLcBGAsYHQ/s0/fall1.png",x,y,width,height);
            break
            case 1:
              image("https://1.bp.blogspot.com/-YzobuPGdUzE/YEz3rS3iGBI/AAAAAAAAD18/ZpjT9IPZAHQHnTVx__xXRqy5LwsknCIWACLcBGAsYHQ/s0/fall2.png",x,y,width,height);
            break
            case 2:
              image("https://1.bp.blogspot.com/-Tns3xrYpJyo/YEz3rYfdLKI/AAAAAAAAD14/ymfF7Gwv-M4E0ZJWP3gid0aKve-HqXaxwCLcBGAsYHQ/s0/fall3.png",x,y,width,height);
            break
          }
    		break
        case 15://runD roca
          switch(frame){
            case 0:
              image("https://1.bp.blogspot.com/--giJEDtWyFY/YEz7qGwV9cI/AAAAAAAAD2k/goNCMh7CGL4kfJj8kvNFEkFfAnrqFRGkgCLcBGAsYHQ/s0/runD1.png",x,y,width,height);
            break
            case 1:
              image("https://1.bp.blogspot.com/-CDUnqBF6-bk/YEz7qGFjxiI/AAAAAAAAD2c/N8bAFyWRTjYr2sj7zuO2vllQg9aLJCvrwCLcBGAsYHQ/s0/runD2.png",x,y,width,height);
            break
            case 2:
              image("https://1.bp.blogspot.com/-SnEoCtLlibc/YEz7q3_ojRI/AAAAAAAAD2o/GLVMr3VEPOgd2Uq5FyejJrtSv6BX5an_ACLcBGAsYHQ/s0/runD3.png",x,y,width,height);
            break
            case 3:
              image("https://1.bp.blogspot.com/-GMYDDKTcU44/YEz7rN8ruEI/AAAAAAAAD2s/1sL4y-0c1OQECcD_x1Rjsucr2oSldQUJACLcBGAsYHQ/s0/runD4.png",x,y,width,height);
            break
          }
    		break
        case 16://runL roca
          switch(frame){
            case 0:
              image("https://1.bp.blogspot.com/-Z1AFdRHFEeU/YEz7rcX2F_I/AAAAAAAAD2w/7B6wcksYGas0wtCulybc8mlnlydyUOPBgCLcBGAsYHQ/s0/runL1.png",x,y,width,height);
            break
            case 1:
              image("https://1.bp.blogspot.com/-w6v78Pdy1Mk/YEz7rnF13cI/AAAAAAAAD20/YPuam_z7-bse9H1b26UZz6VTcN7gQEANACLcBGAsYHQ/s0/runL2.png",x,y,width,height);
            break
            case 2:
              image("https://1.bp.blogspot.com/-ICJrHWViNPs/YEz7r-2Yl0I/AAAAAAAAD24/ljWk79muBZQ5F5MhnKfVkNeAvtUdokd8gCLcBGAsYHQ/s0/runL3.png",x,y,width,height);
            break
            case 3:
              image("https://1.bp.blogspot.com/-o_3os-Xrges/YEz7sMhozyI/AAAAAAAAD28/WGlNIj1Gh64FW1rbw-movSVFlwlDuj05ACLcBGAsYHQ/s0/runL4.png",x,y,width,height);
            break
          }
    		break
        case 17://jump particle
          switch(frame){
            case 0:
              image("https://1.bp.blogspot.com/-6qfka3_JbkQ/YFPZjkOxZcI/AAAAAAAAD4k/Qz-W-Pg4OjceR0QQZ3eFu0ikdwobIswgQCLcBGAsYHQ/s0/testJump1.png",x,y,width,height);
            break
            case 1:
              image("https://1.bp.blogspot.com/-g8rtWPnAVXA/YFPZjhzptrI/AAAAAAAAD4c/QQFg-8OkAe0wV2oJanJF7dyPS19b00sGACLcBGAsYHQ/s0/testJump2.png",x,y,width,height);
            break
            case 2:
              image("https://1.bp.blogspot.com/-jkTfEmACQPM/YFPZjtEHD4I/AAAAAAAAD4g/AR4on4PdlioGG5GoecR8n9DUBERUdDqvQCLcBGAsYHQ/s0/testJump3.png",x,y,width,height);
            break
            case 3:
              image("https://1.bp.blogspot.com/-WvxZawu5Ml0/YFPZk879YuI/AAAAAAAAD4o/DYjLUgL20L4zLsKfIem4EuNumRGNB7xNwCLcBGAsYHQ/s0/testJump4.png",x,y,width,height);
            break
          }
    		break
        case 18://landing particle
          switch(frame){
            case 0:
              image("https://1.bp.blogspot.com/-H-n40pbby6g/YFPdZLUGZOI/AAAAAAAAD44/uoYkC50MmesADfQJYHI-0HwXknoiXNXZQCLcBGAsYHQ/s0/landingTest1.png",x,y,width,height);
            break
            case 1:
              image("https://1.bp.blogspot.com/-o4bjGtlwUkA/YFPdZM7c_UI/AAAAAAAAD48/zVwa998uIDwSIFvZsPJgb4Tkx3cOJkDswCLcBGAsYHQ/s0/landingTest2.png",x,y,width,height);
            break
            case 2:
              image("https://1.bp.blogspot.com/-rjqkej9gwGg/YFPdZHaZieI/AAAAAAAAD5A/N2akZc2K16s4aQrrjwzoufV1m5YwxbRDACLcBGAsYHQ/s0/landingTest3.png",x,y,width,height);
            break
            case 3:
              image("https://1.bp.blogspot.com/-bNb0K82UbbA/YFPdZ1meRAI/AAAAAAAAD5E/cCBRt2gCF6IhnOPwUWveke6S8CWqjOFUQCLcBGAsYHQ/s0/landingTest4.png",x,y,width,height);
            break
          }
    		break
        case 19://fuego
          switch(frame){
            case 0:
              image("https://1.bp.blogspot.com/--KN9RW8uFVE/YFYog6ajRbI/AAAAAAAAD7o/nW_xMdyYr2kpPCjJBADFZ0XpRzzMeD_zwCLcBGAsYHQ/s0/fire1.png",x,y,width,height);
            break
            case 1:
              image("https://1.bp.blogspot.com/-w63QN55ZBwc/YFYohmnV7WI/AAAAAAAAD70/aCKnsPDz12w-X7fulVD3X0vKJN0jE9QpgCLcBGAsYHQ/s0/fire2.png",x,y,width,height);
            break
            case 2:
              image("https://1.bp.blogspot.com/-cpXAlof3zZg/YFYohiBlaGI/AAAAAAAAD74/Ne8T7X2PW0IQ0lrbF_jYOkepFNss4NIBACLcBGAsYHQ/s0/fire3.png",x,y,width,height);
            break
            case 3:
              image("https://1.bp.blogspot.com/-4C5Jk1u8DLI/YFYoh9oZumI/AAAAAAAAD78/xRpptxdS1MoND-mNuQwUAL8Y7bEOnh07gCLcBGAsYHQ/s0/fire4.png",x,y,width,height);
            break
            case 4:
              image("https://1.bp.blogspot.com/-kJEaXgXGVFM/YFYoiO_-IjI/AAAAAAAAD8A/bxI2Fqj7slY1xjxc_eYVSNECNh_wh9mXgCLcBGAsYHQ/s0/fire5.png",x,y,width,height);
            break
            case 5:
              image("https://1.bp.blogspot.com/-8XjWnBvtvYU/YFYoicZevnI/AAAAAAAAD8E/rlARMiQfjVMB4qFRhKZaIoXqVS0ocGN1wCLcBGAsYHQ/s0/fire6.png",x,y,width,height);
            break
            case 6:
              image("https://1.bp.blogspot.com/-45WZHfNLeQU/YFYoi2VEdvI/AAAAAAAAD8I/QzFVr0XeHJgtaiRsAmXQY_uvlurAs3BaACLcBGAsYHQ/s0/fire7.png",x,y,width,height);
            break
            case 7:
              image("https://1.bp.blogspot.com/-699-SJLj9rQ/YFYojOoznFI/AAAAAAAAD8M/6l69qSMxxYcHOW35lEAeLzVQtt1GDx2vQCLcBGAsYHQ/s0/fire8.png",x,y,width,height);
            break
          }
    		break
        case 20://bandera
          switch(frame){
            case 0:
              image("https://1.bp.blogspot.com/-hymICyoX9Q4/YFYojQ-vaRI/AAAAAAAAD8Q/l2icXwcDXZcKf8O5AZ5iquCtbYUzQpAMACLcBGAsYHQ/s0/flagAni1.png",x,y,width,height);
            break
            case 1:
              image("https://1.bp.blogspot.com/-XaLrpUSLhWY/YFYojs-nZzI/AAAAAAAAD8U/lrov5jDvifs8zXFv-tmog04XHTLHGI4HwCLcBGAsYHQ/s0/flagAni2.png",x,y,width,height);
            break
            case 2:
              image("https://1.bp.blogspot.com/-LLJ7hXvSmZ4/YFYoj51DixI/AAAAAAAAD8Y/YfiXnuDFg2ARP5HULNsCTywVf05EJRX1QCLcBGAsYHQ/s0/flagAni3.png",x,y,width,height);
            break
            case 3:
              image("https://1.bp.blogspot.com/-SgzVrW7SrdI/YFYoj4Rlv5I/AAAAAAAAD8c/kRsp23JvM_w7MJCD4iV2GdvjKMl0W2dXwCLcBGAsYHQ/s0/flagAni4.png",x,y,width,height);
            break
            case 4:
              image("https://1.bp.blogspot.com/-nJ-zaWM_5es/YFYokECWonI/AAAAAAAAD8g/OGIasgRaVxwWkmvMpk7BQEkSxzmx3f9owCLcBGAsYHQ/s0/flagAni5.png",x,y,width,height);
            break
            case 5:
              image("https://1.bp.blogspot.com/-LESx1WGszy4/YFYokQ-e6XI/AAAAAAAAD8k/jZk89ttytTkT0PvmuXrd8TIK8lAzRp9rwCLcBGAsYHQ/s0/flagAni6.png",x,y,width,height);
            break
          }
    		break
        case 21://slime idle
          switch(frame){
            case 0:
              image("https://1.bp.blogspot.com/-FYGscL7eSto/YGcUfRMXUZI/AAAAAAAAEJo/NxAhS-NgpUs8P1_pysQxNAudLrWC-ADLACLcBGAsYHQ/s0/slime1.png",x,y,width,height);
            break
            case 1:
              image("https://1.bp.blogspot.com/-yh6SWon2f9M/YGcUfmn0-NI/AAAAAAAAEJs/zXUGX86Jrbc6B03hMO8LAwBbmqCvvZjsACLcBGAsYHQ/s0/slime2.png",x,y,width,height);
            break
            case 2:
              image("https://1.bp.blogspot.com/-HFgQ5Mv3HFg/YGcUgLsdCdI/AAAAAAAAEJw/OqBA1MOkQdYCx9oQKCP2MDJSjvEtSJycQCLcBGAsYHQ/s0/slime3.png",x,y,width,height);
            break
            case 3:
              image("https://1.bp.blogspot.com/-In21LvpmxjI/YGcUgcz7vgI/AAAAAAAAEJ0/YT-FxmCfUG0CNOEw-ZRc2YtRiow_u1VGwCLcBGAsYHQ/s0/slime4.png",x,y,width,height);
            break
          }
    		break
        case 22://fish left
      	switch(frame){
            case 0:
              image("https://1.bp.blogspot.com/-DN6_SEa-kg0/YGcUd4HnjJI/AAAAAAAAEJQ/kfZHP8eYU8wdPzqX2PeKIAGI7wOJ768iwCLcBGAsYHQ/s20/leftFish1.png",x,y,width,height);
            break
            case 1:
              image("https://1.bp.blogspot.com/-G-BE-PKd4l0/YGcUeL_WYYI/AAAAAAAAEJU/J9HVdTqNGzoHbplhWREIsqAJN7JrN-YXACLcBGAsYHQ/s0/leftFish2.png",x,y,width,height);
            break
            case 2:
              image("https://1.bp.blogspot.com/-OXeBjaR6GYM/YGcUeUnMG8I/AAAAAAAAEJY/MqNdMqQlY-AVvAlIg2dul68PlnoOFgl7ACLcBGAsYHQ/s20/leftFish3.png",x,y,width,height);
            break
          }
        break
        case 23://fish right
          switch(frame){
            case 0:
              image("https://1.bp.blogspot.com/-VdKUAQv47Ww/YGcUe0oL1UI/AAAAAAAAEJc/Mm2qsdYukRsc3Oa21N0uZQLu7KztQ9bFQCLcBGAsYHQ/s0/rightFish1.png",x,y,width,height);
            break
            case 1:
              image("https://1.bp.blogspot.com/-Aev-8Wqmn_E/YGcUfE8FKtI/AAAAAAAAEJg/PK3zm45oPxEdKLcJjh6ZF0U5QPQ072iAgCLcBGAsYHQ/s0/rightFish2.png",x,y,width,height);
            break
            case 2:
              image("https://1.bp.blogspot.com/-g8pyW2Qc6CA/YGcUfS2L7eI/AAAAAAAAEJk/kYyWsa8c5JQHqpdRIhkPLZ0a_zRNbd3UACLcBGAsYHQ/s0/rightFish3.png",x,y,width,height);
            break
          }
        break 
        case 24://calamar up
          switch(frame){
            case 0:
              image("https://1.bp.blogspot.com/-QjxcK-uWzsQ/YGcUYkZoqrI/AAAAAAAAEIg/Hlc5wB80Jq8w5RrI-Z3gd0FxKY0MyxfqgCLcBGAsYHQ/s0/calamar1.png",x,y,width,height);
            break
            case 1:
              image("https://1.bp.blogspot.com/-tEyV7hVfmjI/YGcUYu0t3tI/AAAAAAAAEIc/KdcgkPJu7BgFLXhDMU46LaXLhgdvl-ZhACLcBGAsYHQ/s0/calamar2.png",x,y,width,height);
            break
            case 2:
              image("https://1.bp.blogspot.com/-CzShtmwvAXk/YGcUYkfoM3I/AAAAAAAAEIY/nHydVzY9yega0BUHzlEjv23DCRCpyq59QCLcBGAsYHQ/s0/calamar3.png",x,y,width,height);
            break
            case 3:
              image("https://1.bp.blogspot.com/-VzeSPinEeKM/YGcUZuYB84I/AAAAAAAAEIk/4W3SAr3zsjUH0BfiM1Qsh1u8YwTxwO5hwCLcBGAsYHQ/s0/calamar4.png",x,y,width,height);
            break
            case 4:
              image("https://1.bp.blogspot.com/-unszddx5Djw/YGcUaPM5P9I/AAAAAAAAEIo/aadhNwA8dW8eXkd5z4Lb6JDRv7yF2vgvwCLcBGAsYHQ/s0/calamar5.png",x,y,width,height);
            break
            case 5:
              image("https://1.bp.blogspot.com/-PRgGh7MKcBI/YGcUaozOYKI/AAAAAAAAEIs/n8CL2INFZfwWI4GPBnNa4QbiT_9Hir5awCLcBGAsYHQ/s0/calamar6.png",x,y,width,height);
            break
            case 6:
              image("https://1.bp.blogspot.com/-ojCspoRZ7rE/YGcUbD1z6xI/AAAAAAAAEIw/9Fp4p1al51860oZGPj_nUb5vEt0VjD59gCLcBGAsYHQ/s0/calamar7.png",x,y,width,height);
            break
          }
        break
        case 25://calamar down
          switch(frame){
            case 0:
              image("https://1.bp.blogspot.com/-1bv1TzHWRAo/YGcUbvbsUwI/AAAAAAAAEI0/3OBbmKG-fzQuQsDOfTruxEpSiALT7fzHgCLcBGAsYHQ/s0/calamarD1.png",x,y,width,height);
            break
            case 1:
              image("https://1.bp.blogspot.com/-1wMrvogoutk/YGcUcJP8YUI/AAAAAAAAEI4/UZv6RYXVJ2sotiXOaOto5gb5QXztAOo6wCLcBGAsYHQ/s0/calamarD2.png",x,y,width,height);
            break
            case 2:
              image("https://1.bp.blogspot.com/-NAu-rIkPQ4k/YGcUco-hXkI/AAAAAAAAEI8/B0DJnAHucUovHxmY0MeeXumr1PvZ9iuPACLcBGAsYHQ/s0/calamarD3.png",x,y,width,height);
            break
            case 3:
              image("https://1.bp.blogspot.com/-nKo4Ow6HoUM/YGcUdO1_1-I/AAAAAAAAEJA/bpCBa-xnpNgB6HhnSiVpepeEBBBz_upcACLcBGAsYHQ/s0/calamarD4.png",x,y,width,height);
            break
            case 4:
              image("https://1.bp.blogspot.com/-1MRzC6DiU4k/YGcUdU-di_I/AAAAAAAAEJE/Shv023y_n5UVeoi1ZZc5qDptnLciiPnVACLcBGAsYHQ/s0/calamarD5.png",x,y,width,height);
            break
            case 5:
              image("https://1.bp.blogspot.com/-Pgt9E77VVuI/YGcUdSef5YI/AAAAAAAAEJI/Q96EJk_QRzAfjXfdWmjfEv0RfgtKRWTwwCLcBGAsYHQ/s0/calamarD6.png",x,y,width,height);
            break
            case 6:
              image("https://1.bp.blogspot.com/-hCOidTCJYXM/YGcUduPa1QI/AAAAAAAAEJM/b4TD9zUvOiASBvni8yzkSmsaXaUnZTHgACLcBGAsYHQ/s0/calamarD7.png",x,y,width,height);
            break
          }
        break
        case 26://gota Lava arriba
          switch(frame){
            case 0:
              image("https://1.bp.blogspot.com/-r2EkN2VxS0Q/YG3jXveZiEI/AAAAAAAAEOE/wlv9CD1_N2ovNGPgEF7we7fNoQx5u5cfwCLcBGAsYHQ/s10/fireBallUp1.png",x,y,width,height);
            break
            case 1:
              image("https://1.bp.blogspot.com/-jHROs-M2r0g/YG3jXzoT9BI/AAAAAAAAEOI/686KHx-y7yAMxp4JP3NfhRcq7teadmwhACLcBGAsYHQ/s0/fireBallUp2.png",x,y,width,height);
            break
          }
    		break
        case 27://gota Lava abajo
          switch(frame){
            case 0:
              image("https://1.bp.blogspot.com/-Py5sFyedXSY/YG3jWgziGFI/AAAAAAAAEN8/40b2NTnqqUQJ_A_v2QOTXFdh8Tmih5MGACLcBGAsYHQ/s10/fireBallDown1.png",x,y,width,height);
            break
            case 1:
              image("https://1.bp.blogspot.com/-bTiyxZg3KwE/YG3jXPcZylI/AAAAAAAAEOA/WsqtVFL9npwLNF4TQUkx1MceF9Tx2bnJwCLcBGAsYHQ/s0/fireBallDown2.png",x,y,width,height);
            break
          }
        break
        case 28://magma slime
          switch(frame){
            case 0:
              image("https://1.bp.blogspot.com/-IPrhQXoxrVs/YG3jYPwDuFI/AAAAAAAAEOM/zGrLoPsm_E4RxamqnMV4C3HrV3-Tj9wQACLcBGAsYHQ/s15/lavaSlime1.png",x,y,width,height);
            break
            case 1:
              image("https://1.bp.blogspot.com/-m4FN9tvkpls/YG3jYP0Kk9I/AAAAAAAAEOQ/ZWOuwejAq4chpQazR3vtFCNpJGlw6EGQQCLcBGAsYHQ/s15/lavaSlime2.png",x,y,width,height);
            break
            case 2:
              image("https://1.bp.blogspot.com/-7Flosl_G0xg/YG3jYdYKUrI/AAAAAAAAEOU/QUqohsY9pY8fvqTrOfTfQ-PLqidX-RSjwCLcBGAsYHQ/s0/lavaSlime3.png",x,y,width,height);
            break
            case 3:
              image("https://1.bp.blogspot.com/-z6Rt0irGDNY/YG3jYmMj-eI/AAAAAAAAEOY/JCcugugHjY4HTLwzj8kYSxfsceseuW4RACLcBGAsYHQ/s15/lavaSlime4.png",x,y,width,height);
            break
          }
        break
        case 29://saw
          switch(frame){
            case 0:
              image("https://1.bp.blogspot.com/-XAOs1Txa9ww/YG3jY1Mo9KI/AAAAAAAAEOg/92LEmA7z8q0mziPPWo0_IN7ojIVFU2CfACLcBGAsYHQ/s0/saw1.png",x,y,width,height);
            break
            case 1:
              image("https://1.bp.blogspot.com/-JnqrwWa7Crc/YG3jZc90HtI/AAAAAAAAEOk/OiNfQcGivuYg9dS5SNxiI-7bTZF7MSJiACLcBGAsYHQ/s0/saw2.png",x,y,width,height);
            break
          }
        break
        case 30://roca flotante
          switch(frame){
            case 0:
              image("https://1.bp.blogspot.com/-VivurJS0sfw/YHM818-jA-I/AAAAAAAAESo/dJ84b2DrQrk6_WvwIy85ecwf5UUZdUZhACLcBGAsYHQ/s0/floating%2Brock1.png",x,y,width,height);
            break
            case 1:
              image("https://1.bp.blogspot.com/-bpYWUEwa0ps/YHM814KW6II/AAAAAAAAESs/Yh6DfS5lI_YcVU3EiittQp4TOcvo7ltpACLcBGAsYHQ/s0/floating%2Brock2.png",x,y,width,height);
            break
            case 2:
              image("https://1.bp.blogspot.com/-qlemm3GXwN0/YHM818n12rI/AAAAAAAAESk/YWZpA95E3-0W-SzA7So2rxEzfHVfPikGQCLcBGAsYHQ/s0/floating%2Brock3.png",x,y,width,height);
            break
            case 3:
              image("https://1.bp.blogspot.com/-Jet4KM7-N0M/YHM82QJ9FxI/AAAAAAAAESw/K_cUorsLGZkvzCUj86Yb2oAXlYpJa8koACLcBGAsYHQ/s0/floating%2Brock4.png",x,y,width,height);
            break
          }
        break
        case 31://turret flotante
          switch(frame){
            case 0:
              image("https://1.bp.blogspot.com/-XZwgT1H4u_A/YHM82dVzNfI/AAAAAAAAES0/bXmsR46Ovjw48iH8K3eez2HmN4YGTMljACLcBGAsYHQ/s0/floatingTurretRock1.png",x,y,width,height);
            break
            case 1:
              image("https://1.bp.blogspot.com/-snnCjAIhW7c/YHM82mpHXFI/AAAAAAAAES4/x-uhBCzfoW8MbIRpHhSf02zw222sSILJgCLcBGAsYHQ/s0/floatingTurretRock2.png",x,y,width,height);
            break
            case 2:
              image("https://1.bp.blogspot.com/--w0rOANyIX0/YHM8251u3yI/AAAAAAAAES8/kAn1QEVjOowochG3WWcIWLTr-BPlflDTwCLcBGAsYHQ/s0/floatingTurretRock3.png",x,y,width,height);
            break
            case 3:
              image("https://1.bp.blogspot.com/-PB-Wuz8ANbA/YHM824YydKI/AAAAAAAAETA/gM98rNW4cpAG0Y4gyJf0CmcJI3aZsheTACLcBGAsYHQ/s0/floatingTurretRock4.png",x,y,width,height);
            break
          }
        break
      }
    }
    /*
    	case x://template
      	switch(frame){
          case 0:
            image("",x,y,width,height);
          break
          case 1:
            image("",x,y,width,height);
          break
          case 2:
            image("",x,y,width,height);
          break
          case 3:
            image("",x,y,width,height);
          break
      	}
    	break
    */
    
    if(timer >= dur*nFrames-1){
    	timer = 0;
      //desactiva la animacion si es de una vez
      if(animateOnce){
        active = false;
      }
    }    
  }
}

class tile{
  int ID;
  int[] trigger;
  
  double specialY = 0;
  
  animation aniTile;
  
  boolean[] sides = {true,true,true,true};
  
  tile(int ID){
    this.ID = ID;
    this.trigger = new int[0];

    this.setup();
  }
  
  public void setup(){
    switch(ID){
      case 20:
      	aniTile = new animation(8,8,4);
      	aniTile.vel = 1;
      break
      case 40:
      	aniTile = new animation(9,8,4);
      	aniTile.vel = 1;
      break
      case 9001:
      	aniTile = new animation(6,4,8);
      	aniTile.vel = 1;
      break
      case 1006:
      	aniTile = new animation(19,4,8);
      	aniTile.vel = 1;
      break
      case 1009:
      	aniTile = new animation(20,4,6);
      	aniTile.vel = 1;
      break
    }
  }
  
  public void setupSides(int i, int j, tile[][] Tiles){
    trigger = getTriggersFromID(ID);
    sides[0] = true;
    sides[1] = true;
    sides[2] = true;
    sides[3] = true;
    if(i != 0 && Tiles[i-1][j].hasTrigger(1)){
     	sides[0] = false;
    }
    if(i != sizeOf(Tiles,1)-1 && Tiles[i+1][j].hasTrigger(1)){
      sides[1] = false;
    }
    if(j != 0 && Tiles[i][j-1].hasTrigger(1)){
      sides[2] = false;
    }
    if(j != sizeOf(Tiles,2)-1 && Tiles[i][j+1].hasTrigger(1)){
    	sides[3] = false;
    }
  }
  
  public boolean hasTrigger(int tr){
    if(searchNum(trigger,tr) > 0){
      return true
    }
    return false
  }
  
  public boolean hasNotTrigger(int tr){
    if(searchNum(trigger,tr) == 0){
      return true
    }
    return false
  }
  
  public void render(double x, double y){
    noFill();
    noStroke();
    if(this.ID >= 9050 && this.ID < 9999){
      image("https://1.bp.blogspot.com/-4Q0ozCntDD0/YFzM_oV2jVI/AAAAAAAAEBg/heCqwt9L5g4_WwiZH4Yv7CDfOoHP05mIQCLcBGAsYHQ/s0/coleccionable.png",
              x,y,TileSize,TileSize);
    }
    switch(this.ID){ 
      case 9999:
      	image("https://1.bp.blogspot.com/-wwuhqWYqj9E/YHL8zQV1aII/AAAAAAAAEP8/X6bPu32tjDs7Q0vjCy1zAg-oqBPi7-QMACLcBGAsYHQ/s0/skullFinal.png",x,y,TileSize,TileSize);
      break
      case 1:
      image("https://1.bp.blogspot.com/-Wcf2LZ5qiOY/YClo9BLEiTI/AAAAAAAADo0/666agnYBn7MEgUpQdMm_In-VunpQwfj6ACLcBGAsYHQ/s0/Earth1.png",x,y,TileSize,TileSize);
      break
      case 2:
      image("https://1.bp.blogspot.com/-tyvVrJNBIH0/YClo_86KTgI/AAAAAAAADpY/85j7iB6l3dYJ2kkwbtD3nn0_I43qB3QgQCLcBGAsYHQ/s0/Earth2.png",x,y,TileSize,TileSize);
      break
      case 3:
      image("https://1.bp.blogspot.com/-zVJ0GLyZlOM/YClpC3rc5ZI/AAAAAAAADp8/zZKoMpwdkyktGRszYDueBS4nMceUynpHwCLcBGAsYHQ/s0/Earth3.png",x,y,TileSize,TileSize);
      break
      case 4:
      image("https://1.bp.blogspot.com/-CDVCzwNkVZw/YClpGAiy0XI/AAAAAAAADqo/UHwjnXjGpyAJOJ5_JHKU7pwcjz9A1-NsgCLcBGAsYHQ/s0/Earth4.png",x,y,TileSize,TileSize);
      break
      case 5:
      image("https://1.bp.blogspot.com/-NlUzYafc_hc/YClpGXTH5DI/AAAAAAAADqw/3I2XTu-6KCofdr2VDwLvbWBTD9iHnok6gCLcBGAsYHQ/s0/Earth5.png",x,y,TileSize,TileSize);
      break
      case 6:
      image("https://1.bp.blogspot.com/-2TdPH7F0m6Y/YClpG42RoPI/AAAAAAAADq0/jNgy6q9tEaAdewVqrOLFRjeipDOZi4b0gCLcBGAsYHQ/s0/Earth6.png",x,y,TileSize,TileSize);
      break
      case 7:
      image("https://1.bp.blogspot.com/-tewB_iyWBsQ/YClxtKyyH9I/AAAAAAAADsE/vxny2qeHcmI8VCbuL1l7pboBM5SpZllxgCLcBGAsYHQ/s0/Earth7.png",x,y,TileSize,TileSize);
      break
      case 8:
      image("https://1.bp.blogspot.com/-izKJxDpEZYI/YClxtNIOC2I/AAAAAAAADsI/seyoDh3u0RIMiPUb7GFwhx-Mki4MUnghwCLcBGAsYHQ/s0/Earth8.png",x,y,TileSize,TileSize);
      break
      case 9:
      image("https://1.bp.blogspot.com/-Hr28EEvHvmI/YClxt7m0udI/AAAAAAAADsM/AnFIDb_ISK0vho-286N4DLpqzbUNk73NACLcBGAsYHQ/s0/Earth9.png",x,y,TileSize,TileSize);
      break
      case 10:
      image("https://1.bp.blogspot.com/-ie6jqLVrNkQ/YClo85Q_QPI/AAAAAAAADow/ckl4XcJentYOYRdpiY27s0IUynbRIgteACLcBGAsYHQ/s0/Earth10.png",x,y,TileSize,TileSize);
      break
      case 11:
      image("https://1.bp.blogspot.com/-lqh6N0oP18c/YClo80MqpXI/AAAAAAAADos/bNY0ChCofisEpgNWOTYJutmZFrR7gMJ3gCLcBGAsYHQ/s0/Earth11.png",x,y,TileSize,TileSize);
      break
      case 12:
      image("https://1.bp.blogspot.com/--DIB353cE3M/YClo9pybHBI/AAAAAAAADo4/R4-qr-NhzLclfqft8oY4ANpGu5D_8shDwCLcBGAsYHQ/s0/Earth12.png",x,y,TileSize,TileSize);
      break
      case 13:
      image("https://1.bp.blogspot.com/-1Bl8CdSppXY/YClo-O_riyI/AAAAAAAADo8/okFX-7NSv-IHsoBYOadPF6_2rFHtL8IvgCLcBGAsYHQ/s0/Earth13.png",x,y,TileSize,TileSize);
      break
      case 14:
      image("https://1.bp.blogspot.com/-cy_NpZznYnM/YClo-vTzMgI/AAAAAAAADpA/tKTfAOJMT44NHXTExDqrddJYAHK7aBBNgCLcBGAsYHQ/s0/Earth14.png",x,y,TileSize,TileSize);
      break
      case 15:
      image("https://1.bp.blogspot.com/--1Qbdve2V5w/YClo--Q200I/AAAAAAAADpE/kJwKQOVPpEQuzO9VZuaO8bqCli8DecNZACLcBGAsYHQ/s0/Earth15.png",x,y,TileSize,TileSize);
      break
      case 16:
      image("https://1.bp.blogspot.com/-rm-_7CTcAng/YClo_G1AfkI/AAAAAAAADpM/Y19ELWbDRg8lXVmMSIikArTRCynVQih5QCLcBGAsYHQ/s0/Earth16.png",x,y,TileSize,TileSize);
      break
      case 17:
      image("https://1.bp.blogspot.com/-9vYZDeXzphw/YClo_J8I4MI/AAAAAAAADpI/HQhkJyuCH8EIPnvtm9OR7-Nb0E8HtleRQCLcBGAsYHQ/s0/Earth17.png",x,y,TileSize,TileSize);
      break
      case 18:
      image("https://1.bp.blogspot.com/-Ed31HRppfqs/YClo_gL2gWI/AAAAAAAADpQ/jZWny2_7gEsr17nRrZ2diI8PM2TbfrFtwCLcBGAsYHQ/s0/Earth18.png",x,y,TileSize,TileSize);
      break
      case 19:
      image("https://1.bp.blogspot.com/--IxR44U8wzo/YClo_ylYe1I/AAAAAAAADpU/FVIi_Guo2Ks1oeussyM-VtNBj7efdqhdwCLcBGAsYHQ/s0/Earth19.png",x,y,TileSize,TileSize);
      break
      case 20:
      aniTile.render(x,y,TileSize,TileSize);
      break
      case 21:
      image("https://1.bp.blogspot.com/-OVHHrAPf9pE/YClpANFjytI/AAAAAAAADpc/zwoM_28EGDAamfUWF2PRSCDieO03UnnUwCLcBGAsYHQ/s0/Earth21.png",x,y,TileSize,TileSize);
      break
      case 22:
      image("https://1.bp.blogspot.com/-ElGnJ4hC_8g/YClpAY1jD5I/AAAAAAAADpg/Ef3VGNAMGHAnPgR_SVIAaeclJ1_Du8q9wCLcBGAsYHQ/s0/Earth22.png",x,y,TileSize,TileSize);
      break
      case 23:
      image("https://1.bp.blogspot.com/-jqW5iPeHFeY/YClpAjrhXII/AAAAAAAADpk/Nk1w0IISutk09lYNDgmLbWjdA1sV3A5UgCLcBGAsYHQ/s0/Earth23.png",x,y,TileSize,TileSize);
      break
      case 24:
      image("https://1.bp.blogspot.com/-Xb43ZHpGiRo/YClpBTm_TkI/AAAAAAAADqM/xAt7eZn0fO83gAVSvJK0ushAU4HpyvPQQCLcBGAsYHQ/s0/Earth24.png",x,y,TileSize,TileSize);
      break
      case 25:
      image("https://1.bp.blogspot.com/-nKyi2wm-3-Q/YClpBhXJA_I/AAAAAAAADpo/gxg2YEVMRsE5NRupnV8FStFWfdpYqUHFwCLcBGAsYHQ/s0/Earth25.png",x,y,TileSize,TileSize);
      break
      case 26:
      image("https://1.bp.blogspot.com/-vVPl1HCQl00/YClpB1MvEaI/AAAAAAAADps/91ddbQGplAcopuPcsW9Z6ZECAdAACtdcwCLcBGAsYHQ/s0/Earth26.png",x,y,TileSize,TileSize);
      break
      case 27:
      image("https://1.bp.blogspot.com/-X_6BNnhTG0U/YClpCL8ad4I/AAAAAAAADpw/N4GsTlVsT4EEHeVAx7-3PlQZ0YUeFNTbgCLcBGAsYHQ/s0/Earth27.png",x,y,TileSize,TileSize);
      break
      case 28:
      image("https://1.bp.blogspot.com/-1JxfdPoN_hI/YClpCWkyE2I/AAAAAAAADp0/_Vp4PWkCQSoqz2K-Nda5I5kr_9geS6ZWwCLcBGAsYHQ/s0/Earth28.png",x,y,TileSize,TileSize);
      break
      case 29:
      image("https://1.bp.blogspot.com/-anrYvhvG0vg/YClpCubn7eI/AAAAAAAADp4/7VNjeDMwQ40DL9cH-pcbOp4U0sNJdI18QCLcBGAsYHQ/s0/Earth29.png",x,y,TileSize,TileSize);
      break
      case 30:
      image("https://1.bp.blogspot.com/-5l6RHRLJpbQ/YClxtDd-rYI/AAAAAAAADsA/Of7AJk5J978Pu59UKTdbph-tKqXB4UoPQCLcBGAsYHQ/s0/Earth30.png",x,y,TileSize,TileSize);
      break
      case 31:
      image("https://1.bp.blogspot.com/-xEadi9Qcdl0/YClpDZ-Q2lI/AAAAAAAADqE/Kycv7pjHXxMRCll6HuWQTwcnz7M4wmgVwCLcBGAsYHQ/s0/Earth31.png",x,y,TileSize,TileSize);
      break
      case 32:
      image("https://1.bp.blogspot.com/-U0pbgPJN86s/YClpDx52DbI/AAAAAAAADqI/EFcAPo7wSSoad2dntqcWLwuLDunmHprPQCLcBGAsYHQ/s0/Earth32.png",x,y,TileSize,TileSize);
      break
      case 33:
      image("https://1.bp.blogspot.com/-RwiG-FtTlaw/YClpEV7myII/AAAAAAAADqQ/V9I2xcW9m7kF2e03vzIWdSWVSCEd8spggCLcBGAsYHQ/s0/Earth33.png",x,y,TileSize,TileSize);
      break
      case 34:
      image("https://1.bp.blogspot.com/-Q4cIjTpJVME/YClpEQ6UvRI/AAAAAAAADqU/CMSP_NL13lcfnWzWo5HYkOH9wnLxL32PwCLcBGAsYHQ/s0/Earth34.png",x,y,TileSize,TileSize);
      break
      case 35:
      image("https://1.bp.blogspot.com/-pH_wYHs6B9s/YClpE6ln7XI/AAAAAAAADqY/Gw0Z4XMOr9QYq4qX-HIS1vh8yKheqXVaACLcBGAsYHQ/s0/Earth35.png",x,y,TileSize,TileSize);
      break
      case 36:
      image("https://1.bp.blogspot.com/-cP2B9_x6aic/YClpFTZhuQI/AAAAAAAADqc/jHA6GcpJgckF5tUuRIsbdjkjNRTHV7oPQCLcBGAsYHQ/s0/Earth36.png",x,y,TileSize,TileSize);
      break
      case 37:
      image("https://1.bp.blogspot.com/-ZMnaWr7MhEA/YClpFtmeinI/AAAAAAAADqg/b5Rp0gtiULYLaVT37S6uwy6KQeyjDTlAwCLcBGAsYHQ/s0/Earth37.png",x,y,TileSize,TileSize);
      break
      case 38:
      image("https://1.bp.blogspot.com/-0xBPsxR_4Qk/YClpF8phcAI/AAAAAAAADqk/RUGhQ2PuEVM8ygqO3PoLLH-OSje7sXemACLcBGAsYHQ/s0/Earth38.png",x,y,TileSize,TileSize);
      break
      case 39:
      image("https://1.bp.blogspot.com/-Xwx_pZCA0Mg/YClpF-A-1dI/AAAAAAAADqs/DllW0zV1p4Ur0_WggiBovkB65JRmA-6AQCLcBGAsYHQ/s0/Earth39.png",x,y,TileSize,TileSize);
      break 
      case 40:
      	aniTile.render(x,y,TileSize,TileSize);
      break
      case 41:
      image("https://1.bp.blogspot.com/-eleyYjqZqpo/YFZ6PSm24cI/AAAAAAAAD9o/AzaKezr0o1ow63NZSEE84OJ_JQPA2Y9NACLcBGAsYHQ/s0/Earth41.png",x,y,TileSize,TileSize);
      break
      case 42:
      image("https://1.bp.blogspot.com/-rimJQH0Fu_A/YFZ6PduMzFI/AAAAAAAAD9k/dF2HE2-j2B4gvtm_0Rnpy4AFykpDywpcQCLcBGAsYHQ/s0/Earth42.png",x,y,TileSize,TileSize);
      break
      case 43:
      image("https://1.bp.blogspot.com/-nsBrMthMhTw/YFZ6PcjkKjI/AAAAAAAAD9g/SvX2vIha2D0dK4BfBNqvAqOtISoKzOcUwCLcBGAsYHQ/s0/Earth43.png",x,y,TileSize,TileSize);
      break
      case 44:
      image("https://1.bp.blogspot.com/-IuMJ8xnwDUc/YFZ6QMo4PgI/AAAAAAAAD9s/xAfscxQdIVEZV5bptCjEMDxOCDjwjkZKwCLcBGAsYHQ/s0/Earth44.png",x,y,TileSize,TileSize);
      break
      case 45:
      image("https://1.bp.blogspot.com/-3-xjkC55x3k/YFZ6QXm5LdI/AAAAAAAAD9w/NeIjFSvG6q02KQVt0gbKnu0YvhzKb2dDACLcBGAsYHQ/s0/Earth45.png",x,y,TileSize,TileSize);
      break
      case 46:
      image("https://1.bp.blogspot.com/-7sbJDd0n8ps/YFZ6QijeFuI/AAAAAAAAD90/DZKV26Gj_KcW3EH9OHb6gIWqFfukej7AwCLcBGAsYHQ/s0/Earth46.png",x,y,TileSize,TileSize);
      break
      case 47:
      image("https://1.bp.blogspot.com/-1gOxUrNVwIo/YFZ6Q8T835I/AAAAAAAAD94/3sQO24PSaiMZvgHqUVdn-Oh9lX9rHC3fgCLcBGAsYHQ/s0/Earth47.png",x,y,TileSize,TileSize);
      break
      case 48:
      image("https://1.bp.blogspot.com/-gfbhcbwBXvo/YFZ6RL_8U-I/AAAAAAAAD98/Dyl4QAVODbcjFZnOqUqMDyvxbsZ5kha7wCLcBGAsYHQ/s0/Earth48.png",x,y,TileSize,TileSize);
      break
      case 49:
      image("https://1.bp.blogspot.com/-B194aEMb0FI/YFZ6RfhtL6I/AAAAAAAAD-A/fyUmwrslA1UBmXpXhHLsAkffzr5aHnc3QCLcBGAsYHQ/s0/Earth49.png",x,y,TileSize,TileSize);
      break
      case 50:
      image("https://1.bp.blogspot.com/-VZVaG02Z-HE/YFZ6Rb7aBsI/AAAAAAAAD-E/48Dy7tjZgpskiLH_qj4CJgcd6MPcWwD6gCLcBGAsYHQ/s0/Earth50.png",x,y,TileSize,TileSize);
      break
      case 51:
      image("https://1.bp.blogspot.com/-hpwN-N5v6zo/YFZ6R62mEFI/AAAAAAAAD-I/igcr23yB2BMN2OqbTnkxLxVepBe87glWwCLcBGAsYHQ/s0/Earth51.png",x,y,TileSize,TileSize);
      break
      case 52:
      image("https://1.bp.blogspot.com/-M9QeSypFqW8/YFZ6Sa_93SI/AAAAAAAAD-M/PC16FBVhNrM4tkmHTsZ7UMsT27vXxiSXgCLcBGAsYHQ/s0/Earth52.png",x,y,TileSize,TileSize);
      break
      case 53:
      image("https://1.bp.blogspot.com/-dpqoe4rbjeI/YFZ6S-L8yuI/AAAAAAAAD-Q/WGQT7ova1ds8iLxW_XdZjj5QPxdXTHoYgCLcBGAsYHQ/s0/Earth53.png",x,y,TileSize,TileSize);
      break
      case 54:
      image("https://1.bp.blogspot.com/-k22wG-TqTtk/YFZ6TVrPY4I/AAAAAAAAD-U/PqczFW116tcMvBex_vTUFIWoc-LsdnxDACLcBGAsYHQ/s0/Earth54.png",x,y,TileSize,TileSize);
      break
      case 55:
      image("https://1.bp.blogspot.com/-ZyUViY-LE7I/YFZ6Tu739fI/AAAAAAAAD-Y/4PaiaofOnYsWS8qi_tKoNzRpzpUSXyLxQCLcBGAsYHQ/s0/Earth55.png",x,y,TileSize,TileSize);
      break
      case 56:
      image("https://1.bp.blogspot.com/-_ypmnZQw4A4/YFZ6T3jCxQI/AAAAAAAAD-c/IN41N8dzAFgO9IoJgNcXlnH-In7su-C4ACLcBGAsYHQ/s0/Earth56.png",x,y,TileSize,TileSize);
      break
      case 57:
      image("https://1.bp.blogspot.com/-EdEnJJQa33c/YFZ6UBuILbI/AAAAAAAAD-g/Zhx_gwuUFMcatwnKq1f05eo3Z1QLvINXACLcBGAsYHQ/s0/Earth57.png",x,y,TileSize,TileSize);
      break
      case 58:
      image("https://1.bp.blogspot.com/-EvmQo-EzV1Q/YFZ6UahSN-I/AAAAAAAAD-k/12E_BQBEidwI8-40R12e14qcNFwXoQGqgCLcBGAsYHQ/s0/Earth58.png",x,y,TileSize,TileSize);
      break
      case 59:
      image("https://1.bp.blogspot.com/-IxuXOeviViw/YFZ6UgoPFUI/AAAAAAAAD-o/ajFmqId7AK07RTJoYoasrXLA23MSsrrTACLcBGAsYHQ/s0/Earth59.png",x,y,TileSize,TileSize);
      break
      case 60:
      image("https://1.bp.blogspot.com/-USU7-4Dn5aY/YFZ6U-OiZQI/AAAAAAAAD-s/xijxx9XFFHclvmBrbbBW73wk9eV0eh4xwCLcBGAsYHQ/s0/Earth60.png",x,y,TileSize,TileSize);
      break
      case 61:
      image("https://1.bp.blogspot.com/-a25AbAvA2iA/YFZ6U1i3DzI/AAAAAAAAD-w/uNLV4LUs8qwvXXovWwFzSXwk74U8ywSLgCLcBGAsYHQ/s0/Earth61.png",x,y,TileSize,TileSize);
      break
      case 62:
      image("https://1.bp.blogspot.com/-Sl4CAO-wfIk/YFZ6VfnuE0I/AAAAAAAAD-0/e5M_mQvMBWsfOTUvT5fD18N-qfYz6u3PACLcBGAsYHQ/s0/Earth62.png",x,y,TileSize,TileSize);
      break
      case 63:
      image("https://1.bp.blogspot.com/-z6C_hN71Z6Y/YFZ6VXspaJI/AAAAAAAAD-4/dtaCZPbO4Zc7lJZi9LtXp3WqrpwIeAMtgCLcBGAsYHQ/s0/Earth63.png",x,y,TileSize,TileSize);
      break
      case 64:
      image("https://1.bp.blogspot.com/-BNK34qQgQp8/YFZ6VhOZQlI/AAAAAAAAD-8/CeHVJJt2FfMv2RKN9ydyuvgP_yB4s92QgCLcBGAsYHQ/s0/Earth64.png",x,y,TileSize,TileSize);
      break
      case 65:
      image("https://1.bp.blogspot.com/-nNZUksYampk/YFZ6VwLD0xI/AAAAAAAAD_A/zv4Ra74eh6QgT5FRZuk__oxJWqXlLNKbwCLcBGAsYHQ/s0/Earth65.png",x,y,TileSize,TileSize);
      break
      case 66:
      image("https://1.bp.blogspot.com/-1tAI2TNC8xw/YFZ6WPL14NI/AAAAAAAAD_E/uiFb5oLvWoQcSavH51NJ4tmYlJSvTiFcwCLcBGAsYHQ/s0/Earth66.png",x,y,TileSize,TileSize);
      break
      case 67:
      image("https://1.bp.blogspot.com/-96REChw_eJQ/YFZ6WB-77EI/AAAAAAAAD_I/W7gzWdqoVoMOnfkLLKLdujmOb06s5n0FQCLcBGAsYHQ/s0/Earth67.png",x,y,TileSize,TileSize);
      break
      case 68:
      image("https://1.bp.blogspot.com/-Vl1q1SUTY_c/YFZ6W1J8m7I/AAAAAAAAD_M/eko9EGGBtm8-nuArjPeh8hd3q5VCq0AOACLcBGAsYHQ/s0/Earth68.png",x,y,TileSize,TileSize);
      break
      case 69:
      image("https://1.bp.blogspot.com/-kgYAvKE22r0/YFZ6XB3Z13I/AAAAAAAAD_Q/J_Jf068wNkQ-_3_7qLiinTiN0DhTAnNVACLcBGAsYHQ/s0/Earth69.png",x,y,TileSize,TileSize);
      break
      case 70:
      image("https://1.bp.blogspot.com/-hmnktYHge-I/YFZ6XYCMAUI/AAAAAAAAD_U/Nlvih_Sb104tnT6QAjKaHBqx7YYTlU7YgCLcBGAsYHQ/s0/Earth70.png",x,y,TileSize,TileSize);
      break
      case 71:
      image("https://1.bp.blogspot.com/-rmNWv9iD7F8/YF4OLfpo_EI/AAAAAAAAEBw/8gzNTx6m-ZkjauX7AC0JsYHZZBBwgCdggCLcBGAsYHQ/s0/Earth71.png",x,y,TileSize,TileSize);
      break
      case 72://Hojas
      image("https://1.bp.blogspot.com/-rs_Dj0AsJ3s/YF4OLav_F4I/AAAAAAAAEBo/Z8qniDs1NNsde7S_LNU5v9EgRtsBkWbjACLcBGAsYHQ/s0/Earth72.png",x,y,TileSize,TileSize);
      break
      case 73:
      image("https://1.bp.blogspot.com/-l_fwWIHHC2s/YF4OLsqkqyI/AAAAAAAAEBs/Wty-xx3yBKI-rq2_qW2yijaRQdzOlRVQQCLcBGAsYHQ/s0/Earth73.png",x,y,TileSize,TileSize);
      break//AGUA
      case 74:
      image("https://1.bp.blogspot.com/-AGh-Z1_aTEw/YGWxAnpRN9I/AAAAAAAAEDY/AzRrv_M7YqQ_7wjs5wXVW7Knh-A-j9UhACLcBGAsYHQ/s0/Water1.png",x,y,TileSize,TileSize);
      break
      case 75:
      image("https://1.bp.blogspot.com/-sVM-SYdFhxI/YGWxDJ6zlaI/AAAAAAAAED8/V5kdM1Gk3Sw5wF2SvOA1EMrw4iZtsdB3wCLcBGAsYHQ/s0/Water2.png",x,y,TileSize,TileSize);
      break
      case 76:
      image("https://1.bp.blogspot.com/-1E0c_kVzm0o/YGWxGA3J-nI/AAAAAAAAEEo/N2uXqVHDq6UfXSnsxYlS8vLZPN0X1D0UQCLcBGAsYHQ/s0/Water3.png",x,y,TileSize,TileSize);
      break
      case 77:
      image("https://1.bp.blogspot.com/-gTnAIVRH9Vw/YGWxInxuf7I/AAAAAAAAEFU/h26HIJ_axzoQx1gf4mF_7ZoQrpAws9SLwCLcBGAsYHQ/s0/Water4.png",x,y,TileSize,TileSize);
      break
      case 78:
      image("https://1.bp.blogspot.com/-Wg-JahAVVRM/YGWxLVpSFDI/AAAAAAAAEGA/OQL-HjZHGy0yIypN5xAsxf0jEJH_aa1pQCLcBGAsYHQ/s0/Water5.png",x,y,TileSize,TileSize);
      break
      case 79:
      image("https://1.bp.blogspot.com/-5e-93wG8BB8/YGWxLhEmaCI/AAAAAAAAEGI/dpdxCkrDbIQlDogPE-R94F0cPONXQ81TwCLcBGAsYHQ/s0/Water6.png",x,y,TileSize,TileSize);
      break
      case 80:
      image("https://1.bp.blogspot.com/-bOjdjLfIUfA/YGWxMJH7rOI/AAAAAAAAEGM/_JQ1WTZM2DEIZlOrYXyiAMmqv_26JtLiACLcBGAsYHQ/s0/Water7.png",x,y,TileSize,TileSize);
      break
      case 81:
      image("https://1.bp.blogspot.com/-FvkpYK750t0/YGWxMQiXSRI/AAAAAAAAEGQ/mEMqE2Snk5Mr6rsWsYu9RMxDsNn1bsRswCLcBGAsYHQ/s0/Water8.png",x,y,TileSize,TileSize);
      break
      case 82:
      image("https://1.bp.blogspot.com/-YVG9QgCa0Ng/YGWxMULTkLI/AAAAAAAAEGU/eahmWVPVMJsV2-MJJYMHwPvVUm27KlDyQCLcBGAsYHQ/s0/Water9.png",x,y,TileSize,TileSize);
      break
      case 83:
      image("https://1.bp.blogspot.com/-O1oau1B01UI/YGWxAoI8CAI/AAAAAAAAEDQ/dibzUBXXRmAZf6JRBodQxFVafpFluYNvQCLcBGAsYHQ/s0/Water10.png",x,y,TileSize,TileSize);
      break
      case 84:
      image("https://1.bp.blogspot.com/-fYG5F11HYCc/YGWxAnMGCKI/AAAAAAAAEDU/RxVtSC0TqOkZKGef2f7amAhYpdQwq810wCLcBGAsYHQ/s0/Water11.png",x,y,TileSize,TileSize);
      break
      case 85:
      image("https://1.bp.blogspot.com/-ATMwO1T_Tdo/YGWxBVfc-MI/AAAAAAAAEDc/aX4zkFd3eLQKATXpzcVq49xa2J9irzjBQCLcBGAsYHQ/s0/Water12.png",x,y,TileSize,TileSize);
      break
      case 86:
      image("https://1.bp.blogspot.com/-EtoAX1_fr1w/YGWxBrCX5jI/AAAAAAAAEDg/izRXJjDRS9YimhtPCIQEoeISFshbYShSACLcBGAsYHQ/s0/Water13.png",x,y,TileSize,TileSize);
      break
      case 87:
      image("https://1.bp.blogspot.com/-pA8BO7XjBP4/YGWxB5AWFcI/AAAAAAAAEDk/g6OhodtjJUwW710tjr0l5WvPLkoRA4CHACLcBGAsYHQ/s0/Water14.png",x,y,TileSize,TileSize);
      break
      case 88:
      image("https://1.bp.blogspot.com/-vtgYLfRb5nE/YGWxCF_9ewI/AAAAAAAAEDo/cNJy8a-V4pkz2Y-HdoLrbcfUYVDp0_jsQCLcBGAsYHQ/s0/Water15.png",x,y,TileSize,TileSize);
      break
      case 89:
      image("https://1.bp.blogspot.com/-qvDeTQRH_Dc/YGWxCYnaE6I/AAAAAAAAEDs/RJuPg-yaFnIvyWe7UValYUTVKO5TIMECQCLcBGAsYHQ/s0/Water16.png",x,y,TileSize,TileSize);
      break
      case 90:
      image("https://1.bp.blogspot.com/-mbSN5I-ZXPs/YGWxCdxcYSI/AAAAAAAAEDw/mTmWd7wZ55EMhWscgNy6ziy7PHeZQJcJgCLcBGAsYHQ/s0/Water17.png",x,y,TileSize,TileSize);
      break
      case 91:
      image("https://1.bp.blogspot.com/-osvWlCCF-5M/YGWxC5rXkiI/AAAAAAAAED0/XaZch9i8l60E1NVgaqpBHlRdsrvFbnB0wCLcBGAsYHQ/s0/Water18.png",x,y,TileSize,TileSize);
      break
      case 92:
      image("https://1.bp.blogspot.com/-yvaz7x3VhaA/YGWxDFcJ2vI/AAAAAAAAED4/doTMwDOMBCEglqspz3HT85EDEk5AdrtdQCLcBGAsYHQ/s0/Water19.png",x,y,TileSize,TileSize);
      break
      case 93:
      image("https://1.bp.blogspot.com/-1Gssz5PoUUY/YGWxDRayX4I/AAAAAAAAEEA/O9fzE7kYivA1wDl8AjCEz5Zz2qDxbegQwCLcBGAsYHQ/s0/Water20.png",x,y,TileSize,TileSize);
      break
      case 94:
      image("https://1.bp.blogspot.com/-eI65NDrUv0M/YGWxDtiLSoI/AAAAAAAAEEE/UNTpGX1u6goaac8A9m6PKRgxpSSEPpK3wCLcBGAsYHQ/s0/Water21.png",x,y,TileSize,TileSize);
      break
      case 95:
      image("https://1.bp.blogspot.com/-qr52hxwOTTA/YGWxD-KjMqI/AAAAAAAAEEI/ZS4VOdGCfuQNrNGSsLki7lqEN9ZMptyxgCLcBGAsYHQ/s0/Water22.png",x,y,TileSize,TileSize);
      break
      case 96:
      image("https://1.bp.blogspot.com/-Kig0Dju99KY/YGWxELTwy_I/AAAAAAAAEEM/kO_qg_I6OkgO1GzQR5j5EmIr4fw3TRcVwCLcBGAsYHQ/s0/Water23.png",x,y,TileSize,TileSize);
      break
      case 97:
      image("https://1.bp.blogspot.com/-twVUwIcmrS8/YGWxEeGNkoI/AAAAAAAAEEQ/jafrf40YbDAk2YUZ_-yJ7DBeI_ogFVGHgCLcBGAsYHQ/s0/Water24.png",x,y,TileSize,TileSize);
      break
      case 98:
      image("https://1.bp.blogspot.com/-DatcfEwDXeQ/YGWxEQkXLzI/AAAAAAAAEEU/ybFmdECd-hQMzbew_bKQzLgIMXUy1kk5QCLcBGAsYHQ/s0/Water25.png",x,y,TileSize,TileSize);
      break
      case 99:
      image("https://1.bp.blogspot.com/-5Bq1ARzrS8U/YGWxE4D0EuI/AAAAAAAAEEY/daGomNk-OU822wAA5nl4w1qEdZli5ahIACLcBGAsYHQ/s0/Water26.png",x,y,TileSize,TileSize);
      break
      case 100:
      image("https://1.bp.blogspot.com/-8T1X_OqL0qA/YGWxFHDCFiI/AAAAAAAAEEc/8Y0w6Ixe1wkWUMDpEIADuVsqxm6fLVXowCLcBGAsYHQ/s0/Water27.png",x,y,TileSize,TileSize);
      break
      case 101:
      image("https://1.bp.blogspot.com/-fIe2_tsXquA/YGWxFcm7OJI/AAAAAAAAEEg/yn1A-_kqO_IE4WP3wY6bj3Gjr51SN5DjQCLcBGAsYHQ/s0/Water28.png",x,y,TileSize,TileSize);
      break
      case 102:
      image("https://1.bp.blogspot.com/-y0HP1eYdymA/YGWxFsS_H5I/AAAAAAAAEEk/XPzsgkx6DOwqNrlp6uhpkaMhyav3OrbRQCLcBGAsYHQ/s0/Water29.png",x,y,TileSize,TileSize);
      break
      case 103:
      image("https://1.bp.blogspot.com/-FzaG_cEb9CM/YGWxGq4mPwI/AAAAAAAAEEw/_enjv4mMiZIDTaJEXH0f2m88eO2aPVyEgCLcBGAsYHQ/s0/Water30.png",x,y,TileSize,TileSize);
      break
      case 104:
      image("https://1.bp.blogspot.com/-hV4wOhkao_c/YGWxGe76tzI/AAAAAAAAEEs/833bOOicY6Mr1BZXMXY4VcjMwQ7xlP4XwCLcBGAsYHQ/s0/Water31.png",x,y,TileSize,TileSize);
      break
      case 105:
      image("https://1.bp.blogspot.com/-bxuxjrGS-58/YGWxGrZy5zI/AAAAAAAAEE0/36OMu61AaXsrEeRAMy9QdNG-GR8oD1-UQCLcBGAsYHQ/s0/Water32.png",x,y,TileSize,TileSize);
      break
      case 106:
      image("https://1.bp.blogspot.com/-WCMbCKGdqVM/YGWxHIFagcI/AAAAAAAAEE4/7VD3R72iNbcgPDIv3tWhAEq_4qkM-8iEQCLcBGAsYHQ/s0/Water33.png",x,y,TileSize,TileSize);
      break
      case 107:
      image("https://1.bp.blogspot.com/-R-k-IAG_UfA/YGWxHMuC-7I/AAAAAAAAEE8/192HT-R5-qwp_xkZTAOeeyAMBVG7r2qigCLcBGAsYHQ/s0/Water34.png",x,y,TileSize,TileSize);
      break
      case 108:
      image("https://1.bp.blogspot.com/-7N3VUV-7Ieg/YGWxHcy3qfI/AAAAAAAAEFA/DoaEXYrrHt8hp3MB9PrzpU5VLK3hI4W3gCLcBGAsYHQ/s0/Water35.png",x,y,TileSize,TileSize);
      break
      case 109:
      image("https://1.bp.blogspot.com/-t2NE4UGgK5A/YGWxHhBaRwI/AAAAAAAAEFE/p8itz_6VClQBzbxYhMmwTagkTtZ37R9rgCLcBGAsYHQ/s0/Water36.png",x,y,TileSize,TileSize);
      break
      case 110:
      image("https://1.bp.blogspot.com/-dpEgEM6cy_8/YGWxICTU38I/AAAAAAAAEFI/vus-E8C35xk9VN6pfG721JtjfIUm8N4rgCLcBGAsYHQ/s0/Water37.png",x,y,TileSize,TileSize);
      break
      case 111:
      image("https://1.bp.blogspot.com/-Ih507g3ufjo/YGWxISkcxcI/AAAAAAAAEFM/euLDcknktQEX6bTLPU9ZFNohUkDSQPjewCLcBGAsYHQ/s0/Water38.png",x,y,TileSize,TileSize);
      break
      case 112:
      image("https://1.bp.blogspot.com/--fiCD6IHu4k/YGWxIWHePiI/AAAAAAAAEFQ/ma_NllsyWU0a6otDgykZ9upndUVZSqEPACLcBGAsYHQ/s0/Water39.png",x,y,TileSize,TileSize);
      break
      case 113:
      image("https://1.bp.blogspot.com/-_y0trNMQjmA/YGWxJNbLllI/AAAAAAAAEFY/_lyvNam35ksRX70PF3GScDWl2yOPMvQ5gCLcBGAsYHQ/s0/Water40.png",x,y,TileSize,TileSize);
      break
      case 114:
      image("https://1.bp.blogspot.com/-D4YoYdoMwew/YGWxJE9nLuI/AAAAAAAAEFc/MCXnziJYT386GcEful5sTIgc97_pPAFrQCLcBGAsYHQ/s0/Water41.png",x,y,TileSize,TileSize);
      break
      case 115:
      image("https://1.bp.blogspot.com/-I7YfkJFmuU0/YGWxJcKETSI/AAAAAAAAEFg/KfRv7epYUXo_RClgb7zOF7BtY12pGhlSwCLcBGAsYHQ/s0/Water42.png",x,y,TileSize,TileSize);
      break
      case 116:
      image("https://1.bp.blogspot.com/-Vqo-SGyx7gw/YGWxJuduFiI/AAAAAAAAEFk/VBL-awrgfJIWekrilyJJSIMtjwpi0f9wACLcBGAsYHQ/s0/Water43.png",x,y,TileSize,TileSize);
      break
      case 117:
      image("https://1.bp.blogspot.com/-48B1K1vA5QE/YGWxJ3RySyI/AAAAAAAAEFo/BS1m_GhD1fcqZLIPYbQBGIsbXOb4LRmxgCLcBGAsYHQ/s0/Water44.png",x,y,TileSize,TileSize);
      break
      case 118:
      image("https://1.bp.blogspot.com/-T09b1KswSuM/YGWxKMLJ9VI/AAAAAAAAEFs/87pyVq_ZETcP3rRTk77CNWj1gEPuU_JrQCLcBGAsYHQ/s0/Water45.png",x,y,TileSize,TileSize);
      break
      case 119:
      image("https://1.bp.blogspot.com/-ZS5skce2q1I/YGWxKXdhi8I/AAAAAAAAEFw/Yd3N7EPelFU-CJol84C-MOJ1RCDOasziQCLcBGAsYHQ/s0/Water46.png",x,y,TileSize,TileSize);
      break
      case 120:
      image("https://1.bp.blogspot.com/-L3YT8sEBWHA/YGWxKvM6KsI/AAAAAAAAEF0/7TX1Ykfku7gKar9MGMPpKJzFVJZpZCypgCLcBGAsYHQ/s0/Water47.png",x,y,TileSize,TileSize);
      break
      case 121:
      image("https://1.bp.blogspot.com/-nQQiRUTjhzc/YGWxKiLTW_I/AAAAAAAAEF4/bGUWJ30dk1UxNdi_NX70O0UrHhoEGRY0ACLcBGAsYHQ/s0/Water48.png",x,y,TileSize,TileSize);
      break
      case 122:
      image("https://1.bp.blogspot.com/-tEA-VSfMIBY/YGWxK10zs8I/AAAAAAAAEF8/woJdx7uiLV8uZMbFhYGvm-BbmKJzqzu_QCLcBGAsYHQ/s0/Water49.png",x,y,TileSize,TileSize);
      break
      case 123:
      image("https://1.bp.blogspot.com/-06PtUTq7Fnc/YGWxLQxmfSI/AAAAAAAAEGE/-FPIt4-xtoQuj6CBBL1kxnw96zlwiYPiACLcBGAsYHQ/s0/Water50.png",x,y,TileSize,TileSize);
      break// FUEGO
      case 124:
      image("https://1.bp.blogspot.com/-qVAiBNdPuhw/YG3jNQu2RFI/AAAAAAAAELw/_lz2wAcwZwECJbHDx_zpUALpkimRHqe1wCLcBGAsYHQ/s0/Fire1.png",x,y,TileSize,TileSize);
      break
      case 125:
      image("https://1.bp.blogspot.com/-9TXV39SwWeE/YG3jP_4BeHI/AAAAAAAAEMc/oLqGFxn4vIAbsdGbLL9caAnTzj_7LmlsgCLcBGAsYHQ/s0/Fire2.png",x,y,TileSize,TileSize);
      break
      case 126:
      image("https://1.bp.blogspot.com/-rablCS6sC2g/YG3jSdB_X0I/AAAAAAAAENI/BVT40oluPG8x0_o0B71kHjUpRt8WxpWDACLcBGAsYHQ/s0/Fire3.png",x,y,TileSize,TileSize);
      break
      case 127:
      image("https://1.bp.blogspot.com/-vqcI203o9GA/YG3jTdJtMQI/AAAAAAAAENQ/nal04m2Nc8cVTDpXMq3unFmUjLBX_wtNwCLcBGAsYHQ/s0/Fire4.png",x,y,TileSize,TileSize);
      break
      case 128:
      image("https://1.bp.blogspot.com/-uzBA_LmbsZE/YG3jT_1MFII/AAAAAAAAENU/rp5EocjvMj0XWoKFFEt5ERpkWMPc0zpTACLcBGAsYHQ/s0/Fire5.png",x,y,TileSize,TileSize);
      break
      case 129:
      image("https://1.bp.blogspot.com/-34aRnwQez4E/YG3jUJxHKWI/AAAAAAAAENY/2Tfihm0TA7UY7h8fDvDJnzhZEhgiPQ9cwCLcBGAsYHQ/s0/Fire6.png",x,y,TileSize,TileSize);
      break
      case 130:
      image("https://1.bp.blogspot.com/-V_KCwIMO_2c/YG3jUa9dHCI/AAAAAAAAENc/gcOfEfuZz4IkmorQRQEmiAmRtfnD_YvNACLcBGAsYHQ/s0/Fire7.png",x,y,TileSize,TileSize);
      break
      case 131:
      image("https://1.bp.blogspot.com/-IdNd_9ONqIs/YG3jUdGnA7I/AAAAAAAAENg/4FH-y3jNLecLgFkpyAYlYOkISHEOd4vOQCLcBGAsYHQ/s0/Fire8.png",x,y,TileSize,TileSize);
      break
      case 132:
      image("https://1.bp.blogspot.com/-QewovFEMVW4/YG3jUrIYCGI/AAAAAAAAENk/_H7WQZPo9DQTCLlG_gyNjyPdwjkHPVS5gCLcBGAsYHQ/s0/Fire9.png",x,y,TileSize,TileSize);
      break
      case 133:
      image("https://1.bp.blogspot.com/-dEiprob8TL4/YG3jNcX-8BI/AAAAAAAAEL0/LGNJ1ZniGq0G4kwBg-V5E8-efroVm4MRACLcBGAsYHQ/s0/Fire10.png",x,y,TileSize,TileSize);
      break
      case 134:
      image("https://1.bp.blogspot.com/-7KCcg00WxMk/YG3jNoa929I/AAAAAAAAEL4/pN2K1ODzJgsG-gMaN66pujilIww2H95xACLcBGAsYHQ/s0/Fire11.png",x,y,TileSize,TileSize);
      break
      case 135:
      image("https://1.bp.blogspot.com/-UcBIaFzB-4M/YG3jOfTQXHI/AAAAAAAAEL8/tcgzsQToGVwEbYn333Uuxmm1xq6nVaCVgCLcBGAsYHQ/s0/Fire12.png",x,y,TileSize,TileSize);
      break
      case 136:
      image("https://1.bp.blogspot.com/-ZHGVbJLT6FI/YG3jOZWz-oI/AAAAAAAAEMA/gBwckv-bSgsU9LLbeVbhvptbIz58nDNhQCLcBGAsYHQ/s0/Fire13.png",x,y,TileSize,TileSize);
      break
      case 137:
      image("https://1.bp.blogspot.com/-xHx_KzHSROE/YG3jOlwnqqI/AAAAAAAAEME/137y8MYvYgY0kUUVQr9E2CnPT3ZQRKkSwCLcBGAsYHQ/s0/Fire14.png",x,y,TileSize,TileSize);
      break
      case 138:
      image("https://1.bp.blogspot.com/-btsESCYFO-s/YG3jO50Hw9I/AAAAAAAAEMI/znrlu5jTsvYd0s6xy8ZRD-TfC8kurvZdQCLcBGAsYHQ/s0/Fire15.png",x,y,TileSize,TileSize);
      break
      case 139:
      image("https://1.bp.blogspot.com/-D5REerdDr2s/YG3jPJHLvQI/AAAAAAAAEMM/_Xyi3AKV864ANraTqvJfUn8NDYZ_6d0wACLcBGAsYHQ/s0/Fire16.png",x,y,TileSize,TileSize);
      break
      case 140:
      image("https://1.bp.blogspot.com/-aZhnBAD_5-A/YG3jPfYdGFI/AAAAAAAAEMQ/KXIhoN86GiszPpa6O-I_JVwwcrNIkd1PQCLcBGAsYHQ/s0/Fire17.png",x,y,TileSize,TileSize);
      break
      case 141:
      image("https://1.bp.blogspot.com/-HxsqXpvT-xg/YG3jPW21rQI/AAAAAAAAEMU/x27nFPxkBsYm4EJfLcWLg9FPSCKiccS0ACLcBGAsYHQ/s0/Fire18.png",x,y,TileSize,TileSize);
      break
      case 142:
      image("https://1.bp.blogspot.com/-nsA1-QvkJwg/YG3jPt04BDI/AAAAAAAAEMY/ZOgvGwZ-EtsrObDzeMc0NdsCOFQKKX4qACLcBGAsYHQ/s0/Fire19.png",x,y,TileSize,TileSize);
      break
      case 143:
      image("https://1.bp.blogspot.com/-wo5LvXLIefQ/YG3jP8o9scI/AAAAAAAAEMg/-yAHb2ehGdwQHK5UN7IViM61dz0TsUTqwCLcBGAsYHQ/s0/Fire20.png",x,y,TileSize,TileSize);
      break
      case 144:
      image("https://1.bp.blogspot.com/-FBH3JXGdZuw/YG3jQfeG6TI/AAAAAAAAEMk/h4ulAReGUU8Ig1mM4N5sVjZL6JOZeXLOgCLcBGAsYHQ/s0/Fire21.png",x,y,TileSize,TileSize);
      break
      case 145:
      image("https://1.bp.blogspot.com/-rhBQUzDeNgA/YG3jQdH7-tI/AAAAAAAAEMo/Isaiscf1Xvc7NAa7tIcnMYSFNxrWN1EAQCLcBGAsYHQ/s0/Fire22.png",x,y,TileSize,TileSize);
      break
      case 146:
      image("https://1.bp.blogspot.com/-Ihavk9eJgbs/YG3jQngEQwI/AAAAAAAAEMs/GpiPoLtb-VEreIZDY6SIqWPHZvA6f3cAACLcBGAsYHQ/s0/Fire23.png",x,y,TileSize,TileSize);
      break
      case 147:
      image("https://1.bp.blogspot.com/-mceKl4Yktek/YG3jQ-EZ2TI/AAAAAAAAEMw/tItHOr1Oar4lJP-wrvLqw44a5XZFYW8JQCLcBGAsYHQ/s0/Fire24.png",x,y,TileSize,TileSize);
      break
      case 148:
      image("https://1.bp.blogspot.com/-kchH8VXY1hg/YG3jRIf0KII/AAAAAAAAEM0/4FAEJWHxrA0goMcrrJiDuUyoivyqNKXyACLcBGAsYHQ/s0/Fire25.png",x,y,TileSize,TileSize);
      break
      case 149:
      image("https://1.bp.blogspot.com/-2at5ULvqzmI/YG3jRJPoQCI/AAAAAAAAEM4/GB6db1fbhDo8TcN8H4u3YAKdB79Id4HOgCLcBGAsYHQ/s0/Fire26.png",x,y,TileSize,TileSize);
      break
      case 150:
      image("https://1.bp.blogspot.com/-GbVKf5UiRbo/YG3jRgDHs2I/AAAAAAAAEM8/ou5KF49nhJ4bCdy_sUaeDUA6pykLE2NkACLcBGAsYHQ/s0/Fire27.png",x,y,TileSize,TileSize);
      break
      case 151:
      image("https://1.bp.blogspot.com/-c56V9h2S2Q4/YG3jRmLGMyI/AAAAAAAAENA/pikzNo6tiaUiOqav8owk6xOKbebBnsFRQCLcBGAsYHQ/s0/Fire28.png",x,y,TileSize,TileSize);
      break
      case 152:
      image("https://1.bp.blogspot.com/-voFSz-msCYs/YG3jR_WKQcI/AAAAAAAAENE/ldEX3Xj6A1wMCQq4sN7K8qWb7ZB5A1J1QCLcBGAsYHQ/s0/Fire29.png",x,y,TileSize,TileSize);
      break
      case 153:
      image("https://1.bp.blogspot.com/-592NEv0hmWo/YG3jS4E3XDI/AAAAAAAAENM/0zUCQJhcQbIZmbR-16WfguVhn3jeVCe9wCLcBGAsYHQ/s0/Fire30.png",x,y,TileSize,TileSize);
      break
      case 154:
      image("https://1.bp.blogspot.com/-npB7IZO2aH0/YHM8UJASCWI/AAAAAAAAEQI/P_mhemjyaowRggTUBGmjoW9T6yCHS263QCLcBGAsYHQ/s0/Wind1.png",x,y,TileSize,TileSize);
      break
      case 155:
      image("https://1.bp.blogspot.com/-OtSNShlvEQU/YHM8WG-BGVI/AAAAAAAAEQ0/NnMFBLR85gkq3wnLcfmpaZEpLuqObH4tQCLcBGAsYHQ/s0/Wind2.png",x,y,TileSize,TileSize);
      break
      case 156:
      image("https://1.bp.blogspot.com/-vCn4IHo1dhA/YHM8W06bnwI/AAAAAAAAEQ8/t0G8LD58Ip8CNJDDbJI-f7dbYPvu9Sq5gCLcBGAsYHQ/s0/Wind3.png",x,y,TileSize,TileSize);
      break
      case 157:
      image("https://1.bp.blogspot.com/-tJdBiOhE9W8/YHM8WyCi2PI/AAAAAAAAERA/YC8TiPk7arMojEuJRtLkeoYsbB5QcDFkgCLcBGAsYHQ/s0/Wind4.png",x,y,TileSize,TileSize);
      break
      case 158:
      image("https://1.bp.blogspot.com/-r2L59aawcNk/YHM8XHJUrnI/AAAAAAAAERE/1mluHUlxWxoWPZdyalTD4buhPNLAaLOBQCLcBGAsYHQ/s0/Wind5.png",x,y,TileSize,TileSize);
      break
      case 159:
      image("https://1.bp.blogspot.com/-A9QskmN0JUU/YHM8XRZoRyI/AAAAAAAAERI/B6gkAvqGCPszR91qDs8VoSk4sJvAbEIygCLcBGAsYHQ/s0/Wind6.png",x,y,TileSize,TileSize);
      break
      case 160:
      image("https://1.bp.blogspot.com/-Sgq_1Rjzt0M/YHM8Xk8XfvI/AAAAAAAAERM/H_f_z7Y7RcoJnZd7EoOpEgiXKQV39WelgCLcBGAsYHQ/s0/Wind7.png",x,y,TileSize,TileSize);
      break
      case 161:
      image("https://1.bp.blogspot.com/-ecdKGzvdc9E/YHM8XuGFOXI/AAAAAAAAERQ/QsR7QeJJDoEs6uyCW36A6K6qaTZmKylyQCLcBGAsYHQ/s0/Wind8.png",x,y,TileSize,TileSize);
      break
      case 162:
      image("https://1.bp.blogspot.com/-qUiWU5J1B1Q/YHM8X81aZ4I/AAAAAAAAERU/DWyiRX9qYssaWYZ1D33l8nE0fK19eArDwCLcBGAsYHQ/s0/Wind9.png",x,y,TileSize,TileSize);
      break
      case 163:
      image("https://1.bp.blogspot.com/-oIhV3uGomok/YHM8UYZ9HpI/AAAAAAAAEQM/07i9RzS4GfYnceqg4h7QvsPwtagPnoXEgCLcBGAsYHQ/s0/Wind10.png",x,y,TileSize,TileSize);
      break
      case 164:
      image("https://1.bp.blogspot.com/-yjWolOZi_4c/YHM8UQi7eEI/AAAAAAAAEQQ/hPoJg5s7xdoAr7cSXxekfXrrhgIomWRrwCLcBGAsYHQ/s0/Wind11.png",x,y,TileSize,TileSize);
      break
      case 165:
      image("https://1.bp.blogspot.com/-oWjnhC9_Ke8/YHM8UqyVZ4I/AAAAAAAAEQU/nlEIyCcxQjM9t-OldzSBWr7GFEJKcPEtACLcBGAsYHQ/s0/Wind12.png",x,y,TileSize,TileSize);
      break
      case 166:
      image("https://1.bp.blogspot.com/-RiSK_C7KNKM/YHM8U-BGFQI/AAAAAAAAEQY/FDgDQd1ZVKUHaArelPF-D3P2rWbC4MVyQCLcBGAsYHQ/s0/Wind13.png",x,y,TileSize,TileSize);
      break
      case 167:
      image("https://1.bp.blogspot.com/-6kqZ-t9V5z4/YHM8VO9zOUI/AAAAAAAAEQc/iK42H01qYrURNah6r5XirSjtMiiAqn8rwCLcBGAsYHQ/s0/Wind14.png",x,y,TileSize,TileSize);
      break
      case 168:
      image("https://1.bp.blogspot.com/-fA4UfGzQO8I/YHM8VTbCO4I/AAAAAAAAEQg/ztRGOUREjGIsX8Ri1k98_-ZRZoWn_uisgCLcBGAsYHQ/s0/Wind15.png",x,y,TileSize,TileSize);
      break
      case 169:
      image("https://1.bp.blogspot.com/-iatDixsQ1-o/YHM8VdMxkRI/AAAAAAAAEQk/spm8x8rg_yoK-X9X0umsVKeP-q-mo6rdACLcBGAsYHQ/s0/Wind16.png",x,y,TileSize,TileSize);
      break
      case 170:
      image("https://1.bp.blogspot.com/-39qO1pym4zE/YHM8VsiEvKI/AAAAAAAAEQo/tyeUU-O2HhEJxOIrs8gjNZ-VEe9xqaRqgCLcBGAsYHQ/s0/Wind17.png",x,y,TileSize,TileSize);
      break
      case 171:
      image("https://1.bp.blogspot.com/-PP0CHA-E5mg/YHM8V5PbPkI/AAAAAAAAEQw/RN1i0Xhdi7ALWcLWG_e_IfhNdSW6CRfHgCLcBGAsYHQ/s0/Wind18.png",x,y,TileSize,TileSize);
      break
      case 172:
      image("https://1.bp.blogspot.com/-oagSmRHVBOk/YHM8V9-OMLI/AAAAAAAAEQs/a89DctCTJho8D9bBCGvbOf92abFylT4_ACLcBGAsYHQ/s0/Wind19.png",x,y,TileSize,TileSize);
      break
      case 173:
      image("https://1.bp.blogspot.com/-pz7WsCRKoCI/YHM8Wmw-87I/AAAAAAAAEQ4/y9o1PUhAgg0DjL1dio7n3X8MFUIq4JuXgCLcBGAsYHQ/s0/Wind20.png",x,y,TileSize,TileSize);
      break
      case 1001://trampolin
      	image("https://1.bp.blogspot.com/-P1-VgUo99GE/YFU4RRyC7wI/AAAAAAAAD7I/YO2tIcwzbQAaOrGGYwD5bjbLev3UK7S0wCLcBGAsYHQ/s0/up.png",x,y,TileSize,TileSize);
      break
      case 1002://plataforma
      	image("https://1.bp.blogspot.com/-f2Z9SqZwdEs/YFYomiBnKkI/AAAAAAAAD88/qHoM3LF8nDsMiB-AKzdqMb_dggjkqmXBgCLcBGAsYHQ/s0/upp.png",x,y,TileSize,TileSize);
      break
      case 1003:
      	image("https://1.bp.blogspot.com/-_hAbdcEih90/YFYog6fBpFI/AAAAAAAAD7s/2mwA69IurZkshMBXBTfstE0ANZ_1pnjwwCLcBGAsYHQ/s0/downp.png",x,y,TileSize,TileSize);
      break
      case 1004:
      	image("https://1.bp.blogspot.com/-govCH_KOzJw/YFYolx_J7OI/AAAAAAAAD84/1EH6CFgIN8gghBGgzG8AF9Q8ysEpBxY0QCLcBGAsYHQ/s0/rightp.png",x,y,TileSize,TileSize);
      break
      case 1005:
      	image("https://1.bp.blogspot.com/-ECIGsvbVMrM/YFYolVHXwRI/AAAAAAAAD80/5JJJg1O3OdsIglOp9EEZ8EG5nZ-eSLupQCLcBGAsYHQ/s0/leftp.png",x,y,TileSize,TileSize);
      break 
      case 1006://Fuego
      	aniTile.render(x,y,TileSize,TileSize);
      break
      case 1007://Lava
      	image("https://1.bp.blogspot.com/-Lu12epXtRkQ/YFYok9iASeI/AAAAAAAAD8o/XPUhNkP-cXYMPp0QU9hqFgBFmeISjhl_gCLcBGAsYHQ/s0/lava.png",x,y,TileSize,TileSize);
      break
      case 1008://Agua
      	image("https://1.bp.blogspot.com/-fhK7E4BJFxk/YFYomqyZeeI/AAAAAAAAD9A/gJbh15jG-UMgCpUZ2pCLykfx7-JFKSiWgCLcBGAsYHQ/s0/water.png",x,y,TileSize,TileSize);
      break
      case 1009://Bandera final
      	aniTile.render(x,y,TileSize,TileSize);
      break
      case 1010://bloque fantasma
      	if(scene != 0){
          image("https://1.bp.blogspot.com/-QSJOaNQtuJw/YFYog8BuApI/AAAAAAAAD7w/R012vOVE0DMmuV97qAyd3zKzKYJT76XOgCLcBGAsYHQ/s0/empty.png",x,y,TileSize,TileSize);
        }      	
      break
      case 1011://powerUp tierra
      	image("https://1.bp.blogspot.com/-2KqrsKB7p3I/YFOQqTUs_LI/AAAAAAAAD4E/o1qhRsOXV9Q7pWtoy9ReLYf3WcWTSUqowCLcBGAsYHQ/s0/powerUp1.png",
              x,y,TileSize,TileSize);
      break
      case 1012://powerUp agua
      	image("https://1.bp.blogspot.com/-9xgTdpYKKrs/YFOQqQhS3cI/AAAAAAAAD4A/oNCpjuqkXOonfkuPfWaW5pjPb50nrwuHQCLcBGAsYHQ/s0/powerUp2.png",
              x,y,TileSize,TileSize);
      break
      case 1013://powerUp fuego
      	image("https://1.bp.blogspot.com/-9o7BMP4oo8E/YFOQqYN9Z4I/AAAAAAAAD4I/aPs2SpklpCUnRs0wgcMr6cTGb1M_iBEBACLcBGAsYHQ/s0/powerUp3.png",
              x,y,TileSize,TileSize);
      break
      case 1014://powerUp viento
      	image("https://1.bp.blogspot.com/-T9Q4j_au8aU/YFOQq_W5h5I/AAAAAAAAD4M/Xz0qoxH8W3AKe8vwIj8QM4LmQZUFZu2tgCLcBGAsYHQ/s0/powerUp4.png",
              x,y,TileSize,TileSize);
      break
      case 1015://trampolin DOWN
      	image("https://1.bp.blogspot.com/-cJQe5XCQBCI/YFU4QsUdNWI/AAAAAAAAD68/XEBw2o3b5YkBCIW7iFt-ccGnPjkw3HGmACLcBGAsYHQ/s0/down.png",x,y,TileSize,TileSize);
      break
      case 1016://trampolin LEFT
      	image("https://1.bp.blogspot.com/-LtSDKtr9c7c/YFYoP1smPJI/AAAAAAAAD7g/RtEJNBUs3pMGoSm0Pt4vY_-F0AOZEyUOgCLcBGAsYHQ/s0/left.png",x,y,TileSize,TileSize);
      break
      case 1017://trampolin RIGHT
      	image("https://1.bp.blogspot.com/-J32X7rQNYeE/YFU4Qhh2YMI/AAAAAAAAD7E/mmi54lP-1W0-5rqnUi8hNr5oFV4OCaeJgCLcBGAsYHQ/s0/right.png",x,y,TileSize,TileSize);
      break
      case 1018://lava top
      	image("https://1.bp.blogspot.com/-uIQhv5deKnY/YFYolM9jnNI/AAAAAAAAD8w/HKBrhyBLEEUBKz3pXXJZ4ogsxXXzOVcVgCLcBGAsYHQ/s0/lavaTop.png",x,y,TileSize,TileSize);
      break
      case 1019://lava mid
      	image("https://1.bp.blogspot.com/-K5hW8njVgLc/YFYok1szyKI/AAAAAAAAD8s/VwRb9c2T2FQNCJFvvcd2zz5xuja8QdWXgCLcBGAsYHQ/s0/lavaMid.png",x,y,TileSize,TileSize);
      break
      case 1020://agua top
      	image("https://1.bp.blogspot.com/-aFKC-8Ajtug/YFYom7BjC_I/AAAAAAAAD9E/4bSjNi-ZHYQ7yg1uuQCfELevO_mOBZdLwCLcBGAsYHQ/s0/waterTop.png",x,y,TileSize,TileSize);
      break
      case 1021://guia enemigos
      	if(scene != 0){
          image("https://1.bp.blogspot.com/-5DRglQTkDnc/YGcxkebbnvI/AAAAAAAAEKs/_-LEtChZp8kInKCR2LOnHigSKpkjHndzACLcBGAsYHQ/s0/guia.png",
              x,y,TileSize,TileSize);
        }
      break
      case 9001://pickups (9000 para delante)
      	aniTile.render(x,y,TileSize,TileSize);
      break
      case 9002:
				image("https://1.bp.blogspot.com/-6dTmrC2vBEI/YFUvJMGpTHI/AAAAAAAAD6k/6X3PVc7FpW4dd9YXuVv1GMt3mfZi0UEVgCLcBGAsYHQ/s0/heart.png",
              x,y,TileSize,TileSize);
      break
      case 9003:
      	image("https://1.bp.blogspot.com/-Er0XuwUASyI/X8Fd0rDkFRI/AAAAAAAADlQ/xE2pG0dcMlsI1oYb7-xk_tUgP5rUOClIQCLcBGAsYHQ/s0/E_Metal07.png",
              x,y,TileSize,TileSize);
      break
      case 9004:
      	image("https://1.bp.blogspot.com/-IY12x_xFpRg/YFUvKYNY9JI/AAAAAAAAD6o/uaRq-vElI20cuKxlA67SldeKDLgRFpv2gCLcBGAsYHQ/s0/potion.png",
              x,y,TileSize,TileSize);
      break
      case 9005:
      	image("https://1.bp.blogspot.com/-Mv3Hsv4x-vc/YFUyGaUg8OI/AAAAAAAAD60/aGPWNcpAfQkMMJG-gScW9zv0tNNhUBwAwCLcBGAsYHQ/s0/lifeUp.png",
              x,y,TileSize,TileSize);
      break
      case 9050://colecionables a partir de los 9050, se suma 10 por cada nivel 
      	image("https://1.bp.blogspot.com/-4Q0ozCntDD0/YFzM_oV2jVI/AAAAAAAAEBg/heCqwt9L5g4_WwiZH4Yv7CDfOoHP05mIQCLcBGAsYHQ/s0/coleccionable.png",
              x,y,TileSize,TileSize);
      break
    }
    fill(0);
    stroke(0);
    rect(-10,-10,1,1);
  }
}

tile copyTile(tile Tile){
  tile newTile = new tile(Tile.ID);
  newTile.trigger = getTriggersFromID(Tile.ID);
  newTile.setup();
  
  return newTile;
}

int[] getTriggersFromID(int ID){
  
  /*
  
  int[] trig1List = {hasta40}; //Colisión bloque entero
  int[] trig2List = {1002}; //Colisión bloque arriba
  int[] trig3List = {1003}; //Colisión bloque abajo
  int[] trig4List = {1004}; //Colisión bloque izquierda
  int[] trig5List = {1005}; //Colisión bloque derecha
  int[] trig6List = {1001}; //Trampolín
  int[] trig7List = {9001}; //Pickup
  trigger 8: fuego
  trigger 9: lava
  trigger 10: agua
  trigger 11: final del nivel
  trigger 12: capa 2 del nivel
  trigger 13: caja
  trigger 14: pinchos
  trigger 15: powerUp
  trigger 16: powerUp
  trigger 17: powerUp
  trigger 18: powerUp
  trigger 19: trampolin
  trigger 20: trampolin
  trigger 21: trampolin
  trigger 22: hojas
  trigger 23: hielo
  trigger 24: magma
  
  */
  
  int[] trigList = {1,2,3,4,5,6,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,1001,
                    1015,1016,1017,41,42,43,44,45,46,54,55,56,59,60,64,65,66,69,70,71,73,74,75,76,77,78,79,80,81,82,83,
                    84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,
                    113,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,
                    147,148,154,155,156,157,158,159,160,161,164,165,166,167,168,169,170,171,172,173,-1,
                    1002,120,-1,1003,121,-1,1004,119,-1,1005,118,-1,1001,-1,9001,9002,9003,9004,9005,-1,1006,
                   -1,1007,1018,1019,-1,1008,1020,-1,1009,-1,9001,9002,9003,9004,9005,20,30,40,114,115,116,117,1010,1021,153,162,163,
                    -1,10,55,77,122,133,140,142,172,
                   -1,7,8,9,47,48,49,50,51,52,53,57,58,61,62,63,67,68,149,150,151,152,-1,1011,-1,1012,-1,1013,-1,1014,
                    -1,1015,-1,1016,-1,1017,
                   -1,72,1021,-1,123,122,-1,143};

  int[] triggers = new int[0];
   
  int j = 0;
  for(int i = 0; i < trigList.length; i++){
    if(trigList[i] == -1){
      j++;
      i++;
    }
    if(ID == trigList[i]){
      triggers = pushInt(triggers,j+1);
    }
  }
  
  if(ID >= 9050 && ID < 9999){
    triggers = pushInt(triggers,7);
    triggers = pushInt(triggers,12);
  }
  
  if(triggers.length == 0){
    triggers = pushInt(triggers,0);
  }
  
  return triggers
}

class TileMap{
  tile[][] Tiles;
  int[][] trueMap;
  
  vector curCamera = camera;
  
  TileMap(int[][] Map){
    
    trueMap = Map;
    
    Tiles = new tile[sizeOf(Map,1)][sizeOf(Map,2)];
    
    for(int i = 0; i < sizeOf(Map,1); i++){
      for(int j = 0; j < sizeOf(Map,2); j++){                
        Tiles[i][j] = new tile(Map[i][j]); 
        
       	Tiles[i][j].trigger = getTriggersFromID(Map[i][j]);
      	
    	}
    }
    
    for(int i = 0; i < sizeOf(Tiles,1); i++){
      for(int j = 0; j < sizeOf(Tiles,2); j++){ 
        
        if(i != 0 && Tiles[i-1][j].hasTrigger(1)){
          Tiles[i][j].sides[0] = false;
        }
        if(i != sizeOf(Tiles,1)-1 && Tiles[i+1][j].hasTrigger(1)){
          Tiles[i][j].sides[1] = false;
        }
        if(j != 0 && Tiles[i][j-1].hasTrigger(1)){
          Tiles[i][j].sides[2] = false;
        }
        if(j != sizeOf(Tiles,2)-1 && Tiles[i][j+1].hasTrigger(1)){
          Tiles[i][j].sides[3] = false;
        }
      }
    }
  }

  //Calcula los lados que van a poder colisionar
  public void getTrigger(Stage stage){
    for(int i = 0; i < sizeOf(Tiles,1); i++){
      for(int j = 0; j < sizeOf(Tiles,2); j++){
        Tiles[i][j].trigger = getTriggersFromID(Tiles[i][j].ID);
        Tiles[i][j].sides[0] = true;
        Tiles[i][j].sides[1] = true;
        Tiles[i][j].sides[2] = true;
        Tiles[i][j].sides[3] = true;
      	
    	}
    }
    for(int i = 0; i < sizeOf(Tiles,1); i++){
      for(int j = 0; j < sizeOf(Tiles,2); j++){ 
        
        if(i != 0 && Tiles[i-1][j].hasTrigger(1) && stage.layer2.Tiles[i-1][j].ID != 1010){
          Tiles[i][j].sides[0] = false;
        }
        if(i != sizeOf(Tiles,1)-1 && Tiles[i+1][j].hasTrigger(1) && stage.layer2.Tiles[i+1][j].ID != 1010){
          Tiles[i][j].sides[1] = false;
        }
        if(j != 0 && Tiles[i][j-1].hasTrigger(1) && stage.layer2.Tiles[i][j-1].ID != 1010){
          Tiles[i][j].sides[2] = false;
        }
        if(j != sizeOf(Tiles,2)-1 && Tiles[i][j+1].hasTrigger(1) && stage.layer2.Tiles[i][j+1].ID != 1010){
          Tiles[i][j].sides[3] = false;
        }
      }
    }
  }
  
  //Renderiza bloque individual, sabiendo su posición en el array
  public void render(int i, int j){
    noStroke();
    noFill();

    double x = j * TileSize + curCamera.x;
    double y = i * TileSize + curCamera.y;
    
    //Si la tile está dentro la pantalla, renderízala (sabiendo ID)
    if(x <= 320 && x >= 0-TileSize && y <= 320 && y >= 0-TileSize){ 
      Tiles[i][j].render(x,y);
      
      //Dibuja cuadrícula en editor
      if(scene == 3 && grid){
        noFill();
        stroke(0);
        strokeWeight(1);
        rect(x,y,TileSize,TileSize);
      }
      
      //Dibuja los lados en debug
      if(debug && Tiles[i][j].hasNotTrigger(0)){ 
        double offset = tileCollisionOffset;
        strokeWeight(1);
        stroke(255,0,0);
        if(Tiles[i][j].sides[0]){ 
        	line(x+offset,y,x+TileSize-offset,y);
        }
        if(Tiles[i][j].sides[1]){ 
        	line(x+offset,y+TileSize,x+TileSize-offset,y+TileSize);
        }
        stroke(0,255,0);
        if(Tiles[i][j].sides[2]){ 
        	line(x,y+offset,x,y+TileSize-offset);
        }
        if(Tiles[i][j].sides[3]){ 
        	line(x+TileSize,y+offset,x+TileSize,y+TileSize-offset);
        }
      }
    }
  }
   
  //Calcula la posición en el array, sabiendo una x e y
  public int[] getTile(double x, double y){
    int posX = floor((x-curCamera.x)/TileSize);
    int posY = floor((y-curCamera.y)/TileSize);
    int[] a = {posX,posY};
    return a;
  }
}

TileMap copyTileMap(TileMap map, Stage stage){
  int[][] blankMap = new int[sizeOf(map.Tiles,1)][sizeOf(map.Tiles,2)];
  TileMap newMap = new TileMap(blankMap); 
  newMap.Tiles = new tile[sizeOf(newMap.trueMap,1)][sizeOf(newMap.trueMap,2)];
  for(int i = 0; i < sizeOf(newMap.trueMap,1); i++){
    for(int j = 0; j < sizeOf(newMap.trueMap,2); j++){
      newMap.Tiles[i][j] = copyTile(map.Tiles[i][j]);
    }
  }
  
  newMap.getTrigger(stage);
  
  return newMap;
}

enemy[] copyEnemyList(enemy[] arr){
  enemy[] newArr = new enemy[arr.length];
  for(int i = 0; i < newArr.length; i++){
    newArr[i] = new enemy(arr[i].e.ID,arr[i].e.pos.x,arr[i].e.pos.y,arr[i].e.width,arr[i].e.height);
  }
  return newArr;
}

class Stage{
  
  TileMap layer1;
  TileMap layer2;
  
  TileMap auxlayer1;
  TileMap auxlayer2;
  
  int ID;
  
  int BG;
  double xBG1;
  double xBG2;
  double xBG3;
  double vx;
  
  double startX = 25;
  double startY = 100;
  
  boolean enlighten = false;
  double maxLight = 200;
  double minLight = 100;
  double dif = 100;
  int timer = 0;
  int maxLen = 50;
  boolean oscilation = true;
  
  int coinCounter;
  boolean[] collectibles;
  
  enemy[] stageEnemies; 
  
  enemy[] auxEnemies;
  
  Stage(int[][] Map, int BG, int collectableNum, int ID){
    this.layer1 = new TileMap(Map);
    this.auxlayer1 = new TileMap(Map);
    
    this.BG = BG;
    
    this.ID = ID;
    
    int[][] blankSlate = new int[sizeOf(layer1.Tiles,1)][sizeOf(layer1.Tiles,2)];
    
    this.layer2 = new TileMap(blankSlate);
    this.auxlayer2 = new TileMap(blankSlate);
    
    this.coinCounter = 0;
    this.collectibles = new boolean[collectableNum];
    
    this.stageEnemies = new enemy[0];
    this.auxEnemies = new enemy[0];
    
    for(int i = 0; i < this.collectibles.length; i++){
      this.collectibles[i] = false;
    }

  }
  
  //Manejo de arrays de enemigos
  public enemy[] pushEnemy(enemy[] arr, int ID2, double x, double y, double width, double height){
    enemy[] aux = arr;
    arr = new enemy[aux.length+1];
    for(int i = 0; i < aux.length; i++){
      arr[i] = aux[i];
    }
    arr[aux.length] = new enemy(ID2,x,y,width,height);
    return arr;
  }
  
  public enemy[] delEnemy(enemy[] arr, int index){
    enemy[] aux = arr;
    arr = new enemy[aux.length-1];
    int n;
    for(int i = 0; i < aux.length; i++){
      if(i != index){
      	arr[n] = aux[i]; 
        n++;
      }
    }
    return arr;
  }
  
  public void changeCamera(vector cam){
    layer1.curCamera = cam;
    layer2.curCamera = cam;
    auxlayer1.curCamera = cam;
    auxlayer2.curCamera = cam;
  }
  
  public void addEnemy(int ID2, double x, double y, double width, double height){
    stageEnemies = pushEnemy(stageEnemies,ID2,x,y,width,height);
    auxEnemies = pushEnemy(auxEnemies,ID2,x,y,width,height);
  }
  
  public void renderEnemies(){
    for(int i = 0; i < stageEnemies.length; i++){
      if(D(160,160,stageEnemies[i].e.pos.x,stageEnemies[i].e.pos.y) < 320){
        stageEnemies[i].render();
      }
    }
  }
  
  public void setup(){
    xBG1 = 0;
    xBG2 = 0;
    xBG3 = 0; 
    
    coinCounter = 0;   
    
    layer2 = copyTileMap(auxlayer2,this);
    layer1 = copyTileMap(auxlayer1,this);  
    
    camera.equal(0,0);
    editorCamera.equal(0,0);
    
    stageEnemies = copyEnemyList(auxEnemies);

    curPlayer.e.pos.equal(startX,startY);
    curPlayer.e.vel.equal(0,0);
    curPlayer.e.acc.equal(0,0);   
    
    curPlayer.health = 3;
    curPlayer.invul = false;
    curPlayer.invulTimer = 0;
    curPlayer.mana = curPlayer.maxMana;
    curPlayer.breath = curPlayer.breathDur;
    
   	curPlayer.selAbility = 0;
  	curPlayer.basicAtk = new magicBall[0];
    curPlayer.earthAtk = new earthWall[0];
    curPlayer.waterAtk = new magicBall[0];
    curPlayer.fireAtk = new magicBall[0];
    curPlayer.windAtk = new wind[0];
    curPlayer.drag = false;
    curPlayer.jumping = false;
    curPlayer.jumpingD = false;
    
    curPlayer.ab1 = new vector(0,0);
  	curPlayer.ab2 = new vector(0,0);
  	curPlayer.ab3 = new vector(0,0);
  	curPlayer.ab4 = new vector(0,0);
  	curPlayer.ab5 = new vector(0,0);
  	curPlayer.angleH = 315;
  	curPlayer.targetAngle = 315;
  	curPlayer.moving = 0;
    
    curPlayer.forces = new vector[0];
    curPlayer.forceTimers = new int[0];
    
    globalParticleSystem.arr = new emitter[0];
  }
  
  public void updateEnemies(){
    for(int i = 0; i < stageEnemies.length; i++){
    	if(stageEnemies[i].health <= 0 && stageEnemies[i].health != -1){
        stageEnemies = delEnemy(stageEnemies,i);
      }
    }
    for(int i = 0; i < stageEnemies.length; i++){
    	stageEnemies[i].update();
    }
  }
  
  public void addPickup(int posX, int posY, int ID){
    /*layer1.Tiles[posY][posX].trigger = getTriggersFromID(9000+ID);
    layer1.Tiles[posY][posX].ID = 9000+ID;
    layer1.Tiles[posY][posX].setup();
    
    auxlayer1.Tiles[posY][posX].trigger = getTriggersFromID(9000+ID);
    auxlayer1.Tiles[posY][posX].ID = 9000+ID;
    auxlayer1.Tiles[posY][posX].setup();*/
    layer2.Tiles[posY][posX].trigger = getTriggersFromID(9000+ID);
    layer2.Tiles[posY][posX].ID = 9000+ID;
    layer2.Tiles[posY][posX].setup();
    
    auxlayer2.Tiles[posY][posX].trigger = getTriggersFromID(9000+ID);
    auxlayer2.Tiles[posY][posX].ID = 9000+ID;
    auxlayer2.Tiles[posY][posX].setup();
    
  }
  
  //Renderiza cada capa, teniendo en cuenta las tiles alrededor del centro (super eficiente)
  public void render(TileMap layer){
    double[][][] selTiles = getTilesAround(160,160,0,0,ceil(320/TileSize)+2,ceil(320/TileSize)+2,layer);
    
    for(int j = 0; j < selTiles.length; j++){
      for(int k = 0; k < sizeOf(selTiles,2); k++){        
        if(selTiles[j][k][4] == 1.0){
          int posX = round(selTiles[j][k][2]);
          int posY = round(selTiles[j][k][3]);
          layer.render(posX,posY);
          /*if(!layer1.Tiles[posX][posY].hasTrigger(13) || scene == 3){
            layer2.render(posX,posY);
          }         */
        }
        
      }
    }
  }
  public void update(){
    //Parallax
    xBG1 += vx;
    xBG2 += vx*2;
    xBG3 += vx*3;
    if(xBG1 >= 320 || xBG1 <= -320){
      xBG1 = 0;
    }
    if(xBG2 >= 320 || xBG2 <= -320){
      xBG2 = 0;
    }
    if(xBG3 >= 320 || xBG3 <= -320){
      xBG3 = 0;
    }
  }
  //Renderiza los fondos del nivel
  public void renderBG(){
    switch(BG){
      case 1:
      	image("https://1.bp.blogspot.com/-IN2ZLkwacK4/YCmBw84-ltI/AAAAAAAADss/ggYbCkWSLbAuPk_46Sh7b5Vc4WzFKdh8gCLcBGAsYHQ/s0/bg1-4.png",0,0,320,320);
      
      	image("https://1.bp.blogspot.com/-AMh0D0nOiOA/YCmBwFW_TRI/AAAAAAAADsk/lpUYdqlyGWA5CwOSsCwjNeAcsQViHQWSQCLcBGAsYHQ/s0/bg1-3.png",xBG1-320,0,320,320);
      	image("https://1.bp.blogspot.com/-AMh0D0nOiOA/YCmBwFW_TRI/AAAAAAAADsk/lpUYdqlyGWA5CwOSsCwjNeAcsQViHQWSQCLcBGAsYHQ/s0/bg1-3.png",xBG1,0,320,320);
      	image("https://1.bp.blogspot.com/-AMh0D0nOiOA/YCmBwFW_TRI/AAAAAAAADsk/lpUYdqlyGWA5CwOSsCwjNeAcsQViHQWSQCLcBGAsYHQ/s0/bg1-3.png",xBG1+320,0,320,320);
      	
      	image("https://1.bp.blogspot.com/-QmAuIpyOSIg/YCmBwGqRFWI/AAAAAAAADsg/Vb0-tHJPCKUetgH_1HocCGkoRyBqt5DnwCLcBGAsYHQ/s0/bg1-2.png",xBG2-320,0,320,320);
        image("https://1.bp.blogspot.com/-QmAuIpyOSIg/YCmBwGqRFWI/AAAAAAAADsg/Vb0-tHJPCKUetgH_1HocCGkoRyBqt5DnwCLcBGAsYHQ/s0/bg1-2.png",xBG2,0,320,320);
      	image("https://1.bp.blogspot.com/-QmAuIpyOSIg/YCmBwGqRFWI/AAAAAAAADsg/Vb0-tHJPCKUetgH_1HocCGkoRyBqt5DnwCLcBGAsYHQ/s0/bg1-2.png",xBG2+320,0,320,320);
      	
      	image("https://1.bp.blogspot.com/-dQ2EbyUAlhs/YCmBwbRXwkI/AAAAAAAADso/iKH8LHVLACg92aJVbeHxQ7Y3NoNLGLarQCLcBGAsYHQ/s0/bg1-1.png",xBG3-320,0,320,320);
        image("https://1.bp.blogspot.com/-dQ2EbyUAlhs/YCmBwbRXwkI/AAAAAAAADso/iKH8LHVLACg92aJVbeHxQ7Y3NoNLGLarQCLcBGAsYHQ/s0/bg1-1.png",xBG3,0,320,320);
      	image("https://1.bp.blogspot.com/-dQ2EbyUAlhs/YCmBwbRXwkI/AAAAAAAADso/iKH8LHVLACg92aJVbeHxQ7Y3NoNLGLarQCLcBGAsYHQ/s0/bg1-1.png",xBG3+320,0,320,320);
      break
      case 2:
      	image("https://1.bp.blogspot.com/-iANJmBj5b4w/YFen2mMbrwI/AAAAAAAAEAQ/MIUw3HwkTqoJW5rEYFBhbWabFbAEwr0lQCLcBGAsYHQ/s0/bg2-4.png",0,0,320,320);
      
      	image("https://1.bp.blogspot.com/-sVx4O1IuTqQ/YFen2Nb0uWI/AAAAAAAAEAE/iGQ0jY9FfI0uZQJD25YbnU06Tdi7dJUfwCLcBGAsYHQ/s0/bg2-3.png",xBG1-320,0,320,320);
      	image("https://1.bp.blogspot.com/-sVx4O1IuTqQ/YFen2Nb0uWI/AAAAAAAAEAE/iGQ0jY9FfI0uZQJD25YbnU06Tdi7dJUfwCLcBGAsYHQ/s0/bg2-3.png",xBG1,0,320,320);
      	image("https://1.bp.blogspot.com/-sVx4O1IuTqQ/YFen2Nb0uWI/AAAAAAAAEAE/iGQ0jY9FfI0uZQJD25YbnU06Tdi7dJUfwCLcBGAsYHQ/s0/bg2-3.png",xBG1+320,0,320,320);
      
      	image("https://1.bp.blogspot.com/-m3B1vLz6hyM/YFen2DyHwCI/AAAAAAAAEAM/opAoIfJi0rMyRkp9oE8YUQmwdLFYpcO-ACLcBGAsYHQ/s0/bg2-2.png",xBG2-320,0,320,320);
      	image("https://1.bp.blogspot.com/-m3B1vLz6hyM/YFen2DyHwCI/AAAAAAAAEAM/opAoIfJi0rMyRkp9oE8YUQmwdLFYpcO-ACLcBGAsYHQ/s0/bg2-2.png",xBG2,0,320,320);
      	image("https://1.bp.blogspot.com/-m3B1vLz6hyM/YFen2DyHwCI/AAAAAAAAEAM/opAoIfJi0rMyRkp9oE8YUQmwdLFYpcO-ACLcBGAsYHQ/s0/bg2-2.png",xBG2+320,0,320,320);
      
      	image("https://1.bp.blogspot.com/-W9jli-Wd6pI/YFen2GzMVrI/AAAAAAAAEAI/QQa7OdMqovs2vJmOREDSC_0zI469qixsACLcBGAsYHQ/s0/bg2-1.png",xBG3-320,0,320,320);
      	image("https://1.bp.blogspot.com/-W9jli-Wd6pI/YFen2GzMVrI/AAAAAAAAEAI/QQa7OdMqovs2vJmOREDSC_0zI469qixsACLcBGAsYHQ/s0/bg2-1.png",xBG3,0,320,320);
      	image("https://1.bp.blogspot.com/-W9jli-Wd6pI/YFen2GzMVrI/AAAAAAAAEAI/QQa7OdMqovs2vJmOREDSC_0zI469qixsACLcBGAsYHQ/s0/bg2-1.png",xBG3+320,0,320,320); 
      break
      case 3:
      	image("https://1.bp.blogspot.com/-AQheDkSWnws/YFe0QfnEG7I/AAAAAAAAEAw/4zSxaOdCmAox-pvb16D8U2WUT4Bm8z9ZgCLcBGAsYHQ/s0/bg3-4.png",0,0,320,320);
      
      	image("https://1.bp.blogspot.com/-OoeSQzj9SVI/YFe0P3QmamI/AAAAAAAAEAk/oZa2clvbnGwqZaqFVkHsphNQxKbSKgUOgCLcBGAsYHQ/s0/bg3-3.png",xBG1-320,0,320,320);
      	image("https://1.bp.blogspot.com/-OoeSQzj9SVI/YFe0P3QmamI/AAAAAAAAEAk/oZa2clvbnGwqZaqFVkHsphNQxKbSKgUOgCLcBGAsYHQ/s0/bg3-3.png",xBG1,0,320,320);
      	image("https://1.bp.blogspot.com/-OoeSQzj9SVI/YFe0P3QmamI/AAAAAAAAEAk/oZa2clvbnGwqZaqFVkHsphNQxKbSKgUOgCLcBGAsYHQ/s0/bg3-3.png",xBG1+320,0,320,320);
      
      	image("https://1.bp.blogspot.com/-QnuWsO896Bc/YFe0Pxesh0I/AAAAAAAAEAs/ibFvT7vWF2c5Pn-rb5q-QdMMupiKZe1lACLcBGAsYHQ/s0/bg3-2.png",xBG2-320,0,320,320);
      	image("https://1.bp.blogspot.com/-QnuWsO896Bc/YFe0Pxesh0I/AAAAAAAAEAs/ibFvT7vWF2c5Pn-rb5q-QdMMupiKZe1lACLcBGAsYHQ/s0/bg3-2.png",xBG2,0,320,320);
      	image("https://1.bp.blogspot.com/-QnuWsO896Bc/YFe0Pxesh0I/AAAAAAAAEAs/ibFvT7vWF2c5Pn-rb5q-QdMMupiKZe1lACLcBGAsYHQ/s0/bg3-2.png",xBG2+320,0,320,320);
      
      	image("https://1.bp.blogspot.com/-T_WTV2v_mIU/YFe0P6YpKqI/AAAAAAAAEAo/vpZYFmGRoZcgSH1IFrrQgU2MBHBwcXpSgCLcBGAsYHQ/s0/bg3-1.png",xBG3-320,0,320,320);
      	image("https://1.bp.blogspot.com/-T_WTV2v_mIU/YFe0P6YpKqI/AAAAAAAAEAo/vpZYFmGRoZcgSH1IFrrQgU2MBHBwcXpSgCLcBGAsYHQ/s0/bg3-1.png",xBG3,0,320,320);
      	image("https://1.bp.blogspot.com/-T_WTV2v_mIU/YFe0P6YpKqI/AAAAAAAAEAo/vpZYFmGRoZcgSH1IFrrQgU2MBHBwcXpSgCLcBGAsYHQ/s0/bg3-1.png",xBG3+320,0,320,320); 
      break
      case 4:
      	image("https://1.bp.blogspot.com/-3f82xRvtpq0/YGDaIhGO_6I/AAAAAAAAECI/UUFYjXsqrZML1fvNIqnQSxhiS6MiqDMPgCLcBGAsYHQ/s0/bg4-4.png",0,0,320,320);
      
      	image("https://1.bp.blogspot.com/-EduOmI2WYiI/YGDaHw_MuCI/AAAAAAAAEB8/YPPuLoC8cokGawTiUnUbkV3B0SZAOzbUQCLcBGAsYHQ/s0/bg4-3.png",xBG1-320,0,320,320);
      	image("https://1.bp.blogspot.com/-EduOmI2WYiI/YGDaHw_MuCI/AAAAAAAAEB8/YPPuLoC8cokGawTiUnUbkV3B0SZAOzbUQCLcBGAsYHQ/s0/bg4-3.png",xBG1,0,320,320);
      	image("https://1.bp.blogspot.com/-EduOmI2WYiI/YGDaHw_MuCI/AAAAAAAAEB8/YPPuLoC8cokGawTiUnUbkV3B0SZAOzbUQCLcBGAsYHQ/s0/bg4-3.png",xBG1+320,0,320,320);
      
      	image("https://1.bp.blogspot.com/-rBvRYWVfU9w/YGDaHzmqCBI/AAAAAAAAECA/Rr52EkJvcSEJTOqcCWQfKT--X4HAD2fygCLcBGAsYHQ/s0/bg4-2.png",xBG2-320,0,320,320);
      	image("https://1.bp.blogspot.com/-rBvRYWVfU9w/YGDaHzmqCBI/AAAAAAAAECA/Rr52EkJvcSEJTOqcCWQfKT--X4HAD2fygCLcBGAsYHQ/s0/bg4-2.png",xBG2,0,320,320);
      	image("https://1.bp.blogspot.com/-rBvRYWVfU9w/YGDaHzmqCBI/AAAAAAAAECA/Rr52EkJvcSEJTOqcCWQfKT--X4HAD2fygCLcBGAsYHQ/s0/bg4-2.png",xBG2+320,0,320,320);
      
      	image("https://1.bp.blogspot.com/-8CMkwMw0F0I/YGDaH_fC6fI/AAAAAAAAECE/AgW-bUgsb_YXYCova6O1RZ-BGGvu-0wYACLcBGAsYHQ/s0/bg4-1.png",xBG3-320,0,320,320);
      	image("https://1.bp.blogspot.com/-8CMkwMw0F0I/YGDaH_fC6fI/AAAAAAAAECE/AgW-bUgsb_YXYCova6O1RZ-BGGvu-0wYACLcBGAsYHQ/s0/bg4-1.png",xBG3,0,320,320);
      	image("https://1.bp.blogspot.com/-8CMkwMw0F0I/YGDaH_fC6fI/AAAAAAAAECE/AgW-bUgsb_YXYCova6O1RZ-BGGvu-0wYACLcBGAsYHQ/s0/bg4-1.png",xBG3+320,0,320,320); 
      break
      case 5:
      	image("https://1.bp.blogspot.com/-XxVPE0x9ZYU/YGZMpwkz3PI/AAAAAAAAEHM/VnXOea3V0l0OdhkPCvI4plpiBWiDQatjQCLcBGAsYHQ/s0/bg5-4.png",0,0,320,320);
      
      	image("https://1.bp.blogspot.com/-6IsnQ-GZBEo/YGZMpKF8wUI/AAAAAAAAEHI/lKzo_mn5GpIdXkFL8dThOmqeFXEq1OpaACLcBGAsYHQ/s0/bg5-3.png",xBG1-320,0,320,320);
      	image("https://1.bp.blogspot.com/-6IsnQ-GZBEo/YGZMpKF8wUI/AAAAAAAAEHI/lKzo_mn5GpIdXkFL8dThOmqeFXEq1OpaACLcBGAsYHQ/s0/bg5-3.png",xBG1,0,320,320);
	      image("https://1.bp.blogspot.com/-6IsnQ-GZBEo/YGZMpKF8wUI/AAAAAAAAEHI/lKzo_mn5GpIdXkFL8dThOmqeFXEq1OpaACLcBGAsYHQ/s0/bg5-3.png",xBG1+320,0,320,320);
      	
      	image("https://1.bp.blogspot.com/-v8R09lbH_Ko/YGZMpJ2BKLI/AAAAAAAAEHA/aufiJgDf8gIQsUDQ2XjUSXZBVJX7rXKmgCLcBGAsYHQ/s0/bg5-2.png",xBG2-320,0,320,320);
				image("https://1.bp.blogspot.com/-v8R09lbH_Ko/YGZMpJ2BKLI/AAAAAAAAEHA/aufiJgDf8gIQsUDQ2XjUSXZBVJX7rXKmgCLcBGAsYHQ/s0/bg5-2.png",xBG2,0,320,320);
      	image("https://1.bp.blogspot.com/-v8R09lbH_Ko/YGZMpJ2BKLI/AAAAAAAAEHA/aufiJgDf8gIQsUDQ2XjUSXZBVJX7rXKmgCLcBGAsYHQ/s0/bg5-2.png",xBG2+320,0,320,320);
      
      	image("https://1.bp.blogspot.com/-517WBPV-p-A/YGZMpGEHefI/AAAAAAAAEHE/bgzgcIXMRloXbGKBzWdEYoZfKDiFPa14gCLcBGAsYHQ/s0/bg5-1.png",xBG3-320,0,320,320);
      	image("https://1.bp.blogspot.com/-517WBPV-p-A/YGZMpGEHefI/AAAAAAAAEHE/bgzgcIXMRloXbGKBzWdEYoZfKDiFPa14gCLcBGAsYHQ/s0/bg5-1.png",xBG3,0,320,320);
      	image("https://1.bp.blogspot.com/-517WBPV-p-A/YGZMpGEHefI/AAAAAAAAEHE/bgzgcIXMRloXbGKBzWdEYoZfKDiFPa14gCLcBGAsYHQ/s0/bg5-1.png",xBG3+320,0,320,320); 
      break
      case 6:
      	image("https://1.bp.blogspot.com/-vLLrXLubrqk/YGZMrOzsMLI/AAAAAAAAEHg/bY7J9tQsWZkAJSddCWaTX9XcJ2EiaHcXQCLcBGAsYHQ/s0/bg6-4.png",0,0,320,320);
      
      	image("https://1.bp.blogspot.com/-O_cMhVsco5k/YGZMqpxSu3I/AAAAAAAAEHc/yBw1W7nFkfUNNngSgtVtTh1XJ8y9nogjACLcBGAsYHQ/s0/bg6-3.png",xBG1-320,0,320,320);
      	image("https://1.bp.blogspot.com/-O_cMhVsco5k/YGZMqpxSu3I/AAAAAAAAEHc/yBw1W7nFkfUNNngSgtVtTh1XJ8y9nogjACLcBGAsYHQ/s0/bg6-3.png",xBG1,0,320,320);
	      image("https://1.bp.blogspot.com/-O_cMhVsco5k/YGZMqpxSu3I/AAAAAAAAEHc/yBw1W7nFkfUNNngSgtVtTh1XJ8y9nogjACLcBGAsYHQ/s0/bg6-3.png",xBG1+320,0,320,320);
      	
      	image("https://1.bp.blogspot.com/-3prOlukbSLc/YGZMqRERFpI/AAAAAAAAEHY/QrdzFZvsF2o_ik3X7L8L6KY1CviT42v3wCLcBGAsYHQ/s0/bg6-2.png",xBG2-320,0,320,320);
				image("https://1.bp.blogspot.com/-3prOlukbSLc/YGZMqRERFpI/AAAAAAAAEHY/QrdzFZvsF2o_ik3X7L8L6KY1CviT42v3wCLcBGAsYHQ/s0/bg6-2.png",xBG2,0,320,320);
      	image("https://1.bp.blogspot.com/-3prOlukbSLc/YGZMqRERFpI/AAAAAAAAEHY/QrdzFZvsF2o_ik3X7L8L6KY1CviT42v3wCLcBGAsYHQ/s0/bg6-2.png",xBG2+320,0,320,320);
      
      	image("https://1.bp.blogspot.com/-8rTMFpSgkiw/YGZMqO-YIrI/AAAAAAAAEHU/tUDog9n3ktoWBhlwT9_MrXo74F5mz1srACLcBGAsYHQ/s0/bg6-1.png",xBG3-320,0,320,320);
      	image("https://1.bp.blogspot.com/-8rTMFpSgkiw/YGZMqO-YIrI/AAAAAAAAEHU/tUDog9n3ktoWBhlwT9_MrXo74F5mz1srACLcBGAsYHQ/s0/bg6-1.png",xBG3,0,320,320);
      	image("https://1.bp.blogspot.com/-8rTMFpSgkiw/YGZMqO-YIrI/AAAAAAAAEHU/tUDog9n3ktoWBhlwT9_MrXo74F5mz1srACLcBGAsYHQ/s0/bg6-1.png",xBG3+320,0,320,320); 
      break
      case 7:
      	image("https://1.bp.blogspot.com/-SUU_8o0wr0Q/YGZMsLCHOsI/AAAAAAAAEH0/RF0YRxyORl4zbt1y48_JDNH90QZh3OMQwCLcBGAsYHQ/s0/bg7-4.png",0,0,320,320);
      
      	image("https://1.bp.blogspot.com/-3dpA57OAMVE/YGZMrzv4BkI/AAAAAAAAEHw/qk3uqbyn7G0lfjqlnISgX6XyD3LaTSBvACLcBGAsYHQ/s0/bg7-3.png",xBG1-320,0,320,320);
      	image("https://1.bp.blogspot.com/-3dpA57OAMVE/YGZMrzv4BkI/AAAAAAAAEHw/qk3uqbyn7G0lfjqlnISgX6XyD3LaTSBvACLcBGAsYHQ/s0/bg7-3.png",xBG1,0,320,320);
	      image("https://1.bp.blogspot.com/-3dpA57OAMVE/YGZMrzv4BkI/AAAAAAAAEHw/qk3uqbyn7G0lfjqlnISgX6XyD3LaTSBvACLcBGAsYHQ/s0/bg7-3.png",xBG1+320,0,320,320);
      	
      	image("https://1.bp.blogspot.com/-KXBV2lbM5FI/YGZMrmNUfJI/AAAAAAAAEHs/M5aqz5VpiyoywFz6EwVILeyOKfKNZ0yDwCLcBGAsYHQ/s0/bg7-2.png",xBG2-320,0,320,320);
				image("https://1.bp.blogspot.com/-KXBV2lbM5FI/YGZMrmNUfJI/AAAAAAAAEHs/M5aqz5VpiyoywFz6EwVILeyOKfKNZ0yDwCLcBGAsYHQ/s0/bg7-2.png",xBG2,0,320,320);
      	image("https://1.bp.blogspot.com/-KXBV2lbM5FI/YGZMrmNUfJI/AAAAAAAAEHs/M5aqz5VpiyoywFz6EwVILeyOKfKNZ0yDwCLcBGAsYHQ/s0/bg7-2.png",xBG2+320,0,320,320);
      
      	image("https://1.bp.blogspot.com/-SRMfb6fVQfQ/YGZMrXnpL4I/AAAAAAAAEHo/2btz3EdA_wUHwWs7cgWs7lBHV5Jx2JC_QCLcBGAsYHQ/s0/bg7-1.png",xBG3-320,0,320,320);
      	image("https://1.bp.blogspot.com/-SRMfb6fVQfQ/YGZMrXnpL4I/AAAAAAAAEHo/2btz3EdA_wUHwWs7cgWs7lBHV5Jx2JC_QCLcBGAsYHQ/s0/bg7-1.png",xBG3,0,320,320);
      	image("https://1.bp.blogspot.com/-SRMfb6fVQfQ/YGZMrXnpL4I/AAAAAAAAEHo/2btz3EdA_wUHwWs7cgWs7lBHV5Jx2JC_QCLcBGAsYHQ/s0/bg7-1.png",xBG3+320,0,320,320); 
      break
      case 8:
      	image("https://1.bp.blogspot.com/-m1st2dYnzn4/YG3jVukHyTI/AAAAAAAAEN0/vJcjtIlWc9Ek8SU9LHgr2XTkmCfnCQMMwCLcBGAsYHQ/s0/bg8-4.png",0,0,320,320);
      
      	image("https://1.bp.blogspot.com/-k09Q5IZ67XM/YG3jVEGlJOI/AAAAAAAAENw/19-V8lUJbr8ePmuCwCJNUP0bZWgV6dsiwCLcBGAsYHQ/s0/bg8-3.png",xBG1-320,0,320,320);
      	image("https://1.bp.blogspot.com/-k09Q5IZ67XM/YG3jVEGlJOI/AAAAAAAAENw/19-V8lUJbr8ePmuCwCJNUP0bZWgV6dsiwCLcBGAsYHQ/s0/bg8-3.png",xBG1,0,320,320);
	      image("https://1.bp.blogspot.com/-k09Q5IZ67XM/YG3jVEGlJOI/AAAAAAAAENw/19-V8lUJbr8ePmuCwCJNUP0bZWgV6dsiwCLcBGAsYHQ/s0/bg8-3.png",xBG1+320,0,320,320);
      	
      	image("https://1.bp.blogspot.com/-oPEFjQNQebs/YG3jU6SNtwI/AAAAAAAAENo/ZbL-wy9bPs0eBR1SGgQluFlEK-rPTrQHgCLcBGAsYHQ/s0/bg8-2.png",xBG2-320,0,320,320);
				image("https://1.bp.blogspot.com/-oPEFjQNQebs/YG3jU6SNtwI/AAAAAAAAENo/ZbL-wy9bPs0eBR1SGgQluFlEK-rPTrQHgCLcBGAsYHQ/s0/bg8-2.png",xBG2,0,320,320);
      	image("https://1.bp.blogspot.com/-oPEFjQNQebs/YG3jU6SNtwI/AAAAAAAAENo/ZbL-wy9bPs0eBR1SGgQluFlEK-rPTrQHgCLcBGAsYHQ/s0/bg8-2.png",xBG2+320,0,320,320);
      
      	image("https://1.bp.blogspot.com/-DEg8NIX2mCg/YG3jU4nq-1I/AAAAAAAAENs/9nCwDwt2XYshhzl5MJApy521M8gm17kMACLcBGAsYHQ/s0/bg8-1.png",xBG3-320,0,320,320);
      	image("https://1.bp.blogspot.com/-DEg8NIX2mCg/YG3jU4nq-1I/AAAAAAAAENs/9nCwDwt2XYshhzl5MJApy521M8gm17kMACLcBGAsYHQ/s0/bg8-1.png",xBG3,0,320,320);
      	image("https://1.bp.blogspot.com/-DEg8NIX2mCg/YG3jU4nq-1I/AAAAAAAAENs/9nCwDwt2XYshhzl5MJApy521M8gm17kMACLcBGAsYHQ/s0/bg8-1.png",xBG3+320,0,320,320); 
      break
      case 9:
      	image("https://1.bp.blogspot.com/-Vi-Bxz67fFE/YHM8yNC-4sI/AAAAAAAAESY/eMZl1JmpJgMSD4NkBu2xcJ8bK7buhp4cQCLcBGAsYHQ/s0/bg9-4.png",0,0,320,320);
      
      	image("https://1.bp.blogspot.com/-d6wATvqzZ-I/YHM8yJ_vGxI/AAAAAAAAESc/am8sCEVXsU0J5nIuITRo4eHr5tZXQMoXgCLcBGAsYHQ/s0/bg9-3.png",xBG1-320,0,320,320);
      	image("https://1.bp.blogspot.com/-d6wATvqzZ-I/YHM8yJ_vGxI/AAAAAAAAESc/am8sCEVXsU0J5nIuITRo4eHr5tZXQMoXgCLcBGAsYHQ/s0/bg9-3.png",xBG1,0,320,320);
	      image("https://1.bp.blogspot.com/-d6wATvqzZ-I/YHM8yJ_vGxI/AAAAAAAAESc/am8sCEVXsU0J5nIuITRo4eHr5tZXQMoXgCLcBGAsYHQ/s0/bg9-3.png",xBG1+320,0,320,320);
      	
      	image("https://1.bp.blogspot.com/-Stz39lykeEY/YHM8x382jnI/AAAAAAAAESU/BJ9O6QP7KtYxA7rkrzeLiH5GB3yPNmd5ACLcBGAsYHQ/s0/bg9-2.png",xBG2-320,0,320,320);
				image("https://1.bp.blogspot.com/-Stz39lykeEY/YHM8x382jnI/AAAAAAAAESU/BJ9O6QP7KtYxA7rkrzeLiH5GB3yPNmd5ACLcBGAsYHQ/s0/bg9-2.png",xBG2,0,320,320);
      	image("https://1.bp.blogspot.com/-Stz39lykeEY/YHM8x382jnI/AAAAAAAAESU/BJ9O6QP7KtYxA7rkrzeLiH5GB3yPNmd5ACLcBGAsYHQ/s0/bg9-2.png",xBG2+320,0,320,320);
      
      	image("https://1.bp.blogspot.com/-lMpa6b2OpTM/YHM8xiyKU8I/AAAAAAAAESQ/4ZZbbn7oOgYL3PBbR2TroJTsD7nJnMXSwCLcBGAsYHQ/s0/bg9-1.png",xBG3-320,0,320,320);
      	image("https://1.bp.blogspot.com/-lMpa6b2OpTM/YHM8xiyKU8I/AAAAAAAAESQ/4ZZbbn7oOgYL3PBbR2TroJTsD7nJnMXSwCLcBGAsYHQ/s0/bg9-1.png",xBG3,0,320,320);
      	image("https://1.bp.blogspot.com/-lMpa6b2OpTM/YHM8xiyKU8I/AAAAAAAAESQ/4ZZbbn7oOgYL3PBbR2TroJTsD7nJnMXSwCLcBGAsYHQ/s0/bg9-1.png",xBG3+320,0,320,320); 
      break
      case 10:
      	image("https://1.bp.blogspot.com/-2-ckf3rJURE/YHM8xE9WcLI/AAAAAAAAESI/LHUnZhWo5yUEeG1WYHiG39_u1P3fbujgwCLcBGAsYHQ/s0/bg10-4.png",0,0,320,320);
      
      	image("https://1.bp.blogspot.com/-xzI8s_A6l_E/YHM8wXWTFpI/AAAAAAAAESA/MVLBLeKWtFQxhoRJSxkXA6y5GfRntgQBgCLcBGAsYHQ/s0/bg10-3.png",xBG1-320,0,320,320);
      	image("https://1.bp.blogspot.com/-xzI8s_A6l_E/YHM8wXWTFpI/AAAAAAAAESA/MVLBLeKWtFQxhoRJSxkXA6y5GfRntgQBgCLcBGAsYHQ/s0/bg10-3.png",xBG1,0,320,320);
	      image("https://1.bp.blogspot.com/-xzI8s_A6l_E/YHM8wXWTFpI/AAAAAAAAESA/MVLBLeKWtFQxhoRJSxkXA6y5GfRntgQBgCLcBGAsYHQ/s0/bg10-3.png",xBG1+320,0,320,320);
      	
      	image("https://1.bp.blogspot.com/-RFm-7SAo7cg/YHM8wVaezNI/AAAAAAAAESE/ZiGBI9IFUSoepyed85VaKf7KGLqaqoQ4ACLcBGAsYHQ/s0/bg10-2.png",xBG2-320,0,320,320);
				image("https://1.bp.blogspot.com/-RFm-7SAo7cg/YHM8wVaezNI/AAAAAAAAESE/ZiGBI9IFUSoepyed85VaKf7KGLqaqoQ4ACLcBGAsYHQ/s0/bg10-2.png",xBG2,0,320,320);
      	image("https://1.bp.blogspot.com/-RFm-7SAo7cg/YHM8wVaezNI/AAAAAAAAESE/ZiGBI9IFUSoepyed85VaKf7KGLqaqoQ4ACLcBGAsYHQ/s0/bg10-2.png",xBG2+320,0,320,320);
      
      	image("https://1.bp.blogspot.com/--sDd-mE-AoI/YHM8wf4MWuI/AAAAAAAAER8/yzSaBrIEZLYs-Y7_iaJG8Nu0irQ6r64jgCLcBGAsYHQ/s0/bg10-1.png",xBG3-320,0,320,320);
      	image("https://1.bp.blogspot.com/--sDd-mE-AoI/YHM8wf4MWuI/AAAAAAAAER8/yzSaBrIEZLYs-Y7_iaJG8Nu0irQ6r64jgCLcBGAsYHQ/s0/bg10-1.png",xBG3,0,320,320);
      	image("https://1.bp.blogspot.com/--sDd-mE-AoI/YHM8wf4MWuI/AAAAAAAAER8/yzSaBrIEZLYs-Y7_iaJG8Nu0irQ6r64jgCLcBGAsYHQ/s0/bg10-1.png",xBG3+320,0,320,320); 
      break
    }
  }
  
  public void light(){
    if(enlighten){
      timer++;
      if(timer >= maxLen){
        timer = 0;
        oscilation = !oscilation;
      }
      double value;
      maxLight = minLight+dif;
      if(oscilation){
        value = map(timer,0,maxLen,minLight,maxLight);
      }else{
        value = map(timer,0,maxLen,maxLight,minLight);
      }

      illuminate(curPlayer.e.pos.x+curPlayer.e.width/2,curPlayer.e.pos.y+curPlayer.e.height/2,15,320+minLight,value);
      double startR = 320+minLight;
      noFill();
      stroke(0,0,0);
      strokeWeight(15);
      for(int i = 0; i < 50; i++){
        ellipse(curPlayer.e.pos.x+curPlayer.e.width/2,curPlayer.e.pos.y+curPlayer.e.height/2,startR+i*15,startR+i*15);
      }
      strokeWeight(1);
    } 
    
  }
  
  public double[][][] getTilesAround(double xT, double yT, double widthT, double heightT, int width, int height, TileMap layer){
    double centerX = xT + widthT/2;
    double centerY = yT + heightT/2;
    double[][][] tileInfo = new double[width][height][5];
    
    double cornerX;
    double cornerY;
    if(width % 2 == 0){
      cornerX = (centerX-width/2*TileSize)+TileSize/2;
    }else{
      cornerX = (centerX-width/2*TileSize);
    }
    if(height % 2 == 0){
      cornerY = (centerY-height/2*TileSize)+TileSize/2;
    }else{
      cornerY = (centerY-height/2*TileSize);
    }
    
    for(int i = 0; i < width; i++){
      for(int j = 0; j < height; j++){
        double x = cornerX+TileSize*i;
        double y = cornerY+TileSize*j;
        int[] pos = layer.getTile(x, y);

        //Pilla la x e y de las tiles exacta
        double tileX = pos[0]*TileSize+camera.x;
        double tileY = pos[1]*TileSize+camera.y;
        
        tileInfo[i][j][0] = tileX;
        tileInfo[i][j][1] = tileY;
        tileInfo[i][j][2] = pos[1];
        tileInfo[i][j][3] = pos[0];
        tileInfo[i][j][4] = 0;
        
        if(pos[1] < sizeOf(layer.Tiles,1) && pos[1] > -1 
           && pos[0] < sizeOf(layer.Tiles,2) && pos[0] > -1){
          tileInfo[i][j][4] = 1;
        }
        
    	}
    }
    return tileInfo;
  }
}


class entity{
  int ID;
  
  vector pos;
  vector vel;
  vector acc;  
  double maxVel = 100;
  
  double width;
  double height;
  
  entity(int ID, double x, double y, double width, double height){
    this.ID = ID;
		pos = new vector(x,y);
    vel = new vector(0,0);
    acc = new vector(0,0);
    this.width = width;
    this.height = height;
  }
  
  public void addForce(vector force){
    acc.add(force);
  }
  
  public void delForce(vector force){
    acc.sus(force);
  }
  
  public void update(){
    //Añade velocidad, la limita, la redondea y reinicia velocidad 
    vel.add(acc);
    vel.limit(maxVel);
    vel.round(2);
    acc.mult(0);
  }
  
  public int collideWithTile(double x2, double y2, double width2, double height2, tile Tile){
    double offset = tileCollisionOffset;
    if(Tile.sides[0] && intersectRR(pos.x,pos.y,width,height,x2+offset,y2,width2-offset*2,0)){
      return 1
    }
    if(Tile.sides[1] && intersectRR(pos.x,pos.y,width,height,x2+offset,y2+height2,width2-offset*2,0)){
      return 2
    }
    if(Tile.sides[2] && intersectRR(pos.x,pos.y,width,height,x2,y2+offset,0,height2-offset*2)){
      return 3
    }
    if(Tile.sides[3] && intersectRR(pos.x,pos.y,width,height,x2+width2,y2+offset,0,height2-offset*2)){
      return 4
    }
    return 0
  }
  
  public int collide(double x2, double y2, double width2, double height2){
    double offset = tileCollisionOffset;
    if(intersectRR(pos.x,pos.y,width,height,x2+offset,y2,width2-offset*2,0)){
      return 1
    }
    if(intersectRR(pos.x,pos.y,width,height,x2+offset,y2+height2,width2-offset*2,0)){
      return 2
    }
    if(intersectRR(pos.x,pos.y,width,height,x2,y2+offset,0,height2-offset*2)){
      return 3
    }
    if(intersectRR(pos.x,pos.y,width,height,x2+width2,y2+offset,0,height2-offset*2)){
      return 4
    }
    return 0
  }
  
  public boolean bruteCollide(double x2, double y2, double width2, double height2){
    if(intersectRR(pos.x,pos.y,width,height,x2,y2,width2,height2)){
      return true
    }
    return false
  }
  
  public void render(){
    switch(ID){
      case 2:
      	image("https://1.bp.blogspot.com/-AJtikHtXr9o/YFDpXH-giFI/AAAAAAAAD3k/x1Tot2ZLx800Y76hq24xBZIP5spteVPWgCLcBGAsYHQ/s0/rockBolt.png",pos.x,pos.y,width,height);
      break
      case 3:
      	image("https://1.bp.blogspot.com/-9tGDiJblW4U/YDFiMMpz3EI/AAAAAAAADv4/_rQbs63UBvkwUkAurh7fXIKQ8leGfoTqACLcBGAsYHQ/s0/bolt.png",pos.x,pos.y,width,height);
      break
      case 4:
      	image("https://1.bp.blogspot.com/-GzaeQXVx04k/YDFiMFu6ESI/AAAAAAAADv0/nQMg4urJmtA7nY6sq4pfm3V1wO2cY7jmgCLcBGAsYHQ/s0/boltf.png",pos.x,pos.y,width,height);
      break
      case 5:
      	image("https://1.bp.blogspot.com/-Y9tfxt6Va1c/YDFi-X2T09I/AAAAAAAADwE/WDybml_BzR8KYiEjOk6gfxd4fRCD4hfHwCLcBGAsYHQ/s0/earthwall.png",pos.x,pos.y,width,height);
      	noFill();
        stroke(0);
        rect(pos.x,pos.y,width,height);
      break
      case 6:
      	image("https://1.bp.blogspot.com/-A8QsAHSHEYk/YDFjr7WjEFI/AAAAAAAADwM/ZItrZ9HoZ9w9O1Lgf-jt3WP0YgJnQo_hgCLcBGAsYHQ/s0/waterBubble.png",pos.x,pos.y,width,height);
      break        
     	case 7:
      	image("https://1.bp.blogspot.com/-OhjraMyzNXY/YFdydUJVpNI/AAAAAAAAD_8/XntxP5JgsosYKHMUZtWU9YXlhyoQlZoxACLcBGAsYHQ/s15/idle2.png",pos.x,pos.y,width,height);
      break
      case 8:
      	image("https://1.bp.blogspot.com/-lnqJUHGeAlw/YEz7qVVW0ZI/AAAAAAAAD2g/BNEMM2x_V34OdAFjcy98pq1_KlG9u35tgCLcBGAsYHQ/s0/idle1.png",pos.x,pos.y,width,height);
      break
      case 9:
      	image("https://1.bp.blogspot.com/-FYGscL7eSto/YGcUfRMXUZI/AAAAAAAAEJo/NxAhS-NgpUs8P1_pysQxNAudLrWC-ADLACLcBGAsYHQ/s0/slime1.png",pos.x,pos.y,width,height);
      break 
      case 10:
      	image("https://1.bp.blogspot.com/-DN6_SEa-kg0/YGcUd4HnjJI/AAAAAAAAEJQ/kfZHP8eYU8wdPzqX2PeKIAGI7wOJ768iwCLcBGAsYHQ/s0/leftFish1.png",pos.x,pos.y,width,height);
      break
      case 11:
      	image("https://1.bp.blogspot.com/-QjxcK-uWzsQ/YGcUYkZoqrI/AAAAAAAAEIg/Hlc5wB80Jq8w5RrI-Z3gd0FxKY0MyxfqgCLcBGAsYHQ/s0/calamar1.png",pos.x,pos.y,width,height);
      break
      case 12:
      	image("https://1.bp.blogspot.com/-3GE7gNx9X64/YGcUhKcrEkI/AAAAAAAAEKE/xSPGEXO1Z6oClUG5pe7OGCPM3OLUvazwgCLcBGAsYHQ/s0/turretUp.png",pos.x,pos.y,width,height);
      break
      case 13:
      	image("https://1.bp.blogspot.com/-10rwEzJmrNA/YGcUgQQbUMI/AAAAAAAAEJ4/5WAhRgEuvso7rdEAi__7qmAFhWKmdwIWgCLcBGAsYHQ/s0/turretDown.png",pos.x,pos.y,width,height);
      break
      case 14:
      	image("https://1.bp.blogspot.com/-hNZxqC01clg/YGcUg5ZcumI/AAAAAAAAEKA/awlu3JOzUSsqK6yly4mqJldYVZ3xEzvnACLcBGAsYHQ/s0/turretRight.png",pos.x,pos.y,width,height);
      break
      case 15:
      	image("https://1.bp.blogspot.com/-2DxJ1yfqG3o/YGcUg-6hmKI/AAAAAAAAEJ8/fMMerp4d_LMM0P1uWO-7rSgh6zHsY9w7QCLcBGAsYHQ/s0/turretLeft.png",pos.x,pos.y,width,height);
      break
      case 16:
      	image("https://1.bp.blogspot.com/-nhaaImMFxXM/YGce2LnwV_I/AAAAAAAAEKk/TCk2bY6NKGYQQbRr8Mx6smfMwBfY2tSjQCLcBGAsYHQ/s10/ink.png",pos.x,pos.y,width,height);
      break
      case 17:
      	image("https://1.bp.blogspot.com/-IgnczBi_yOk/YGW0YB30g8I/AAAAAAAAEG4/oREchk2jGcMJqi8XFnux6Pw0zLgMc_HDACLcBGAsYHQ/s0/iceChunk.png",pos.x,pos.y,width,height);
      break 
      case 18:
      	image("https://1.bp.blogspot.com/-r2EkN2VxS0Q/YG3jXveZiEI/AAAAAAAAEOE/wlv9CD1_N2ovNGPgEF7we7fNoQx5u5cfwCLcBGAsYHQ/s0/fireBallUp1.png",pos.x,pos.y,width,height);
      break 
      case 19:
      	image("https://1.bp.blogspot.com/-IPrhQXoxrVs/YG3jYPwDuFI/AAAAAAAAEOM/zGrLoPsm_E4RxamqnMV4C3HrV3-Tj9wQACLcBGAsYHQ/s0/lavaSlime1.png",pos.x,pos.y,width,height);
      break 
      case 20:
      	image("https://1.bp.blogspot.com/-dCq7-c4fa6o/YG3jY3oWOQI/AAAAAAAAEOc/Zx1IM6NsXaQdCQOjx_lPxMu5j87MLYaOQCLcBGAsYHQ/s0/portal.png",pos.x,pos.y,width,height);
      break 
      case 21:
      	image("https://1.bp.blogspot.com/-ALk7X8JcyC8/YG3vC7njPVI/AAAAAAAAEPo/DOWM4i7S4hkimGw1Q-9755y-ob2_sbQpACLcBGAsYHQ/s20/snake.png",pos.x,pos.y,width,height);
      break 
      case 22:
      	image("https://1.bp.blogspot.com/-XAOs1Txa9ww/YG3jY1Mo9KI/AAAAAAAAEOg/92LEmA7z8q0mziPPWo0_IN7ojIVFU2CfACLcBGAsYHQ/s0/saw1.png",pos.x,pos.y,width,height);
      break 
      case 23:
      	image("https://1.bp.blogspot.com/-o6hP_3R26OM/YHM83AvvIKI/AAAAAAAAETE/pOn7ZI3JL1YRgZniGWPFTx9FGRjVc-OdgCLcBGAsYHQ/s0/happy%2Bcloud.png",pos.x,pos.y,width,height);
      break 
      case 24:
      	image("https://1.bp.blogspot.com/-VivurJS0sfw/YHM818-jA-I/AAAAAAAAESo/dJ84b2DrQrk6_WvwIy85ecwf5UUZdUZhACLcBGAsYHQ/s0/floating%2Brock1.png",pos.x,pos.y,width,height);
      break 
      case 25:
      	image("https://1.bp.blogspot.com/-XZwgT1H4u_A/YHM82dVzNfI/AAAAAAAAES0/bXmsR46Ovjw48iH8K3eez2HmN4YGTMljACLcBGAsYHQ/s0/floatingTurretRock1.png",pos.x,pos.y,width,height);
      break 
      case 26:
      	image("https://1.bp.blogspot.com/-bx7CoOa_E-k/YHM8ajqHjuI/AAAAAAAAERY/Uv19PruUW0M8ujbSRDZrFlftEQj-wFYBACLcBGAsYHQ/s0/judgementBolt.png",pos.x,pos.y,width,height);
      break 
      case 499:
      	image("https://1.bp.blogspot.com/-GzaeQXVx04k/YDFiMFu6ESI/AAAAAAAADv0/nQMg4urJmtA7nY6sq4pfm3V1wO2cY7jmgCLcBGAsYHQ/s0/boltf.png",pos.x,pos.y,width,height);
      break
    }
    if(debug){
      noFill();
      stroke(0);
      rect(pos.x,pos.y,width,height);
    }    
  }
}

/*class template{
  entity e;
  template(int ID, double x, double y, double width, double height){
    e = new entity(ID,x,y,width,height);
  }
  
  public void addForce(vector force){
    e.addForce(force);
  }
  
  public void delForce(vector force){
    e.delForce(force);
  }
  
  public int collide(double x2, double y2, double width2, double height2){
    return e.collide(x2,y2,width2,height2);
  }
  
  public boolean bruteCollide(double x2, double y2, double width2, double height2){
    return e.bruteCollide(x2,y2,width2,height2);
  }
  
  public int collideWithTile(double x2, double y2, double width2, double height2, tile Tile){
    return e.collideWithTile(x2,y2,width2,height2,Tile);
  }
  
  public void update(){
    e.update();   
  }
  
  public void render(){
    e.render();
  }
}*/

class magicBall{
  entity e;
  double[][][] tileInfo;
  int numCol;
  vector throwForce;
  vector falsePos;
  
  emitter trail;
  boolean haveTrail = true;
  
  vector gravity = new vector(0,0.07);
  
  boolean lowPrecision = false;
  
  double cameraX;
  
  boolean[] colSide = {false,false,false,false};
  magicBall(int ID, double x, double y, double width, double height, int numCol, int angle, double speed){
    e = new entity(ID,x,y,width,height);
    tileInfo = new double[2+ceil(e.width/TileSize)][2+ceil(e.height/TileSize)][5];
    this.numCol = numCol;
    throwForce = fromPolar(angle,speed);
    trail = new emitter(x,y,0);
    trail.minAngle = angle+180;
    trail.maxAngle = angle+180;
    trail.hijackPos = true;
    trail.width = 1;
    trail.height = 1;
    trail.maxSize = 8;
    trail.type = 1;
    trail.lifeLen = 20;
    trail.sizeVar = -0.2;
    trail.alphaVar = -0.05;
    trail.minMod = 0.5;
    trail.maxMod = 2.5;
    
    addForce(throwForce);
    falsePos = new vector(x,y);
    cameraX = camera.x;
  }
  
  public void addForce(vector force){
    e.addForce(force);
  }
  
  public void delForce(vector force){
    e.delForce(force);
  }
  
  public int collide(double x2, double y2, double width2, double height2){
    return e.collide(x2,y2,width2,height2);
  }
  
  public boolean bruteCollide(double x2, double y2, double width2, double height2){
    return e.bruteCollide(x2,y2,width2,height2);
  }
  
  public int collideWithTile(double x2, double y2, double width2, double height2, tile Tile){
    return e.collideWithTile(x2,y2,width2,height2,Tile);
  }
  public void tileCollide(TileMap layer){
    tileInfo = curStage.getTilesAround(e.pos.x,e.pos.y,e.width,e.height,2+ceil(e.width/TileSize),2+ceil(e.height/TileSize),layer);
    for(int j = 0; j < tileInfo.length; j++){
    	for(int k = 0; k < sizeOf(tileInfo,2); k++){
      	if(round(tileInfo[j][k][4]) == 1){
          double xT = tileInfo[j][k][0];
          double yT = tileInfo[j][k][1];
          int[] pos = layer.getTile(xT,yT);
          tile cTile = layer.Tiles[pos[1]][pos[0]];
          boolean[] sideCollision = {false,false,false,false};
          if(e.ID == 4 || e.ID == 6){
            if(cTile.hasTrigger(10)){
              if(bruteCollide(xT,yT,TileSize,TileSize)){
                numCol = 0;
              }
            }
          }
          if(cTile.hasTrigger(13)){
            if(intersectRR(e.pos.x,e.pos.y,e.width,e.height,xT,yT,TileSize,TileSize)){
            	breakBlock.x = xT+TileSize/2;
              breakBlock.y = yT;
              breakBlock.type = 1;
              if(cTile.ID == 172){
                breakBlock.type = 2;
                breakBlock.ID = 9;
              }
              if(cTile.ID == 142){
                breakBlock.type = 2;
                breakBlock.ID = 8;
              }
              if(cTile.ID == 140){
                breakBlock.type = 2;
                breakBlock.ID = 7;
              }
              if(cTile.ID == 133){
                breakBlock.type = 2;
                breakBlock.ID = 6;
              }
              if(cTile.ID == 122){
                breakBlock.type = 2;
                breakBlock.ID = 5;
              }
              if(cTile.ID == 77){
                breakBlock.type = 2;
                breakBlock.ID = 4;
              }
              if(cTile.ID == 55){
                breakBlock.type = 2;
                breakBlock.ID = 0;
              }
              if(cTile.ID == 10){
                breakBlock.type = 2;
                breakBlock.ID = 3;
              }
              globalParticleSystem.add(breakBlock);
              
              cTile.ID = 0;
              cTile.trigger = pushInt(cTile.trigger,0);
              cTile.trigger = delNum(cTile.trigger,13);
              cTile.trigger = delNum(cTile.trigger,1);
              
              int[] posCT = layer.getTile(tileInfo[j][k][0],tileInfo[j][k][1]); 
              //println(tileInfo[j][k][2]+","+tileInfo[j][k][3]);   
              
            	if(posCT[1]-1 >= 0 && posCT[0] >= 0 && posCT[1]-1 < layer.Tiles.length &&
                posCT[0] < sizeOf(layer.Tiles,2)){
                tile leftT = layer.Tiles[posCT[1]-1][posCT[0]];
                leftT.setupSides(posCT[1]-1,posCT[0],layer.Tiles);
                //println(leftT.ID+ " left " + (posCT[1]-1) +","+ posCT[0]);
              }
              
              if(posCT[1]+1 >= 0 && posCT[0] >= 0 && posCT[1]+1 < layer.Tiles.length &&
                posCT[0] < sizeOf(layer.Tiles,2)){
                tile rightT = layer.Tiles[posCT[1]+1][posCT[0]];
                rightT.setupSides(posCT[1]+1,posCT[0],layer.Tiles);
                //println(rightT.ID+ " right " + (posCT[1]+1) +","+ posCT[0]);
              }
              
              if(posCT[1] >= 0 && posCT[0]-1 >= 0 && posCT[1] < layer.Tiles.length &&
                posCT[0]-1 < sizeOf(layer.Tiles,2)){
                tile upT = layer.Tiles[posCT[1]][posCT[0]-1];
                upT.setupSides(posCT[1],posCT[0]-1,layer.Tiles);
                //println(upT.ID+ " up " + posCT[1] +","+ (posCT[0]-1));
              }
              
              if(posCT[1] >= 0 && posCT[0]+1 >= 0 && posCT[1] < layer.Tiles.length &&
                posCT[0]+1 < sizeOf(layer.Tiles,2)){
                tile downT = layer.Tiles[posCT[1]][posCT[0]+1];
                downT.setupSides(posCT[1],posCT[0]+1,layer.Tiles);
                //println(downT.ID+ " down " + posCT[1] +","+ (posCT[0]+1));
              } 
              
              numCol = 0;
              
            }
          }
          if(cTile.hasNotTrigger(0) && cTile.hasNotTrigger(10) && cTile.hasNotTrigger(22)){
            double pOffset = 5;
            if(cTile.hasTrigger(8)){
              if(e.ID == 6 && intersectRR(e.pos.x+pOffset,e.pos.y+pOffset,e.width-pOffset*2,e.height-pOffset*2,xT,yT,TileSize,TileSize)){
                smoke.x = xT+TileSize/2;
              	smoke.y = yT+TileSize/2;
                globalParticleSystem.add(smoke);
                
                cTile.ID = 0;
                numCol -= 1;
                cTile.trigger = pushInt(cTile.trigger,0);
                cTile.trigger = delNum(cTile.trigger,8);
              }
            }else if(e.ID == 499 && intersectRR(e.pos.x,e.pos.y,e.width,e.height,xT,yT,TileSize,TileSize)){   
              int[] posCT = layer.getTile(tileInfo[j][k][0],tileInfo[j][k][1]);
              if(posCT[1]-1 >= 0 && posCT[0] >= 0 && posCT[1]-1 < layer.Tiles.length &&
                posCT[0] < sizeOf(layer.Tiles,2)){
                tile upT = layer.Tiles[posCT[1]-1][posCT[0]];
                if(upT.hasTrigger(0)){
                  upT.ID = 1006;
                  upT.trigger = delNum(cTile.trigger,0);
                  upT.trigger = pushInt(cTile.trigger,8);                
                  numCol = 0;
                  upT.setup();
                  upT.setupSides(posCT[1]-1,posCT[0],layer.Tiles);
                }else{
                  numCol = 0;
                }                             
              }else{
                numCol = 0;
              }
            }else{
              int side = collideWithTile(xT,yT,TileSize,TileSize,cTile);
              if(side != 0){
                sideCollision[side-1] = true;
                colSide[side-1] = true;
              }
            }
            
          }
        }
      }
    }
  }
  
  public void earthWallCollide(earthWall[] arr){
    for(int i = 0; i < arr.length; i++){
      double x2 = arr[i].e.pos.x;
      double y2 = arr[i].e.pos.y;
      double w2 = arr[i].e.width;
      double h2 = arr[i].e.height;
      int side = collide(x2,y2,w2,h2);
      if(side != 0){
        colSide[side-1] = true;
      }
    }
  }
  
  public void update(){
    if(e.ID == 2 || e.ID == 16){
      addForce(gravity);
    }
    e.update();      
    
    
    int reps = ceil(e.vel.getMod())+1;
    if(lowPrecision){
      reps = 1;
    }
    for(int i = 0; i < reps; i++){  
      for(int j = 0; j < colSide.length; j++){
        colSide[j] = false;
      } 
      
      tileCollide(curStage.layer1);
      earthWallCollide(curPlayer.earthAtk);
        
      if(colSide[0] || colSide[1]){
        e.vel.y *= -1;
      }
      if(colSide[2] || colSide[3]){
        e.vel.x *= -1;
      }
      if(colSide[0] || colSide[1] || colSide[2] || colSide[3]){
        numCol -= 1;
      }
			vector unitVel = divVector(e.vel,ceil(e.vel.getMod())+1);
      if(lowPrecision){
        unitVel = e.vel;
      }
      falsePos.add(unitVel);
      e.pos.x = camera.x-cameraX + falsePos.x;
      e.pos.y = camera.y + falsePos.y;
    }
    if(haveTrail){
      trail.truePos.x = e.pos.x+e.width/2;
      trail.truePos.y = e.pos.y+e.height/2;
      
      
      trail.update();
    }
  }
  
  public void render(){
    if(haveTrail){
    	trail.render();
    }
    
    e.render();
    /*if(debug){
      for(int j = 0; j < sizeOf(tileInfo,1); j++){
        for(int k = 0; k < sizeOf(tileInfo,2); k++){
        	stroke(0,0,0);
          noFill();
    			rect(tileInfo[j][k][0], tileInfo[j][k][1],TileSize,TileSize);
        }
      }
    }*/
  }
}

class earthWall{
  entity e;
   
  double[][][] tileInfo;
  
  vector falsePos;  
  double cameraX;
  
  vector gravity = new vector(0,2);
  
  boolean[] colSide = {false,false,false,false};
  boolean tileCollision = false;
  boolean dontMove = false;
  
  earthWall(int ID, double x, double y, double width, double height){
    e = new entity(ID,x,y,width,height);
    tileInfo = new double[2+ceil(e.width/TileSize)][2+ceil(e.height/TileSize)][5];

    falsePos = new vector(x,y);
    cameraX = camera.x;
  }
  
  public void addForce(vector force){
    e.addForce(force);
  }
  
  public void delForce(vector force){
    e.delForce(force);
  }
  
  public int collide(double x2, double y2, double width2, double height2){
    return e.collide(x2,y2,width2,height2);
  }
  
  public boolean bruteCollide(double x2, double y2, double width2, double height2){
    return e.bruteCollide(x2,y2,width2,height2);
  }
  
  public int collideWithTile(double x2, double y2, double width2, double height2, tile Tile){
    return e.collideWithTile(x2,y2,width2,height2,Tile);
  }
  
  public void tileCollide(TileMap layer){
    tileInfo = curStage.getTilesAround(e.pos.x,e.pos.y,e.width,e.height,2+ceil(e.width/TileSize),2+ceil(e.height/TileSize),layer);
    for(int j = 0; j < tileInfo.length; j++){
    	for(int k = 0; k < sizeOf(tileInfo,2); k++){
      	if(round(tileInfo[j][k][4]) == 1){
          double xT = tileInfo[j][k][0];
          double yT = tileInfo[j][k][1];
          int[] pos = layer.getTile(xT,yT);
          tile cTile = layer.Tiles[pos[1]][pos[0]];
          boolean[] sideCollision = {false,false,false,false};
          if(cTile.hasNotTrigger(0) && cTile.hasNotTrigger(7) && cTile.hasNotTrigger(8) && cTile.hasNotTrigger(9) &&
             cTile.hasNotTrigger(10) && cTile.hasNotTrigger(22)){
            if(collide(xT,yT,TileSize,TileSize) != 0){
              tileCollision = true;
            }
            int side = collideWithTile(xT,yT,TileSize,TileSize,cTile);
            if(side != 0){
              sideCollision[side-1] = true;
              colSide[side-1] = true;
              switch(side-1){
                case 0:
                	falsePos.y -= (e.pos.y+e.height)-yT;
                break
                case 1:
                	falsePos.y += yT+TileSize-e.pos.y;
                break
                case 2:
                  falsePos.x -= (e.pos.x+e.width)-xT;  	
                break
                case 3:
                  falsePos.x += xT+TileSize-e.pos.x;
                break
            	}
            }
          }
        }
      }
    }
  }
  
  public void update(int speedFactor){
    addForce(gravity);
    e.update();   
    if(colSide[0]){
      dontMove = true;
    }
    if(dontMove){
      e.vel.equal(0,0);
    }
    for(int i = 0; i < ceil(e.vel.getMod())+1; i++){
      for(int j = 0; j < colSide.length; j++){
        colSide[j] = false;
      }
      tileCollision = false;
      tileCollide(curStage.layer1);
      vector unitVel = divVector(e.vel,ceil(e.vel.getMod())+1);
      falsePos.add(divVector(unitVel,speedFactor));
      e.pos.x = camera.x-cameraX + falsePos.x;
      e.pos.y = camera.y + falsePos.y;
    }
  }
  
  public void render(){
    e.render();
    /*if(debug){
      for(int j = 0; j < sizeOf(tileInfo,1); j++){
        for(int k = 0; k < sizeOf(tileInfo,2); k++){
        	stroke(0,0,0);
          noFill();
    			rect(tileInfo[j][k][0], tileInfo[j][k][1],TileSize,TileSize);
        }
      }
    }*/
  }
}

class wind{
  vector dir;
  vector pos;
  vector vel;
  vector acc;  
  
  vector falsePos;
  double cameraX;
  
  double maxVel = 20;
  
  double speedFactor = 2;
  
 	double[][][] tileInfo;
  
  boolean tileCollision = false;
  boolean entityCollision = false;

  wind(double x, double y, vector dir){
   	this.dir = dir;
    falsePos = new vector(x,y);
    cameraX = camera.x;
    pos = new vector(x,y);
    vel = new vector(0,0);
    acc = new vector(0,0);
    acc.add(divVector(dir,speedFactor));
    
    tileInfo = new double[2][2][5];
  }
  
  public boolean collide(double x2, double y2, double width2, double height2){
    if(intersectPR(x2,y2,width2,height2,pos.x,pos.y)){
      return true
    }
    return false
  }
  
  public void earthWallCollide(earthWall[] arr){
    for(int i = 0; i < arr.length; i++){
      if(collide(arr[i].e.pos.x,arr[i].e.pos.y,arr[i].e.width,arr[i].e.height)){
        tileCollision = true;
      }
    }
  }
  
  public void tileCollide(TileMap layer){
    tileInfo = curStage.getTilesAround(pos.x,pos.y,0,0,2,2,layer);
    for(int j = 0; j < tileInfo.length; j++){
    	for(int k = 0; k < sizeOf(tileInfo,2); k++){
      	if(round(tileInfo[j][k][4]) == 1){
          double xT = tileInfo[j][k][0];
          double yT = tileInfo[j][k][1];
          int[] pos = layer.getTile(xT,yT);
          tile cTile = layer.Tiles[pos[1]][pos[0]];
          boolean[] sideCollision = {false,false,false,false};
          if(cTile.hasNotTrigger(0) && cTile.hasNotTrigger(10) && cTile.hasNotTrigger(9) && cTile.hasNotTrigger(22)){
            if(collide(xT,yT,TileSize,TileSize)){
              if(cTile.hasTrigger(8)){
                cTile.ID = 0;
                cTile.trigger = pushInt(cTile.trigger,0);
                cTile.trigger = delNum(cTile.trigger,8);
              }else{
                tileCollision = true;
              }
            }
          }
        }
      }
    }
  }
  
  public void update(){
    vel.add(acc);
    vel.limit(maxVel);
    vel.round(2);
    acc.mult(0); 
    
    for(int i = 0; i < ceil(vel.getMod())+1; i++){
      tileCollide(curStage.layer1);
      earthWallCollide(curPlayer.earthAtk);
      vector unitVel = divVector(vel,ceil(vel.getMod())+1);
      falsePos.add(unitVel);
      pos.x = camera.x-cameraX + falsePos.x;
      pos.y = camera.y + falsePos.y;
    }
  }
  
  public void render(){
    fill(195,195,195);
    stroke(195,195,195);
    line(pos.x,pos.y,pos.x+dir.x,pos.y+dir.y);
    ellipse(pos.x,pos.y,3,3);
  }
}

//Manejo de arrays de muros
earthWall[] pushWall(earthWall[] arr, double x, double y, double width, double height){
  earthWall[] aux = arr;
  arr = new earthWall[aux.length+1];
  for(int i = 0; i < aux.length; i++){
    arr[i] = aux[i];
  }
  arr[aux.length] = new earthWall(5,x,y,width,height);
  return arr;
}
  
earthWall[] delWall(earthWall[] arr, int index){
  earthWall[] aux = arr;
  arr = new earthWall[aux.length-1];
  int n;
  for(int i = 0; i < aux.length; i++){
    if(i != index){
    	arr[n] = aux[i]; 
      n++;
    }
  }
  return arr;
}

boolean lvIsIn(Stage a, Stage[] b){
  for(int i = 0; i < b.length; i++){
    if(b[i] == a){
      return true
    }
  }
  return false
}

//Manejo de arrays de wind
wind[] pushWind(wind[] arr, double x, double y, vector dir){
  wind[] aux = arr;
  arr = new wind[aux.length+1];
  for(int i = 0; i < aux.length; i++){
    arr[i] = aux[i];
  }
  arr[aux.length] = new wind(x,y,dir);
  return arr;
}
  
wind[] delWind(wind[] arr, int index){
  wind[] aux = arr;
  arr = new wind[aux.length-1];
  int n;
  for(int i = 0; i < aux.length; i++){
    if(i != index){
    	arr[n] = aux[i]; 
			n++;
    }
  }
  return arr;
}
//Manejo de arrays de vectores
vector[] pushVector(vector[] arr, double x, double y){
  vector[] aux = arr;
  arr = new vector[aux.length+1];
  for(int i = 0; i < aux.length; i++){
    arr[i] = aux[i];
  }
  arr[aux.length] = new vector(x,y);
  return arr;
}
  
vector[] delVector(vector[] arr, int index){
  vector[] aux = arr;
  arr = new vector[aux.length-1];
  int n;
  for(int i = 0; i < aux.length; i++){
    if(i != index){
    	arr[n] = aux[i]; 
      n++;
    }
  }
  return arr;
}
//Manejo de arrays de proyectiles
magicBall[] addMagicBall(magicBall[] arr, int ID2, double x2, double y2, double width2, double height2, int numCol, int angle, double speed){
  magicBall[] aux = arr;
  arr = new magicBall[aux.length+1];
  for(int i = 0; i < aux.length; i++){
    arr[i] = aux[i];
  }
  arr[aux.length] = new magicBall(ID2,x2,y2,width2,height2,numCol,angle,speed);
  return arr;
}
  
magicBall[] delMagicBall(magicBall[] arr, int index){
  magicBall[] aux = arr;
  arr = new magicBall[aux.length-1];
  int n = 0;
  for(int i = 0; i < aux.length; i++){
    if(i != index){
      arr[n] = aux[i];
      n++;
    }
  }
  return arr
}

class enemy{
  entity e;
  double[][][] tileInfo;
  
  boolean[] colSide = {false,false,false,false};
  
  vector falsePos;
  double cameraX;
  double cameraY = 0;
  
  vector startPos;
  
  vector gravity;
  double acc = 0.1;
  double vel = 0;
  
  boolean left;
  boolean right;
  boolean up;
  boolean down;
  
  boolean fixed;
  
  boolean inWater = false;
  
  int health;
  
  vector[] forces;
  int[] forceTimers;
  
  magicBall[] atk1;
  
  double atk1Timer;
  double atk1Len;
  
  animation runD = new animation(15,5,4);
  animation runL = new animation(16,5,4);
  animation idle = new animation(16,5,4);
  
  /*double friction = 0.85; //fricción con el suelo
  double slideFriction = 0.6; //fricción con la pared
  double waterFriction = 0.6;
  vector gravity = new vector(0,1); //gravedad
  vector waterLift = new vector(0,-1.5);*/
  
  enemy(int ID, double x, double y, double width, double height){
    e = new entity(ID,x,y,width,height);
    tileInfo = new double[2+ceil(e.width/TileSize)][2+ceil(e.height/TileSize)][5];
     
    startPos = new vector(x,y);
    falsePos = new vector(x,y);
    
    gravity = new vector(0,1);
    
    cameraX = camera.x;
    
    left = true;
 		right = false;
  	up = false;
  	down = false;
    
    health = 3;
  
 		fixed = false;
    
    forces = new vector[0];
    forceTimers = new int[0];
    
    atk1 = new magicBall[0];
    
    atk1Timer = 0;
    atk1Len = 50;
    
    getSize();
  }
  
  public void getSize(){
    switch(e.ID){
      case 7:
      	e.width = 15;
      	e.height = 15;
      	acc = 0;
      	vel = 0;
      break
      case 8:
      	e.width = 15;
      	e.height = 15;
      	runD = new animation(15,5,4);
      	runL = new animation(16,5,4);
      	acc = 0;
      	vel = 2;
      break
      case 9:
      	e.width = 20;
      	e.height = 20;
      	acc = 0;
      	vel = 1.5;
      	idle = new animation(21,5,4);
      break
      case 10:
      	e.width = 20;
      	e.height = 10;
      	acc = 0;
      	vel = 2.5;
      	health = 2;
      	runD = new animation(23,5,3);
      	runL = new animation(22,5,3);
      break
      case 11:
      	e.width = 35;
      	e.height = 30;
      	acc = 0;
      	vel = 1.5;
      	health = 5;
      	runD = new animation(24,5,7);
      	runL = new animation(25,5,7);
      	atk1Len = 70;
      break
      case 12:
      	e.width = 16;
      	e.height = 12;
      	acc = 0;
      	vel = 0;
      	atk1Len = 30;
      	health = 1;
      break
      case 13:
      	e.width = 16;
      	e.height = 12;
      	acc = 0;
      	vel = 0;
      	atk1Len = 30;
      	health = 1;
      break
      case 14:
      	e.width = 12;
      	e.height = 16;
      	acc = 0;
      	vel = 0;
      	atk1Len = 30;
      	health = 1;
      break
      case 15:
      	e.width = 12;
      	e.height = 16;
      	acc = 0;
      	vel = 0;
      	atk1Len = 30;
      	health = 1;
      break
      case 18://fireball
      	e.width = 10;
      	e.height = 10;
      	acc = 0;
      	vel = 0;
      	health = -1;
      	runD = new animation(26,4,2);
      	runL = new animation(27,4,2);
      break
      case 19://lava slime
      	e.width = 15;
      	e.height = 14;
      	acc = 0;
      	vel = 3;
      	health = 4;
      	idle = new animation(28,5,4);
      break
      case 20:// portal
      	e.width = 15;
      	e.height = 15;
      	acc = 0;
      	vel = 0;
      	atk1Len = 15;
      	health = 2;
      break
      case 21:// snake
      	e.width = 20;
      	e.height = 20;
      	acc = 0;
      	vel = 0;
      	atk1Len = 55;
      	health = 5;
      break
      case 22:// saw
      	e.width = 60;
      	e.height = 60;
      	acc = 0;
      	vel = 0;
      	health = -1;
      	idle = new animation(29,4,2);
      break
      case 23:// nube
      	e.width = 18;
      	e.height = 10;
      	acc = 0;
      	vel = 1.5;
      	health = 6;
      	atk1Len = 80;
      break
      case 24:// roca
      	e.width = 20;
      	e.height = 20;
      	acc = 0;
      	vel = 2;
      	health = 3;
      	up = true;
      	idle = new animation(30,5,4);
      break
      case 25:// roca turret
      	e.width = 20;
      	e.height = 20;
      	acc = 0;
      	vel = 2;
      	health = 3;
      	atk1Len = 50;
      	up = true;
      	idle = new animation(31,5,4);
      break
    }    
  }
  
  public void addForce(vector force){
    e.addForce(force);
  }
  
  public void delForce(vector force){
    e.delForce(force);
  }
  
  public int collide(double x2, double y2, double width2, double height2){
    return e.collide(x2,y2,width2,height2);
  }
  
  public boolean bruteCollide(double x2, double y2, double width2, double height2){
    return e.bruteCollide(x2,y2,width2,height2);
  }
  
  public int collideWithTile(double x2, double y2, double width2, double height2, tile Tile){
    return e.collideWithTile(x2,y2,width2,height2,Tile);
  }
  
  //Manejo de arrays de vectores
  public vector[] pushVector(vector[] arr, double x, double y){
    vector[] aux = arr;
    arr = new vector[aux.length+1];
    for(int i = 0; i < aux.length; i++){
      arr[i] = aux[i];
    }
    arr[aux.length] = new vector(x,y);
    return arr;
  }
  
  public vector[] delVector(vector[] arr, int index){
    vector[] aux = arr;
    arr = new vector[aux.length-1];
    int n;
    for(int i = 0; i < aux.length; i++){
      if(i != index){
      	arr[n] = aux[i]; 
        n++;
      }
    }
    return arr;
  }
  
  public void tileCollide(TileMap layer){
    tileInfo = curStage.getTilesAround(e.pos.x,e.pos.y,e.width,e.height,2+ceil(e.width/TileSize),2+ceil(e.height/TileSize),layer);
    for(int j = 0; j < tileInfo.length; j++){
    	for(int k = 0; k < sizeOf(tileInfo,2); k++){
      	if(round(tileInfo[j][k][4]) == 1){
          double xT = tileInfo[j][k][0];
          double yT = tileInfo[j][k][1];
          int[] pos = layer.getTile(xT,yT);
          tile cTile = layer.Tiles[pos[1]][pos[0]];
          boolean[] sideCollision = {false,false,false,false};
          //Agua
          if(cTile.hasTrigger(10)){
            double pOffset = 5;
          	if(intersectRR(e.pos.x+pOffset,e.pos.y+pOffset,e.width-pOffset*2,e.height-pOffset*2,xT,yT,TileSize,TileSize)){
            	inWater = true;
            }
          }
          if(cTile.hasNotTrigger(0) && cTile.hasNotTrigger(8) && cTile.hasNotTrigger(10)){
            //Pinchos
            if(cTile.hasTrigger(14) || (cTile.hasTrigger(9) && e.ID != 18)){             
            	double pOffset = 5;
             	if(intersectRR(e.pos.x+pOffset,e.pos.y+pOffset,e.width-pOffset*2,e.height-pOffset*2,xT,yT,TileSize,TileSize)){
              	bloodHit.x = e.pos.x+e.width/2;
                bloodHit.y = e.pos.y+e.height/2;
                globalParticleSystem.add(bloodHit);
                health = 0;
              }
            }
            if((cTile.hasTrigger(2) || cTile.hasTrigger(3) || cTile.hasTrigger(4) || cTile.hasTrigger(5) || 
                cTile.hasTrigger(1) || cTile.hasTrigger(22)) && cTile.hasNotTrigger(9) && cTile.hasNotTrigger(14)){
              int side = collideWithTile(xT,yT,TileSize,TileSize,cTile);
              if(side != 0){
                sideCollision[side-1] = true;
                colSide[side-1] = true;
                switch(side-1){
                  case 0:
                    falsePos.y -= (e.pos.y+e.height)-yT;
                  break
                  case 1:
                    falsePos.y += yT+TileSize-e.pos.y;
                  break
                  case 2:
                    falsePos.x -= (e.pos.x+e.width)-xT;  	
                  break
                  case 3:
                    falsePos.x += xT+TileSize-e.pos.x;
                  break
                }
              }
            }
            
          }
        }
      }
    }
  }
  
  public void earthWallCollide(earthWall[] arr){
    for(int i = 0; i < arr.length; i++){
      double x2 = arr[i].e.pos.x;
      double y2 = arr[i].e.pos.y;
      double w2 = arr[i].e.width;
      double h2 = arr[i].e.height;
      int side = collide(x2,y2,w2,h2);
      if(side != 0){
        colSide[side-1] = true;
        switch(side-1){
        	case 0:
         		falsePos.y -= (e.pos.y+e.height)-y2;
          break
          case 1:         	
          	if(!arr[i].dontMove){
              curPlayer.earthAtk = delWall(arr,i);
            }else{
              falsePos.y += y2+h2-e.pos.y;
            }
          break
          case 2:
            falsePos.x -= (e.pos.x+e.width)-x2;  	
          	right = false;
          	left = true;
          break
          case 3:
            falsePos.x += x2+w2-e.pos.x;
          	left = false;
          	right = true;
          break
       	}
      }
    }
  }
  
  public void windCollide(){
    for(int i = 0; i < curPlayer.windAtk.length; i++){
      if(curPlayer.windAtk[i].collide(e.pos.x,e.pos.y,e.width,e.height)){
        curPlayer.windAtk[i].entityCollision = true;
        vector force = divVector(curPlayer.windAtk[i].dir,10);
        forces = pushVector(forces,force.x,force.y);
        forceTimers = pushInt(forceTimers,2);
        curPlayer.windAtk = delWind(curPlayer.windAtk,i);
      }
    }
    
  }
  
  public void AI(TileMap layer){
    int counter = 0;
    tileInfo = curStage.getTilesAround(e.pos.x,e.pos.y,e.width,e.height,2+ceil(e.width/TileSize),2+ceil(e.height/TileSize),layer);
    for(int i = 1; i < sizeOf(tileInfo,2)-1; i++){
      double[] posT = {tileInfo[0][i][2],tileInfo[0][i][3]};
      if(tileInfo[0][i][4] == 1.0){
        tile aff = layer.Tiles[round(posT[0])][round(posT[1])];
        if(aff.ID != 0 && aff.ID != 1008 && aff.ID != 9001){
          left = false;
          e.vel.x = 0;
          right = true;
        }
      }
      
    }
    for(int i = 1; i < sizeOf(tileInfo,2)-1; i++){
      double[] posT = {tileInfo[sizeOf(tileInfo,1)-1][i][2],tileInfo[sizeOf(tileInfo,1)-1][i][3]};
      if(tileInfo[sizeOf(tileInfo,1)-1][i][4] == 1.0){
        tile aff = layer.Tiles[round(posT[0])][round(posT[1])];
        if(aff.ID != 0 && aff.ID != 1008 && aff.ID != 9001){
          right = false;
          e.vel.x = 0;
          left = true;
        }
      }
      
    }
    if(tileInfo[0][sizeOf(tileInfo,2)-1][4] == 1.0 && tileInfo[floor(sizeOf(tileInfo,1)/2)][sizeOf(tileInfo,2)-1][4] == 1.0){
      double[] leftMost = {tileInfo[0][sizeOf(tileInfo,2)-1][2],tileInfo[0][sizeOf(tileInfo,2)-1][3]};
      double[] floorMost = {tileInfo[floor(sizeOf(tileInfo,1)/2)][sizeOf(tileInfo,2)-1][2],
                            tileInfo[floor(sizeOf(tileInfo,1)/2)][sizeOf(tileInfo,2)-1][3]};
     	tile floorT = layer.Tiles[round(floorMost[0])][round(floorMost[1])];                                    
      tile leftT = layer.Tiles[round(leftMost[0])][round(leftMost[1])];
      
      if((leftT.ID == 0 || leftT.ID == 1008 || leftT.ID == 9001) && floorT.ID != 0){
        counter++;
      }
      if((leftT.ID == 0 || leftT.ID == 1008 || leftT.ID == 9001) && floorT.ID != 0 && e.pos.x-5 < tileInfo[0][sizeOf(tileInfo,2)-1][0]+TileSize){
        left = false;
        e.vel.x = 0;
        right = true;
      }
    }    
    if(tileInfo[sizeOf(tileInfo,1)-1][sizeOf(tileInfo,2)-1][4] == 1.0 && tileInfo[floor(sizeOf(tileInfo,1)/2)][sizeOf(tileInfo,2)-1][4] == 1.0){
      double[] rightMost = {tileInfo[sizeOf(tileInfo,1)-1][sizeOf(tileInfo,2)-1][2],tileInfo[sizeOf(tileInfo,1)-1][sizeOf(tileInfo,2)-1][3]};
      tile rightT = layer.Tiles[round(rightMost[0])][round(rightMost[1])];
      double[] floorMost = {tileInfo[floor(sizeOf(tileInfo,1)/2)][sizeOf(tileInfo,2)-1][2],
                            tileInfo[floor(sizeOf(tileInfo,1)/2)][sizeOf(tileInfo,2)-1][3]};
     	tile floorT = layer.Tiles[round(floorMost[0])][round(floorMost[1])];
      
      if((rightT.ID == 0 || rightT.ID == 1008 || rightT.ID == 9001) && floorT.ID != 0){
        counter++;       
      }
      if((rightT.ID == 0 || rightT.ID == 1008 || rightT.ID == 9001) && floorT.ID != 0
         && e.pos.x+e.width+5 > tileInfo[sizeOf(tileInfo,1)-1][sizeOf(tileInfo,2)-1][0]){
        right = false;
        e.vel.x = 0;
        left = true;
      }
    }
    if(counter == 2){
      right = false;
      left = false;
    }
  }
  
  public void AIWater(TileMap layer){
  	tileInfo = curStage.getTilesAround(e.pos.x,e.pos.y,e.width,e.height,2+ceil(e.width/TileSize),2+ceil(e.height/TileSize),layer);
  	for(int i = 1; i < sizeOf(tileInfo,2)-1; i++){
      double[] posT = {tileInfo[i][0][2],tileInfo[i][0][3]};
      if(tileInfo[i][0][4] == 1.0){
        tile aff = layer.Tiles[round(posT[0])][round(posT[1])];
        if(aff.ID != 0 && aff.ID != 1008 && aff.ID != 9001){
          up = false;
          e.vel.y = 0;
          down = true;
        }
      }
      
    }
    for(int i = 1; i < sizeOf(tileInfo,2)-1; i++){
      double[] posT = {tileInfo[i][sizeOf(tileInfo,1)-1][2],tileInfo[i][sizeOf(tileInfo,1)-1][3]};
      if(tileInfo[i][sizeOf(tileInfo,1)-1][4] == 1.0){
        tile aff = layer.Tiles[round(posT[0])][round(posT[1])];
        if(aff.ID != 0 && aff.ID != 1008 && aff.ID != 9001){
          down = false;
          e.vel.y = 0;
          up = true;
        }
      }      
    }
  }
  
  public void AILavaBubbles(TileMap layer){
    for(int i = 1; i < sizeOf(tileInfo,2)-1; i++){
      double[] posT = {tileInfo[i][sizeOf(tileInfo,1)-1][2],tileInfo[i][sizeOf(tileInfo,1)-1][3]};
      if(tileInfo[i][sizeOf(tileInfo,1)-1][4] == 1.0){
        tile aff = layer.Tiles[round(posT[0])][round(posT[1])];
        if(aff.ID != 0 && aff.ID != 1008 && aff.ID != 1007 && aff.ID != 1018 && aff.ID != 1019){
          vector force = new vector(0,-15);
          forces = pushVector(forces,force.x,force.y);
          forceTimers = pushInt(forceTimers,2);
          e.vel.y = 0;
        }
      }      
    }
  }
  
  public void move(){
    if(e.ID == 10){
      AI(curStage.layer2);
    }else if(e.ID == 11){
      left = false;
      right = false;
      if(inWater){
        AIWater(curStage.layer1);
      }      
    }else if(e.ID == 18){
      AILavaBubbles(curStage.layer1);
    }else if(e.ID == 23){
      AI(curStage.layer2);
    }else if(e.ID == 24 || e.ID == 25){
      left = false;
      right = false;
      AIWater(curStage.layer2);
    }else{
      AI(curStage.layer1);
    } 
    vector f = new vector(0,0);
    if(left){
      f = new vector(-acc,0);
      if(vel > 0){
      	e.vel.x = -vel;
    	}
    }
    if(right){
      f = new vector(acc,0);
      if(vel > 0){
      	e.vel.x = vel;
    	}
    }
    if(e.ID == 24 || e.ID == 25){
      if(up){
        f = new vector(0,-acc);
        if(vel > 0){
          e.vel.y = -vel;
        }
      }
      if(down){
        f = new vector(0,acc);
        if(vel > 0){
          e.vel.y = vel;
        }
      }
    }
    if(inWater){
      if(up){
        f = new vector(0,-acc);
        if(vel > 0){
          e.vel.y = -vel;
        }
      }
      if(down){
        f = new vector(0,acc);
        if(vel > 0){
          e.vel.y = vel;
        }
      }
    }
    addForce(f);
    if(e.ID < 12 || e.ID > 15){
      addForce(gravity);
    }    
    
    if(e.ID == 20 || e.ID == 22 || e.ID == 23  || e.ID == 24 || e.ID == 25){
      delForce(gravity);
    }
    
    if(e.ID == 11 && inWater){
      delForce(gravity);
    }
    
    //fuerzas
    for(int i = 0; i < forceTimers.length; i++){
      forceTimers[i]--;
    }
    
    for(int i = 0; i < forces.length; i++){
      if(forceTimers[i] <= 0){
        forceTimers = delInt(forceTimers,i);
        forces = delVector(forces,i);
      }
    }
    for(int i = 0; i < forces.length; i++){
      addForce(forces[i]);
    }
    
    if(colSide[0] || colSide[1]){
      delForce(gravity);
      e.vel.y = 0;
    }
    /*if(colSide[2] || colSide[3]){
      delForce(f);
      e.vel.x = 0;
    }*/
  }
  
  public void update(){
    //setup de velocidades
    if(D(160,160,e.pos.x,e.pos.y) < 320){
    move();
    e.update();   
    //ataques
    if(e.ID == 7 || e.ID == 11 ||(e.ID >= 12 && e.ID <= 15) || e.ID == 20 || e.ID == 21 || e.ID == 23 || e.ID == 25){
      atk1Timer++;
    }
    
    if(atk1Timer >= atk1Len){
      atk1Timer = 0;
      int angle = round(new vector(curPlayer.e.pos.x,curPlayer.e.pos.y).getAngle(e.pos));
      //solución para bug de disparo a otro lado
      if(angle == 0 || angle == 180){
        if(curPlayer.e.pos.x > e.pos.x){
          angle = 0;
        }else{
          angle = 180;
        }
      }
      //int ID2, double x2, double y2, double width2, double height2, int numCol, int angle, double speed
      double speed;
      int ID2;
      double posX = e.pos.x;
      double posY = e.pos.y;
      int numCol = 1;
      double widthB = 10;
      double heightB = 10;
      if(e.ID == 7){
        speed = 4;
        ID2 = 2;
      }else if(e.ID == 11){
        speed = 6;
        ID2 = 16;
        numCol = 2;
      }else if(e.ID == 12){
        speed = 2.5;
        ID2 = 17;
      }else if(e.ID == 13){
        speed = 2.5;
        ID2 = 17;
      }else if(e.ID == 14){
        speed = 2.5;
        ID2 = 17;
      }else if(e.ID == 15){
        speed = 2.5;
        ID2 = 17;
      }else if(e.ID == 20){
        speed = random(0.1,5);
        ID2 = 3;
      }else if(e.ID == 21){
        speed = 4;
        ID2 = 499;
      }else if(e.ID == 23){
        speed = 6;
        ID2 = 26;
        numCol = 10;
        widthB = 20;
        heightB = 20;
      }else if(e.ID == 25){
        speed = 4;
        ID2 = 2;       
      }
      
      atk1 = addMagicBall(atk1,ID2,posX,posY,widthB,heightB,numCol,angle,speed);
      
 			if(e.ID == 7){
        atk1[atk1.length-1].trail.color[0] = 155;
        atk1[atk1.length-1].trail.color[1] = 155;
        atk1[atk1.length-1].trail.color[2] = 155;
      }else if(e.ID == 11){
        atk1[atk1.length-1].trail.color[0] = 80;
        atk1[atk1.length-1].trail.color[1] = 80;
        atk1[atk1.length-1].trail.color[2] = 80;
      }else if(e.ID == 20){
        atk1[atk1.length-1].trail.color[0] = 198;
        atk1[atk1.length-1].trail.color[1] = 117;
        atk1[atk1.length-1].trail.color[2] = 237;
      }else if(e.ID == 21){
        atk1[atk1.length-1].trail.color[0] = 255;
        atk1[atk1.length-1].trail.color[1] = 150;
        atk1[atk1.length-1].trail.color[2] = 36;
      }else if(e.ID == 23){
        atk1[atk1.length-1].trail.color[0] = 255;
        atk1[atk1.length-1].trail.color[1] = 255;
        atk1[atk1.length-1].trail.color[2] = 255;
      }else if(e.ID == 25){
        atk1[atk1.length-1].trail.color[0] = 155;
        atk1[atk1.length-1].trail.color[1] = 155;
        atk1[atk1.length-1].trail.color[2] = 155;
      }else{
        atk1[atk1.length-1].trail.color[0] = 201;
        atk1[atk1.length-1].trail.color[1] = 239;
        atk1[atk1.length-1].trail.color[2] = 255;
      }
    }
    for(int i = 0; i < atk1.length; i++){
      if(atk1[i].numCol <= 0 || D(e.pos.x,e.pos.y,atk1[i].e.pos.x,atk1[i].e.pos.y) > 320){
        blockHit.x = atk1[i].e.pos.x + atk1[i].e.width;
        blockHit.y = atk1[i].e.pos.y + atk1[i].e.height;
        globalParticleSystem.add(blockHit);
        atk1 = delMagicBall(atk1,i);
      }
    }
    for(int i = 0; i < atk1.length; i++){
      if(curPlayer.bruteCollide(atk1[i].e.pos.x,atk1[i].e.pos.y,atk1[i].e.width,atk1[i].e.height)){
        atk1[i].numCol = 0;
        if(atk1[i].e.ID == 26){
          curPlayer.damage(2);
        }else{
          curPlayer.damage(1);
        }       
      }
      atk1[i].update();
    }
    //movimiento
    inWater = false;
    for(int i = 0; i < ceil(e.vel.getMod())+1; i++){  
      for(int j = 0; j < colSide.length; j++){
        colSide[j] = false;
      } 
      
      windCollide();
      tileCollide(curStage.layer1);
      tileCollide(curStage.layer2);
      if(e.ID != 12 && e.ID != 13 && e.ID != 14 && e.ID != 15 && e.ID != 20 && e.ID != 22){
        earthWallCollide(curPlayer.earthAtk);
      }     

			vector unitVel = divVector(e.vel,ceil(e.vel.getMod())+1);

      falsePos.add(unitVel);
      e.pos.x = camera.x-cameraX + falsePos.x;
      e.pos.y = camera.y + falsePos.y;
    }
    e.pos.round(0);
    }else{
      atk1 = new magicBall[0];
      e.pos.x = camera.x-cameraX + falsePos.x;
      e.pos.y = camera.y + falsePos.y;
      e.pos.round(0);
    }
  }

  public void render(){
    if(scene == 3 && !fixed){      
      e.pos.x = editorCamera.x + falsePos.x;
      e.pos.y = editorCamera.y + falsePos.y;
    }
    switch(e.ID){
      case 8:
      	if(e.vel.x > 0){
          runD.render(e.pos.x,e.pos.y,e.width,e.height);
        }else if(e.vel.x < 0){
          runL.render(e.pos.x,e.pos.y,e.width,e.height);
        }else{
          e.render();
        }   
      break
      case 9:
      	idle.render(e.pos.x,e.pos.y,e.width,e.height);
      break
      case 10:
      	if(e.vel.x > 0){
          runD.render(e.pos.x,e.pos.y,e.width,e.height);
        }else if(e.vel.x < 0){
          runL.render(e.pos.x,e.pos.y,e.width,e.height);
        }else{
          e.render();
        }   
      break
      case 11:
      	if(e.vel.y < 0){
          runD.render(e.pos.x,e.pos.y,e.width,e.height);
        }else if(e.vel.y > 0){
          runL.render(e.pos.x,e.pos.y,e.width,e.height);
        }else{
          e.render();
        }   
      break
      case 18:
     		if(e.vel.y < 0){
          runD.render(e.pos.x,e.pos.y,e.width,e.height);
        }else if(e.vel.y > 0){
          runL.render(e.pos.x,e.pos.y,e.width,e.height);
        }else{
          e.render();
        }      	
      break
      case 19:
      	idle.render(e.pos.x,e.pos.y,e.width,e.height);
      break
      case 22:
      	idle.render(e.pos.x,e.pos.y,e.width,e.height);
      break
      case 24:
      	idle.render(e.pos.x,e.pos.y,e.width,e.height);
      break
      case 25:
      	idle.render(e.pos.x,e.pos.y,e.width,e.height);
      break
      default:
      	e.render();
      break
    }
     
    //ataques
    for(int i = 0; i < atk1.length; i++){
      atk1[i].render();
    }
    if(scene != 3 && debug){
      for(int i = 0; i < sizeOf(tileInfo); i++){
        for(int j = 0; j < sizeOf(tileInfo,2); j++){
          rect(tileInfo[i][j][0],tileInfo[i][j][1],20,20);
        }
      }
    }
    
  }
}
 
class player{
  
  entity e;
  
  boolean[] colSide = {false,false,false,false};
  double[][][] tileInfo;
  
  double friction = 0.75; //fricción con el suelo
  double iceFriction = 0.9;
  double slideFriction = 0.6; //fricción con la pared
  double waterFriction = 0.99;
  vector gravity = new vector(0,1); //gravedad
  vector waterLift = new vector(0,-1.3);
  vector waterLiftPlus = new vector(0,-2);
  double baseAcc = 0.7; //fuerza al andar
  double runAcc = 1; //fuerza al correr
  double coyoteTimer; //permite saltar poco de despues de caer
  double coyoteLength = 3; 
  boolean jumping = false; //controla el salto
  double jumpVel = -12; //velocidad de salto (negativa siempre y en y)
  double jumpTimer = 0;
  double jumpLength = 17;
  
  boolean inWater = false;
  boolean inIce = false;
  //Salto de pared
  boolean jumpingD = false;
  double jumpDTimer = 0;
  double jumpDLength = 3;
  boolean rightSide;
  //Stats
  int health = 3;
  int invulTimer = 0;
  int invulLength = 50;
  boolean invul = false;
  int armor;
  int lives = 5;
  double mana = 100;
  double manaReg = 0.1;
  double maxMana = 100;
  boolean infiniteMana = false;
  boolean infiniteHealth = false;
  boolean infiniteLifes = false;
	int breathDur = 300;
  int breathingSpeed = 2;
  int breath = breathDur;
  boolean canBreathe = true;
  //Habilidades
  magicBall[] basicAtk;
  magicBall[] waterAtk;
  earthWall[] earthAtk;
  magicBall[] fireAtk;
  wind[] windAtk;
  
  double basicCost = 15;
  double earthCost = 40;//area para que se gaste 1 de mana
  double waterCost = 1;
  double fireCost = 7.5;
  double windCost = 0.2;//por el modulo de la dirección del viento
  
  boolean drag = false;
  double windX;
  double windY;
  vector windDir;
  double wallX;
  double wallY;
  double wallWidth;
  double wallHeight;
  double walliX;
  double walliY;
  earthWall temporaryWall;
  double minWallSize = 10;
  boolean wallCollision = false;
  
  boolean[] unlocked = {true,false,false,false,false};
  int selAbility = 0;
  
  vector ab1 = new vector(0,0);
  vector ab2 = new vector(0,0);
  vector ab3 = new vector(0,0);
  vector ab4 = new vector(0,0);
  vector ab5 = new vector(0,0);
  double angleH = 315;
  double targetAngle = 315;
  int moving = 0;
  
  double speedMoving = 0.1;
  double sep = 72;
  double sizeH = 32;
  double size2H = 20;
  double distH = 40;
  
  boolean cameraMovingX = false;
  
  vector[] forces;
  int[] forceTimers;
  //int ID, double dur, int nFrames
  animation idle = new animation(10,5,6);
  animation runD = new animation(11,5,8);
  animation runL = new animation(12,5,8);
  animation jump = new animation(13,5,3);
  animation fall = new animation(14,5,3);
  
  player(int ID, double x, double y, double width, double height){
    e = new entity(ID,x,y,width,height);
    tileInfo = new double[2+ceil(e.width/TileSize)][2+ceil(e.height/TileSize)][5];
    basicAtk = new magicBall[0];
    earthAtk = new earthWall[0];
    waterAtk = new magicBall[0];
    fireAtk = new magicBall[0];
    windAtk = new wind[0];
    
    forces = new vector[0];
    forceTimers = new int[0];
    
    if(fullPower){
      unlocked[1] = true;
      unlocked[2] = true;
      unlocked[3] = true;
      unlocked[4] = true;
    }
  }
  
  public void addForce(vector force){
    e.addForce(force);
  }  
  
  public void delForce(vector force){
    e.delForce(force);
  }
  
  public void move(){
    //Aumenta acc si corres
    double truAcc;
    if(wPressed){
      truAcc = runAcc;
      runD.vel = 2;
      runL.vel = 2;
    }else{
      truAcc = baseAcc;
      runD.vel = 1.5;
      runL.vel = 1.5;
    }
    
    //Aplica las fuerzas al moverse a izqd o dch
    if(aPressed){
      vector f = fromPolar(180,truAcc);
      addForce(f);
    }
    if(dPressed){
      vector f = fromPolar(0,truAcc);
      addForce(f);
    }
    //Gravedad
  	addForce(gravity);
    
    //Fuerzas varias
    for(int i = 0; i < forceTimers.length; i++){
      forceTimers[i]--;
    }
    
    for(int i = 0; i < forces.length; i++){
      if(forceTimers[i] <= 0){
        forceTimers = delInt(forceTimers,i);
        forces = delVector(forces,i);
      }
    }
    for(int i = 0; i < forces.length; i++){
      addForce(forces[i]);
    }
    
    //Agua
    if(inWater){
      if(sPressed){
        vector f = fromPolar(270,truAcc);
        addForce(f);
      }
      e.vel.mult(waterFriction);
      if(wPressed && !sPressed){
        addForce(waterLiftPlus);
      }else{
        addForce(waterLift);
      }      
    }
    //Fricción
    if(inIce){
      e.vel.mult(iceFriction);
    }else{
      e.vel.mult(friction);
    }   
	
    //Inicia el salto
    if(colSide[0]){
      if(e.vel.y != 0.0 && !jumping){
        dustLanding.x = e.pos.x-6;
      	dustLanding.y = e.pos.y+e.height-10;
        globalParticleSystem.add(dustLanding);
      }
      
      e.vel.y = 0;
      delForce(gravity);
      coyoteTimer = coyoteLength;
      jumpTimer = 0;
    }else{
      coyoteTimer--;
    }
    //Reinicia velocidades si tocas paredes
    if(colSide[1]){
      e.vel.y = 0; 
      if(inWater){
        if(wPressed && !sPressed){
          delForce(waterLiftPlus);
        }else{
          delForce(waterLift);
        } 
      }
    }
    if(colSide[2] || colSide[3]){
      e.vel.x = 0;
    }
    //Redondea velocidad si es muy baja
    if(abs(e.vel.x) < 0.1){
      e.vel.x = 0;
    }
    //Empieza el salto (de pared también)
    if(spacePressed && coyoteTimer > 0 && jumpTimer == 0.0 && !jumping){
      jumping = true;
      slidePressed = false;
      
      dustJump.x = e.pos.x;
      dustJump.y = e.pos.y+e.height-18;
      globalParticleSystem.add(dustJump);
    }
    if(!spacePressed){
      slidePressed = true;
    }
    //Salto
    if(jumping){
      jumpTimer++;
			if(!spacePressed || jumpTimer >= jumpLength || colSide[1]){
        jumping = false;
      }else{
        e.vel.y = 0;
        double jumpForce = map(jumpTimer,0,jumpLength,jumpVel,0);
        vector jump = new vector(0,jumpForce);
        addForce(jump);
      }
    }
    //Deslizamiento por paredes
    if((dPressed && colSide[2]) || (aPressed && colSide[3]) && coyoteTimer < 0 && e.vel.y != 0.0){
      e.vel.y *= slideFriction;
    }
    //Inicia el salto de pared
    if(coyoteTimer < 0 && spacePressed && (colSide[2] || colSide[3]) && slidePressed){ 
			jumpingD = true;
      if(colSide[3]){
        rightSide = true;
      }else{
        rightSide = false;
      }    
    }
    //Salto de pared
    if(jumpingD){ 
      jumpDTimer++;
      if(jumpDTimer >= jumpDLength){
        jumpingD = false;
        slidePressed = false;
        jumpDTimer = 0;
      }
      double jumpX = map(jumpDTimer,0,jumpDLength,-7,0);
      double jumpY = map(jumpDTimer,0,jumpDLength,-7,0);
      if(rightSide){
        jumpX *= -1;
      }
      vector diagonalJump = new vector(jumpX,jumpY);
      addForce(diagonalJump);
    }
  }
  
  public boolean bruteCollide(double x2, double y2, double width2, double height2){
    return e.bruteCollide(x2,y2,width2,height2);
  }
  
  public void damage(int amount){
    if(!invul){
      bloodHit.x = e.pos.x+e.width/2;
      bloodHit.y = e.pos.y+e.height/2;
      globalParticleSystem.add(bloodHit);
      if(armor > 0){
        if(amount > armor){
          int remainder = amount-armor;
          armor = 0;
          if(health > 0){
            health -= remainder;
            if(health < 0){
              health = 0;
            }
          }
        }else{
					armor -= amount;
        }
      }else{
        if(health > 0){
          health -= amount;
          if(health < 0){
          	health = 0;
          }
        }
      }
    }
    if(amount == -1){
    	health = 0;
			armor = 0;
    }
    invul = true;
    
  }
  
  public void update(){	
    //Calculo de fuerzas y velocidad
    move(); 
    e.update();
    
    //Daño a enemigos y jugador
    for(int i = 0; i < curStage.stageEnemies.length; i++){
      enemy en = curStage.stageEnemies[i];
      if(en.health != -1){
        for(int j = 0; j < basicAtk.length; j++){
          magicBall ball = basicAtk[j];
          if(en.bruteCollide(ball.e.pos.x,ball.e.pos.y,ball.e.width,ball.e.height)){
            en.health -= 1;         
            ball.numCol = 0;

            bloodHit.x = en.e.pos.x+en.e.width/2;
            bloodHit.y = en.e.pos.y+en.e.height/2;
            globalParticleSystem.add(bloodHit);
          }
        }

        for(int j = 0; j < fireAtk.length; j++){
          magicBall ball = fireAtk[j];
          if(en.bruteCollide(ball.e.pos.x,ball.e.pos.y,ball.e.width,ball.e.height)){
            en.health -= 1;
            ball.numCol = 0;

            bloodHit.x = en.e.pos.x+en.e.width/2;
            bloodHit.y = en.e.pos.y+en.e.height/2;
            globalParticleSystem.add(bloodHit);
          }
        }
      }
      
      
      if(e.bruteCollide(en.e.pos.x,en.e.pos.y,en.e.width,en.e.height)){
        damage(1);
      }
    }
    //Update de stats
    if(invul){
      invulTimer++;
    }
    if(invulTimer > invulLength){
      invulTimer = 0;
      invul = false;
    }
    if(mana < maxMana){
      mana += manaReg;
    }
    mana = roundTo(mana,2);
    if(mana > maxMana){
      mana = maxMana;
    }
    if(infiniteMana){
      mana = maxMana;
    }
    if(!canBreathe){
      breath--;
    }
    if(canBreathe || (unlocked[selAbility] && selAbility == 2)){ 
      breath += breathingSpeed;
    }
    if(breath >= breathDur){
      breath = breathDur;
    }
    
    if(breath <= 0){
      breath = 0;
      damage(1);
    }
    if(infiniteHealth){
      health = 3;
    }
    if(health <= 0){
      dead = true;
      if(!lvIsIn(curStage,extraStages) && curStage != editorStage && !infiniteLifes){
        lives--;
      }    
    }
    
    if(inWater){//pone en falso la respiracion si tocas agua, si tocas aire se pondra en verdadero despues
      canBreathe = false;
    }
    //Push de habilidades
    if(unlocked[selAbility]){
      switch(selAbility){
        case 0:
        	if(mousePressed && mana >= basicCost){
            mana -= basicCost;
            mousePressed = false;
            double cx = e.pos.x+e.width/2;
            double cy = e.pos.y+e.height/2;
            int angle = round(toPolar(cx,cy,mouseX,mouseY)[1]);
            //int ID2, double x2, double y2, double width2, double height2, int numCol, int angle, double speed
            basicAtk = addMagicBall(basicAtk,3,cx,cy,10,10,1,angle,3);
            
            basicAtk[basicAtk.length-1].trail.color[0] = 198;
            basicAtk[basicAtk.length-1].trail.color[1] = 117;
            basicAtk[basicAtk.length-1].trail.color[2] = 237;
          }
        break
        case 1:
        	if(mousePressed && !drag){
            drag = true;
            walliX = mouseX;
            walliY = mouseY;
          }

          if(drag){
            wallX = walliX;
            wallY = walliY;
            wallWidth = abs(mouseX - walliX);
            wallHeight = abs(mouseY - walliY);
            if(mouseX - walliX < 0){
              wallX -= wallWidth;
            }
            if(mouseY - walliY < 0){
              wallY -= wallHeight;
            }
            temporaryWall = new earthWall(5,wallX,wallY,wallWidth,wallHeight);
            temporaryWall.tileCollide(curStage.layer1);
            wallCollision = bruteCollide(wallX,wallY,wallWidth,wallHeight);
            for(int i = 0; i < curStage.stageEnemies.length; i++){
              if(curStage.stageEnemies[i].bruteCollide(wallX,wallY,wallWidth,wallHeight)){
                wallCollision = true;
              }
            }
            if(!mousePressed){
              drag = false;
              if(mana >= wallWidth*wallHeight/earthCost && wallWidth >= minWallSize && wallHeight >= minWallSize 
                 && !temporaryWall.tileCollision && !wallCollision){
              	mana -= wallWidth*wallHeight/earthCost;
               	earthAtk = pushWall(earthAtk,wallX,wallY,wallWidth,wallHeight);
              }
            }
          }
        break
        case 2:
        	if(mousePressed && mana >= waterCost && !inWater){
            mana -= waterCost;
            double cx = e.pos.x+e.width/2;
            double cy = e.pos.y+e.height/2;
            int angle = round(toPolar(cx,cy,mouseX,mouseY)[1]);
            //int ID2, double x2, double y2, double width2, double height2, int numCol, int angle, double speed
            double size = 5+random(-2,2);
            waterAtk = addMagicBall(waterAtk,6,cx,cy,size,size,1,angle+round(random(-10,10)),6+random(-1,2));
            waterAtk[waterAtk.length-1].lowPrecision = true;
            waterAtk[waterAtk.length-1].haveTrail = false;
          }
        break
        case 3:
        	if(mousePressed && mana >= fireCost && !inWater){
            mana -= fireCost;
            mousePressed = false;
            double cx = e.pos.x+e.width/2;
            double cy = e.pos.y+e.height/2;
            int angle = round(toPolar(cx,cy,mouseX,mouseY)[1]);
            //int ID2, double x2, double y2, double width2, double height2, int numCol, int angle, double speed
            fireAtk = addMagicBall(fireAtk,4,cx,cy,10,10,5,angle,3);

            fireAtk[fireAtk.length-1].trail.color[0] = 255;
            fireAtk[fireAtk.length-1].trail.color[1] = 150;
            fireAtk[fireAtk.length-1].trail.color[2] = 36;
          }
        break
        case 4:
        	if(mousePressed && !drag){
            drag = true;
            windX = mouseX;
            windY = mouseY;
          }

          if(drag){
						windDir = new vector(mouseX-windX,mouseY-windY);
            if(!mousePressed){
              drag = false;
              if(windDir.getMod() > 5 && mana >= windDir.getMod()*windCost){
              	mana -= windDir.getMod()*windCost;
               	windAtk = pushWind(windAtk,windX,windY,windDir);
              }
            }
          }
        break
      }
    }
    
    //Reinicio de colliders
    for(int i = 0; i < colSide.length; i++){
      colSide[i] = false;
    }
    inWater = false;
    inIce = false;
    //Calculo de posicion
    int reps = ceil(e.vel.getMod())+1;
    for(int i = 0; i < reps; i++){
      double maxX = -(TileSize * sizeOf(curStage.layer1.Tiles,2) - 320);
      double halfX = -(TileSize * sizeOf(curStage.layer1.Tiles,2)/2 - 160);
      
      //Encuadra la camara en el escenario
      
      double cutOffX = 130;
      if(camera.x > halfX){
        if(camera.x >= 0 && cameraMovingX){
        	cameraMovingX = false;
          camera.x  = 0;
        }else if(e.pos.x >= cutOffX && !cameraMovingX){
          cameraMovingX = true;
          e.pos.x = cutOffX;
        }
      }else{
        if(camera.x <= maxX && cameraMovingX){
        	cameraMovingX = false;
          camera.x  = maxX;
        }else if(e.pos.x <= cutOffX && !cameraMovingX){
          cameraMovingX = true;
          e.pos.x = cutOffX;
        }
      }
      
   		windCollide();
      
      tileCollide(curStage.layer1);
      tileCollide(curStage.layer2);
     
      earthWallCollide();
      
      vector unitVel = divVector(e.vel,ceil(e.vel.getMod())+1);
      curStage.vx = 0;
      if(cameraMovingX){
        if(!colSide[2] && !colSide[3]){
          curStage.vx = -unitVel.x;
        }
        
        camera.x -= unitVel.x;
        e.pos.y += unitVel.y;
      }else{
        e.pos.add(unitVel);
        //Muros invisible a los lados
        if(e.pos.x < 0){
          e.pos.x = 0;
        }
        if(e.pos.x+e.width > 320){
          e.pos.x = 320-e.width;
        }
      }
      //Muro invisible abajo
      if(e.pos.y+e.height > 320){
        e.pos.y = 320-e.height;
      }
      for(int j = 0; j < earthAtk.length; j++){
        earthAtk[j].update(reps);
      }
      
    }   
    camera.round(0);
    e.pos.round(0);
    //enemigos
    curStage.updateEnemies();
    
    //Update de habilidades
    //Basica
    for(int i = 0; i < basicAtk.length; i++){
     	if(basicAtk[i].numCol <= 0 || D(basicAtk[i].e.pos.x,basicAtk[i].e.pos.y,e.pos.x,e.pos.y) > 320){
        blockHit.x = basicAtk[i].e.pos.x + basicAtk[i].e.width;
        blockHit.y = basicAtk[i].e.pos.y + basicAtk[i].e.height;
        globalParticleSystem.add(blockHit);
        basicAtk = delMagicBall(basicAtk,i);
      }
    }
    for(int i = 0; i < basicAtk.length; i++){
      basicAtk[i].update();
    }
    //Tierra
    for(int i = 0; i < earthAtk.length; i++){
     	if(D(earthAtk[i].e.pos.x,earthAtk[i].e.pos.y,e.pos.x,e.pos.y) > 320){
        earthAtk = delWall(earthAtk,i);
      }
    }
    //Agua
    for(int i = 0; i < waterAtk.length; i++){
     	if(waterAtk[i].numCol <= 0 || D(waterAtk[i].e.pos.x,waterAtk[i].e.pos.y,e.pos.x,e.pos.y) > 320){
        drops.x = waterAtk[i].e.pos.x + waterAtk[i].e.width;
        drops.y = waterAtk[i].e.pos.y + waterAtk[i].e.height;
        globalParticleSystem.add(drops);
        waterAtk = delMagicBall(waterAtk,i);
      }
    }
    for(int i = 0; i < waterAtk.length; i++){
      waterAtk[i].addForce(gravity);
      waterAtk[i].update();
    }
    //Fuego
    for(int i = 0; i < fireAtk.length; i++){
     	if(fireAtk[i].numCol <= 0 || D(fireAtk[i].e.pos.x,fireAtk[i].e.pos.y,e.pos.x,e.pos.y) > 320){
        blockHit.x = fireAtk[i].e.pos.x + fireAtk[i].e.width;
        blockHit.y = fireAtk[i].e.pos.y + fireAtk[i].e.height;
        globalParticleSystem.add(blockHit);
        fireAtk = delMagicBall(fireAtk,i);
      }
    }
    for(int i = 0; i < fireAtk.length; i++){
      fireAtk[i].addForce(gravity);
      fireAtk[i].update();
    }
    //Viento
    for(int i = 0; i < windAtk.length; i++){
      windAtk[i].update();
    }
    for(int i = 0; i < windAtk.length; i++){
     	if(D(windAtk[i].pos.x,windAtk[i].pos.y,e.pos.x,e.pos.y) > 320 || windAtk[i].tileCollision
        || windAtk[i].entityCollision){
        blockHit.x = windAtk[i].pos.x;
        blockHit.y = windAtk[i].pos.y;
        globalParticleSystem.add(blockHit);
        windAtk = delWind(windAtk,i);
      }
    }
  }
  
  public void windCollide(){
    for(int i = 0; i < windAtk.length; i++){
      if(windAtk[i].collide(e.pos.x,e.pos.y,e.width,e.height)){
        windAtk[i].entityCollision = true;
        vector force = divVector(windAtk[i].dir,10);
        forces = pushVector(forces,force.x,force.y);
        forceTimers = pushInt(forceTimers,5);
        windAtk = delWind(windAtk,i);
      }
    }
    
  }
  
  public int collideWithTile(double x2, double y2, double width2, double height2, tile Tile){
    return e.collideWithTile(x2,y2,width2,height2,Tile);
  }
  
  public int collide(double x2, double y2, double width2, double height2){
    return e.collide(x2,y2,width2,height2);
  }
  
  public void hudUI(){
    //Vida
    if(health >= 3){
      image("https://1.bp.blogspot.com/-HPbvCB0t_nE/YC1ZirGbiMI/AAAAAAAADtE/TNuviwL9scsQ0v34DtbAu5LlTB3XlUyegCLcBGAsYHQ/s0/health1.png",10,10,99,16);
    }else if(health >= 2){
      image("https://1.bp.blogspot.com/-jGlOUZqsKrA/YC1Zi1RBUzI/AAAAAAAADtM/3rFAIjU2wvIZ2mhKh6L4YI5q6AfeUHOTQCLcBGAsYHQ/s0/health2.png",10,10,99,16);
    }else if(health >= 1){
      image("https://1.bp.blogspot.com/-EeT3tPGlh1E/YC1ZiiFZD2I/AAAAAAAADtI/xVN_dEvdCBMTtOq4D_QBpxNkx2yajEpAgCLcBGAsYHQ/s0/health3.png",10,10,99,16);
    }else{
      image("https://1.bp.blogspot.com/-YKmeKX1QTlg/YC1ZjSQEqHI/AAAAAAAADtQ/sfzK3_6qz8o_9p5fep5l1Wp4Fn49NedjwCLcBGAsYHQ/s0/health4.png",10,10,99,16);
    }
    //Mana
    double manaWidth = map(mana,0,maxMana,0,83);   
    image("https://1.bp.blogspot.com/-r96z44Wjjhg/YC1Zj9zla_I/AAAAAAAADtY/wp1jG9N1gpM9bXjAb_TUu-oWLb2NSyJ_QCLcBGAsYHQ/s0/mana2.png",117,10,99,16);  
    image("https://1.bp.blogspot.com/-18NJ7v8C3hM/YC1cM-2j_nI/AAAAAAAADuA/P-rEVYjgumIyiNDAR9dgGO4P_a_MhzQgQCLcBGAsYHQ/s0/manabar.png",132,15,manaWidth,8);   
    image("https://1.bp.blogspot.com/-3iXEtIHP764/YC1azrb8llI/AAAAAAAADt4/O7kypyWtDWgxcLmZyAsRyFluJntBYIOGQCLcBGAsYHQ/s0/mana3.png",117,10,99,16);    
    //Monedas
    fill(255,255,255);
    textSize(6);
    image("https://1.bp.blogspot.com/-YBYzEJVfSn8/YC1Zkb08gOI/AAAAAAAADtg/z7TG8uOeOasCuOov1Ob9Lp7XnQgGARcBACLcBGAsYHQ/s0/money.png",225,10,29,16);
    text(curStage.coinCounter,244-5,22);
    textSize(10);
    //Respiración
    if(breath < breathDur){
      int maxBubbles = 6;
      int bubbles = round(map(breath,0,breathDur,0,maxBubbles));
      for(int i = 0; i < maxBubbles; i++){
        if(bubbles > i){
          fill(77,155,230);
          stroke(255,255,255);
          image("https://1.bp.blogspot.com/-1bGuPsck_mM/YC1mdLL7ZeI/AAAAAAAADuI/ATz9ccw7WZ8fdapxVAGLMBv4ujwT6v3QQCLcBGAsYHQ/s0/bubble.png",
                e.pos.x+i*15-maxBubbles*15/2+e.width/2+5,e.pos.y-15,10,10);
        }
        
      }
    }
    //Habilidades elementales
    ab1.x = distH*cos(aToRad(angleH));
    ab1.y = 320+distH*sin(aToRad(angleH));
    
    ab2.x = distH*cos(aToRad(angleH+sep));
    ab2.y = 320+distH*sin(aToRad(angleH+sep));
    
    ab3.x = distH*cos(aToRad(angleH+sep*2));
    ab3.y = 320+distH*sin(aToRad(angleH+sep*2));
    
    ab4.x = distH*cos(aToRad(angleH+sep*3));
    ab4.y = 320+distH*sin(aToRad(angleH+sep*3));
    
    ab5.x = distH*cos(aToRad(angleH+sep*4));
    ab5.y = 320+distH*sin(aToRad(angleH+sep*4));
    
    strokeWeight(5);
    noFill();
    image("https://1.bp.blogspot.com/-_xGTRY5LDhE/YDFUzi0QulI/AAAAAAAADvA/O4SsVzN3zywm78gy5oxHLGAMCRaYUvIsQCLcBGAsYHQ/s0/arcane.png",ab1.x-sizeH/2,ab1.y-sizeH/2,sizeH,sizeH);
    image("https://1.bp.blogspot.com/-6UzzdZHehlk/YDFflzrIGlI/AAAAAAAADvY/bnNCfXEnty4YxhBqbqzLcbuuL6pcgolZwCLcBGAsYHQ/s0/earth.png",ab2.x-sizeH/2,ab2.y-sizeH/2,sizeH,sizeH);
    image("https://1.bp.blogspot.com/-Qa84ePm9Y1Y/YDFfwz-zKDI/AAAAAAAADvg/C8VKHsurkZwBBABgUYsfJBmEhE0P8SOVQCLcBGAsYHQ/s0/water.png",ab3.x-sizeH/2,ab3.y-sizeH/2,sizeH,sizeH);
    image("https://1.bp.blogspot.com/-vZnXjkXcDuU/YDFZ1o0ZM_I/AAAAAAAADvI/lSl5jf9JZvwTMhI5qXkVGZpL7wUYqodngCLcBGAsYHQ/s0/fire.png",ab4.x-sizeH/2,ab4.y-sizeH/2,sizeH,sizeH);
    image("https://1.bp.blogspot.com/-DoL9OLjye80/YDFf1wFcy7I/AAAAAAAADvk/jWzKN2zpKuIjQo7_qN9oTQ-3xedTp0u8QCLcBGAsYHQ/s0/wind.png",ab5.x-sizeH/2,ab5.y-sizeH/2,sizeH,sizeH);
    image("https://1.bp.blogspot.com/-8JWzze0Ud0k/YDFNNqVLYHI/AAAAAAAADuw/xu53tBo5EHorLAy-nZj-UnbfJaXnQMYZQCLcBGAsYHQ/s0/skillList.png",-10,310,size2H,size2H);
    strokeWeight(1);
    
    //Lógica del giro
    if(moving == 1){
      angleH += 72*speedMoving;
    }
    if(moving == 2){
      angleH -= 72*speedMoving;
    }
    
    if(abs(angleH-targetAngle) >= 0 && abs(angleH-targetAngle) < 2){
      angleH = targetAngle;
      moving = 0;
    }
    
    if(ePressed && moving == 0){
      ePressed = false;
      moving = 1;
      targetAngle += 72;
      selAbility -= 1;
    }
    if(qPressed && moving == 0){
      qPressed = false;
      moving = 2;
      targetAngle -= 72;
      selAbility += 1;
    }
    if(selAbility > 4){
      selAbility = 0;
    }
    if(selAbility < 0){
      selAbility = 4;
    }
  }
  
  public void render(){
    if(!invul){
      if(e.vel.y > 0){
        jump.render(e.pos.x,e.pos.y,e.width,e.height);
      }else if(e.vel.y < 0){
        fall.render(e.pos.x,e.pos.y,e.width,e.height);
      }else if(dPressed){
        runD.render(e.pos.x,e.pos.y,e.width,e.height);
      }else if(aPressed){
        runL.render(e.pos.x,e.pos.y,e.width,e.height);
      }else{
        idle.render(e.pos.x,e.pos.y,e.width,e.height);
      }
    }else if(invul && invulTimer % 4 == 0){
      if(e.vel.y > 0){
        jump.render(e.pos.x,e.pos.y,e.width,e.height);
      }else if(e.vel.y < 0){
        fall.render(e.pos.x,e.pos.y,e.width,e.height);
      }else if(dPressed){
        runD.render(e.pos.x,e.pos.y,e.width,e.height);
      }else if(aPressed){
        runL.render(e.pos.x,e.pos.y,e.width,e.height);
      }else{
        idle.render(e.pos.x,e.pos.y,e.width,e.height);
      }
    }   
    
    /// Render habilidades///
    for(int i = 0; i < basicAtk.length; i++){
      basicAtk[i].render();
    }
    for(int i = 0; i < fireAtk.length; i++){
      fireAtk[i].render();
    }
    for(int i = 0; i < waterAtk.length; i++){
      waterAtk[i].render();
    }
    for(int i = 0; i < earthAtk.length; i++){
      earthAtk[i].render();
    }
    //Trail tierra
    if(selAbility == 1 && drag){
      noFill();
      stroke(96,237,70);
      if(wallWidth < minWallSize || wallHeight < minWallSize || mana < wallWidth*wallHeight/earthCost 
         || temporaryWall.tileCollision || wallCollision){
      	stroke(237,102,70);
      }
      strokeWeight(4);
      rect(wallX,wallY,wallWidth,wallHeight);
    	strokeWeight(1);
    }
    for(int i = 0; i < windAtk.length; i++){
      windAtk[i].render();
    }
    //Trail viento
    if(selAbility == 4 && drag){
      stroke(199,199,199);
      line(windX,windY,windX+windDir.x,windY+windDir.y);
    }
    if(crosshair){
      if(selAbility == 0){
        noFill();
        stroke(163,49,217);
        strokeWeight(2);
        ellipse(mouseX,mouseY,20,20);
        line(mouseX-15,mouseY,mouseX-5,mouseY);
        line(mouseX+15,mouseY,mouseX+5,mouseY);
        line(mouseX,mouseY-15,mouseX,mouseY-5);
        line(mouseX,mouseY+15,mouseX,mouseY+5);
        strokeWeight(1);
      }else if(selAbility == 1){
        noFill();
        stroke(177,137,101);
        strokeWeight(2);
        line(mouseX-10,mouseY,mouseX+10,mouseY);
        line(mouseX,mouseY-10,mouseX,mouseY+10);
        strokeWeight(1);
      }else if(selAbility == 2){
        noFill();
        stroke(90,171,237);
        strokeWeight(2);
        ellipse(mouseX,mouseY,20,20);
        line(mouseX-15,mouseY,mouseX-5,mouseY);
        line(mouseX+15,mouseY,mouseX+5,mouseY);
        line(mouseX,mouseY-15,mouseX,mouseY-5);
        line(mouseX,mouseY+15,mouseX,mouseY+5);
        strokeWeight(1);
      }else if(selAbility == 3){
        noFill();
        stroke(255,146,49);
        strokeWeight(2);
        ellipse(mouseX,mouseY,20,20);
        line(mouseX-15,mouseY,mouseX-5,mouseY);
        line(mouseX+15,mouseY,mouseX+5,mouseY);
        line(mouseX,mouseY-15,mouseX,mouseY-5);
        line(mouseX,mouseY+15,mouseX,mouseY+5);
        strokeWeight(1);
      }else if(selAbility == 4){
        noFill();
        stroke(199,199,199);
        strokeWeight(2);
        ellipse(mouseX,mouseY,20,20);
        line(mouseX-15,mouseY,mouseX-5,mouseY);
        line(mouseX+15,mouseY,mouseX+5,mouseY);
        line(mouseX,mouseY-15,mouseX,mouseY-5);
        line(mouseX,mouseY+15,mouseX,mouseY+5);
        strokeWeight(1);
      }
    }
    
    
    /// Debug ///
    if(debug){
      for(int j = 0; j < sizeOf(tileInfo,1); j++){
        for(int k = 0; k < sizeOf(tileInfo,2); k++){
        	stroke(0,0,0);
          noFill();
    			rect(tileInfo[j][k][0], tileInfo[j][k][1],TileSize,TileSize);
          fill(255,255,255);
          /*textSize(8);
          text(tileInfo[j][k][0],tileInfo[j][k][0], tileInfo[j][k][1]+10);
          text(tileInfo[j][k][1],tileInfo[j][k][0], tileInfo[j][k][1]+20);*/
        }
      }
    }
  }
  
  public void renderUI(){
    hudUI();
  }
  
  public void earthWallCollide(){
    for(int i = 0; i < earthAtk.length; i++){
      double x2 = earthAtk[i].e.pos.x;
      double y2 = earthAtk[i].e.pos.y;
      double w2 = earthAtk[i].e.width;
      double h2 = earthAtk[i].e.height;
      int side = collide(x2,y2,w2,h2);
      if(side != 0){
        colSide[side-1] = true;
        switch(side-1){
        	case 0:
          	e.pos.y -= (e.pos.y+e.height)-y2;
          break
          case 1:
          	if(!earthAtk[i].dontMove){
              earthAtk = delWall(earthAtk,i);
            }
            e.pos.y += y2+h2-e.pos.y;
          break
          case 2:
            if(cameraMovingX){
            	camera.x += (e.pos.x+e.width)-x2;
            }else{
              e.pos.x -= (e.pos.x+e.width)-x2;
            }      	
          break
          case 3:
            if(cameraMovingX){
              camera.x -= x2+w2-e.pos.x;
            }else{
            	e.pos.x += x2+w2-e.pos.x;
            }
          break
      	}
      }
    }
  }
  
  public void tileCollide(TileMap layer){
    tileInfo = curStage.getTilesAround(e.pos.x,e.pos.y,e.width,e.height,2+ceil(e.width/TileSize),2+ceil(e.height/TileSize),layer);
    for(int j = 0; j < tileInfo.length; j++){
    	for(int k = 0; k < sizeOf(tileInfo,2); k++){
      	if(round(tileInfo[j][k][4]) == 1){

          double xT = tileInfo[j][k][0];
          double yT = tileInfo[j][k][1];
          int[] pos = layer.getTile(xT,yT);
          tile cTile = layer.Tiles[pos[1]][pos[0]];
          boolean[] sideCollision = {false,false,false,false};
          
          if(layer == curStage.layer1 && cTile.hasTrigger(0)){
            double pOffset = 2;
            if(intersectRR(e.pos.x+pOffset,e.pos.y+pOffset,e.width-pOffset*2,e.height-pOffset*2,xT,yT,TileSize,TileSize)){
             	canBreathe = true;
            }
            
          }
          
          if(cTile.hasNotTrigger(0)){
 						
            int side = collideWithTile(xT,yT,TileSize,TileSize,cTile);
            if(side != 0){
              sideCollision[side-1] = true;
              
            	//Colisión normal
              if(cTile.hasTrigger(1) && curStage.layer2.Tiles[pos[1]][pos[0]].ID != 1010 && cTile.hasNotTrigger(22)){
                colSide[side-1] = true;
                
                switch(side-1){
                  case 0:
                  	e.pos.y -= (e.pos.y+e.height)-yT;
                  break
                  case 1:
                  	e.pos.y += yT+TileSize-e.pos.y;
                  break
                  case 2:
                  	if(cameraMovingX){
                      camera.x += (e.pos.x+e.width)-xT;
                    }else{
                      e.pos.x -= (e.pos.x+e.width)-xT;
                    }      	
                  break
                  case 3:
                  	if(cameraMovingX){
                      camera.x -= xT+TileSize-e.pos.x;
                    }else{
                      e.pos.x += xT+TileSize-e.pos.x;
                    }
                  break
                }
              }
              //Colisión bloque arriba
              if(cTile.hasTrigger(2)){                
                if(e.pos.y+e.height <= yT+1 && sideCollision[0]){
                  colSide[0] = true;
                  e.pos.y -= (e.pos.y+e.height)-yT;
                }
              }
  						//Colisión bloque abajo
              if(cTile.hasTrigger(3)){                
                if(e.pos.y >= yT+TileSize-1 && sideCollision[1]){
                  colSide[1] = true;
                  e.pos.y += yT+TileSize-e.pos.y;
                }
              }
              //Colisión bloque derecha
              if(cTile.hasTrigger(4)){                
                if(e.pos.x > xT+1 && sideCollision[3]){
                  colSide[3] = true;
                  if(cameraMovingX){
                  	camera.x -= xT+TileSize-e.pos.x;
                  }else{
                    e.pos.x += xT+TileSize-e.pos.x;
                  } 
                }
              }
 							//Colisión bloque izquierda
              if(cTile.hasTrigger(5)){                
                if(e.pos.x+e.width > xT-1 && sideCollision[2]){
                  colSide[2] = true;
                  if(cameraMovingX){
                  	camera.x += (e.pos.x+e.width)-xT;
                  }else{
                    e.pos.x -= (e.pos.x+e.width)-xT;
                  } 
                }
              }
              //Trampolín
              if(cTile.hasTrigger(6)){
                if(e.pos.y+e.height < yT+1 && sideCollision[0]){
                  e.vel.y = -60;
                  colSide[0] = false;
                  //addForce(new vector(0,-10));
                }
              }
              //Trampolín DOWN
              if(cTile.hasTrigger(19)){
                if(e.pos.y > yT+TileSize-1 && sideCollision[1]){
                  e.vel.y = 60;
                  colSide[1] = false;
                }
              }
              //Trampolín LEFT
              if(cTile.hasTrigger(20)){
                if(e.pos.x+e.width > xT-1 && sideCollision[2]){
                  e.vel.x = -60;
                  colSide[2] = false;
                }
              }
              //Trampolín RIGHT
              if(cTile.hasTrigger(21)){
                if(e.pos.x > xT+1 && sideCollision[3]){
                  e.vel.x = 60;
                  colSide[3] = false;
                }
              }
              //Pickups
              if(cTile.hasTrigger(7)){
                double pOffset = 5;
                if(intersectRR(e.pos.x+pOffset,e.pos.y+pOffset,e.width-pOffset*2,e.height-pOffset*2,xT,yT,TileSize,TileSize)){
                  if(cTile.ID == 9001){
                    curStage.coinCounter += 1;
                    if(curStage.coinCounter >= 100){
                      curStage.coinCounter = 0;
                      if(!lvIsIn(curStage,extraStages) && curStage != editorStage){
                        lives++;
                        lifePlus.x = e.pos.x+e.width/2;
                        lifePlus.y = e.pos.y+e.height/2;
                        globalParticleSystem.add(lifePlus);
                      }                      
                    }
                    coinSparkle.x = xT+TileSize/2;
                    coinSparkle.y = yT+TileSize/2;
                    globalParticleSystem.add(coinSparkle);
                  }
                  if(cTile.ID == 9002){
                    if(health < 3){ 
                      health += 1;
                    }
                    lifeHeart.x = xT+TileSize/2;
                    lifeHeart.y = yT+TileSize/2;
                    globalParticleSystem.add(lifeHeart);
                  }
                  if(cTile.ID == 9003){
                    if(armor < 2){ 
                      armor += 1;
                    }
                  }
                  if(cTile.ID == 9004){
                    mana += 50;
                    if(mana > 100){ 
                      mana = 100;
                    }
                    manaPotion.x = xT+TileSize/2;
                    manaPotion.y = yT+TileSize/2;
                    globalParticleSystem.add(manaPotion);
                  }
                  if(cTile.ID == 9005){
                 		if(lives < 99){
                      lives += 1;
                    }
                    lifePlus.x = xT+TileSize/2;
                    lifePlus.y = yT+TileSize/2;
                    globalParticleSystem.add(lifePlus);
                  }
                  if(cTile.ID >= 9050){                    
                    curStage.collectibles[cTile.ID-9050-curStage.ID*10] = true;
                    
                    secretPlus.x = xT+TileSize/2;
                    secretPlus.y = yT+TileSize/2;
                    globalParticleSystem.add(secretPlus);
                  }
                  cTile.trigger = pushInt(cTile.trigger,0);
                  cTile.trigger = delNum(cTile.trigger,7); // Elimina el trigger 7 de la lista de triggers
                  cTile.ID = 0;
                  
                }
              }
              //Fuego
              if(cTile.hasTrigger(8)){
                double pOffset = 5;
              	if(intersectRR(e.pos.x+pOffset,e.pos.y+pOffset,e.width-pOffset*2,e.height-pOffset*2,xT,yT,TileSize,TileSize)){
                  damage(1);
                }
              }
              //Lava
              if(cTile.hasTrigger(9)){
                double pOffset = 5;
              	if(intersectRR(e.pos.x+pOffset,e.pos.y+pOffset,e.width-pOffset*2,e.height-pOffset*2,xT,yT,TileSize,TileSize)){
                	damage(-1);
                }
              }
              //Agua
              if(cTile.hasTrigger(10)){
                double pOffset = 5;
              	if(intersectRR(e.pos.x+pOffset,e.pos.y+pOffset,e.width-pOffset*2,e.height-pOffset*2,xT,yT,TileSize,TileSize)){
                	inWater = true;
                }
              }
              //Bandera final
              if(cTile.hasTrigger(11)){
                double pOffset = 5;
              	if(intersectRR(e.pos.x+pOffset,e.pos.y+pOffset,e.width-pOffset*2,e.height-pOffset*2,xT,yT,TileSize,TileSize)){
                	endLevel = true;
                  winMap.active = true;
                }
              }
              //Pinchos
              if(cTile.hasTrigger(14)){
                double pOffset = 5;
              	if(intersectRR(e.pos.x+pOffset,e.pos.y+pOffset,e.width-pOffset*2,e.height-pOffset*2,xT,yT,TileSize,TileSize)){
                  damage(-1);
                }
              }
              //Poder elemental Tierra
              if(cTile.hasTrigger(15)){
                double pOffset = 5;
              	if(intersectRR(e.pos.x+pOffset,e.pos.y+pOffset,e.width-pOffset*2,e.height-pOffset*2,xT,yT,TileSize,TileSize)){
                  newPower.x = xT+TileSize/2;
                  newPower.y = yT+TileSize/2;
                  globalParticleSystem.add(newPower);
                  
                  unlocked[1] = true;
                  unlockScreen = 1;
                  cTile.trigger = pushInt(cTile.trigger,0);
                  cTile.trigger = delNum(cTile.trigger,15);
                  cTile.ID = 0;
                }
              }
              //Poder elemental Agua
              if(cTile.hasTrigger(16)){
                double pOffset = 5;
              	if(intersectRR(e.pos.x+pOffset,e.pos.y+pOffset,e.width-pOffset*2,e.height-pOffset*2,xT,yT,TileSize,TileSize)){
                  newPower.x = xT+TileSize/2;
                  newPower.y = yT+TileSize/2;
                  globalParticleSystem.add(newPower);
                  
                  unlocked[2] = true;
                  unlockScreen = 2;
                  cTile.trigger = pushInt(cTile.trigger,0);
                  cTile.trigger = delNum(cTile.trigger,16);
                  cTile.ID = 0;
                }
              }
              //Poder elemental Fuego
              if(cTile.hasTrigger(17)){
                double pOffset = 5;
              	if(intersectRR(e.pos.x+pOffset,e.pos.y+pOffset,e.width-pOffset*2,e.height-pOffset*2,xT,yT,TileSize,TileSize)){
                  newPower.x = xT+TileSize/2;
                  newPower.y = yT+TileSize/2;
                  globalParticleSystem.add(newPower);
                  
                  unlocked[3] = true;
                  unlockScreen = 3;
                  cTile.trigger = pushInt(cTile.trigger,0);
                  cTile.trigger = delNum(cTile.trigger,17);
                  cTile.ID = 0;
                }
              }
              //Poder elemental Viento
              if(cTile.hasTrigger(18)){
                double pOffset = 5;
              	if(intersectRR(e.pos.x+pOffset,e.pos.y+pOffset,e.width-pOffset*2,e.height-pOffset*2,xT,yT,TileSize,TileSize)){
                  newPower.x = xT+TileSize/2;
                  newPower.y = yT+TileSize/2;
                  globalParticleSystem.add(newPower);
                  
                  unlocked[4] = true;
                  unlockScreen = 4;
                  cTile.trigger = pushInt(cTile.trigger,0);
                  cTile.trigger = delNum(cTile.trigger,18);
                  cTile.ID = 0;
                }
              }
              //Hielo
              if(cTile.hasTrigger(23)){
                double pOffset = 0;
              	if(intersectRR(e.pos.x+pOffset,e.pos.y+pOffset,e.width-pOffset*2,e.height-pOffset*2,xT,yT,TileSize,TileSize)){
                	inIce = true;
                }
              }
              //Magma
              if(cTile.hasTrigger(24)){
                double pOffset = 0;
              	if(intersectRR(e.pos.x+pOffset,e.pos.y+pOffset,e.width-pOffset*2,e.height-pOffset*2,xT,yT,TileSize,TileSize)){
                  damage(1);
                }
              }
            }
          }
        }
      }
    }
  }
}

class bt{
  vector pos; 
  double width;
  double height; 
  int ID;
  
  String tx;
  int txSize;
  
  int subMenu = 0;
  
  boolean hover;
  boolean click;
  
  bt(int ID, double x, double y, double width, double height){
    pos = new vector(x,y);
    this.width = width;
    this.height = height;
    tx = "";
    txSize = 10;
    hover = false;
    click = false;
    this.ID = ID;
  }
  
  public void update(){
    hover = false;
    click = false;
    if(intersectPR(pos.x,pos.y,width,height,mouseX,mouseY)){
      hover = true;
      if(mousePressed){
        mousePressed = false;
        click = true;
      }
    }
  }
  
  public void render(){
    fill(0,0,0);
    stroke(0,0,0);
    rect(-10,-10,1,1);
    image("https://1.bp.blogspot.com/-p3fmcPEWL5Q/YDQIuwHoYSI/AAAAAAAADwU/CkU2JeWE58oWKMwR10sBvn1YUpmnC3yCQCLcBGAsYHQ/s0/simplebutton.png",pos.x,pos.y,width,height);
    
    switch(ID){
      case 3:
      	image("https://1.bp.blogspot.com/-mIgSuZlawCc/YGMlTBck9dI/AAAAAAAAECw/Pya9O9YQnOoZxPj3X_LPYXXCNGNit1YBgCLcBGAsYHQ/s0/right.png",pos.x,pos.y,width,height);
      break
      case 4:
      	image("https://1.bp.blogspot.com/-3HEPVHy1VT4/YDwcclbqEsI/AAAAAAAADxE/DK6MidcUtDAkhgMKA5eOleC22dIr8m4PQCLcBGAsYHQ/s0/back.png",pos.x,pos.y,width,height);
      break
      case 5:
      	image("https://1.bp.blogspot.com/-puFJ5-bQJ9k/YDwkzARSl_I/AAAAAAAADxo/UaAGOqfLe8s5CBRIYvA9ngcUUuaZ2Xw9gCLcBGAsYHQ/s0/tileBt.png",pos.x,pos.y,width,height);
      break
      case 6:
      	image("https://1.bp.blogspot.com/-5M7DkmjJRKs/YE1U3-OxTMI/AAAAAAAAD3U/M9acl4O43BcAiUURHSC4CLmrueVjzmORACLcBGAsYHQ/s0/enemBt.png",pos.x,pos.y,width,height);
      break
      case 7:
      	image("https://1.bp.blogspot.com/-AzrT0BBRrTo/YE1U3wf8ZFI/AAAAAAAAD3Y/lWL3j07BBxMmi52uriyCEc50hiGES7abwCLcBGAsYHQ/s0/noEnemBT.png",pos.x,pos.y,width,height);
      break
      case 8:
      	image("https://1.bp.blogspot.com/-52xCf3jmdQ4/YDwky29e8eI/AAAAAAAADxk/mjh-LMgFPCMu-QQGa1uUF-h57QvzgfrTwCLcBGAsYHQ/s0/settingBt.png",pos.x,pos.y,width,height);
      break
      case 9:
      	image("https://1.bp.blogspot.com/-hLlFnRverIU/YDwkxyHBXiI/AAAAAAAADxY/QHT1eqMLrn0KZQz_FwRq19FiccwGRQs0wCLcBGAsYHQ/s0/playBt.png",pos.x,pos.y,width,height);
      break
      case 10:
      	image("https://1.bp.blogspot.com/-V3WaCaspwGM/YDwkxwS0q2I/AAAAAAAADxc/mxqW_7Ge3zgGDN2-kto2hwSnToBHoInNACLcBGAsYHQ/s0/saveBt.png",pos.x,pos.y,width,height);
      break
      case 11:
      	image("https://1.bp.blogspot.com/-pIuYbI5eTY4/YDwccinlcSI/AAAAAAAADxA/D_UkLoSiSoof_0ZlaE5E3PIFjADBv1ZDwCLcBGAsYHQ/s0/center.png",pos.x,pos.y,width,height);
      break
      case 12: 
      	image("https://1.bp.blogspot.com/-lUY6fvtL42w/YDwkx0yGHcI/AAAAAAAADxg/eqEwrQ-JHU8fCDjey-556s9GzTsjIxs_QCLcBGAsYHQ/s0/bgBt.png",pos.x,pos.y,width,height);
      break
      //flechas arriba y abajo
      case 13:
      	image("https://1.bp.blogspot.com/-mstrATVSZmk/YDwcdaS_FyI/AAAAAAAADxM/7Nj3wnZg1kgSa2vdJpx-uPQADKuT9Pj9QCLcBGAsYHQ/s0/upBt.png",pos.x,pos.y,width,height);
      break
      case 14:
      	image("https://1.bp.blogspot.com/-btDYdOTuwhU/YDwccsRgvjI/AAAAAAAADxI/7oHm6J3RK4sm6PCpeZ1VGCfkF4M0pMBDACLcBGAsYHQ/s0/downBt.png",pos.x,pos.y,width,height);
      break
      //fondos 1-4
      case 15:
      	image("https://1.bp.blogspot.com/-7w4XjMu6iGg/YCmBxCZ86PI/AAAAAAAADsw/koOQ1nEQ_acMlfTX2K99MhYDb3Z3W2TKQCLcBGAsYHQ/s0/bg1.png",pos.x,pos.y,width,height);
      break
      case 16:
      	image("https://1.bp.blogspot.com/-XSBh2Zw8E4Y/YFen3GMHmzI/AAAAAAAAEAU/7es4Ljv2IP8ijycLMrtXVomWsdezkTkhQCLcBGAsYHQ/s0/bg2.png",pos.x,pos.y,width,height);
      break
      case 17:
      	image("https://1.bp.blogspot.com/-PAq1JSA_iEs/YFe0Q2QnQKI/AAAAAAAAEA0/PaTKZrMcqwYBdvDvN51L5F5FIGKDJ9bfgCLcBGAsYHQ/s0/bg3.png",pos.x,pos.y,width,height);
      break
      case 18:
      	image("https://1.bp.blogspot.com/-cFtllPFMP1c/YGDaI57DO7I/AAAAAAAAECM/G9YbJrysqHgCOAHNIerSV9eNlFg9fPe3ACLcBGAsYHQ/s0/bg4.png",pos.x,pos.y,width,height);
      break//mas bgs
      case 19:
      	image("https://1.bp.blogspot.com/-1Ybuq74ubwc/YGZMqHzpI5I/AAAAAAAAEHQ/4kizYAQOTb4dyjrZqcBEMc853E9GU6CyACLcBGAsYHQ/s0/bg5.png",pos.x,pos.y,width,height);
      break
      case 20:
      	image("https://1.bp.blogspot.com/-tzTgfzG7isM/YGZMreXmQ0I/AAAAAAAAEHk/SsKOpbSYAzY6UedoQR9ImF80Bc4YxOgTgCLcBGAsYHQ/s0/bg6.png",pos.x,pos.y,width,height);
      break
      case 21:
      	image("https://1.bp.blogspot.com/-kAhh0rXSg7k/YGZMsIU7elI/AAAAAAAAEH4/e4cHsBTtcbQzmD2gHWNwswzHrbW4WfijgCLcBGAsYHQ/s0/bg7.png",pos.x,pos.y,width,height);
      break
      case 22:
      	image("https://1.bp.blogspot.com/-4ZiumUi1KjE/YG3jWC2OdSI/AAAAAAAAEN4/qXzJoEmFxdQ4J70Za-8GVG3zKust3IrPACLcBGAsYHQ/s0/bg8.png",pos.x,pos.y,width,height);
      break
      case 23:
      	image("https://1.bp.blogspot.com/-vkRhrcRAu68/YHM8yT5Hb6I/AAAAAAAAESg/MtiaKBuYBVAt-k3A7wl4tkEB22yepGREACLcBGAsYHQ/s0/bg9.png",pos.x,pos.y,width,height);
      break
      case 24:
      	image("https://1.bp.blogspot.com/-9WoYajZ2Xwk/YHM8xqdqtEI/AAAAAAAAESM/rT6yRjCRhkgP9XUAtnyViAhxXC8_MT0ZACLcBGAsYHQ/s0/bg10.png",pos.x,pos.y,width,height);
      break
      case 101://Miniaturas de niveles extra	
      	image("https://1.bp.blogspot.com/-CCTUVXXfje0/YGNiHsU5ahI/AAAAAAAAEC8/NBE0LMM1h94CqtxJ5PC6q8zk1RVIjwkcACLcBGAsYHQ/s320/extra1.png",pos.x,pos.y,width,height);
      break
      case 102:
      	image("https://1.bp.blogspot.com/-iCKZhF4hGi4/YGNiHpxqQ4I/AAAAAAAAEC4/X4jGSfs_-nQJhp8pVUrTyWYAK3Z7Kl1lACLcBGAsYHQ/s320/extra2.png",pos.x,pos.y,width,height);      	
      break
      case 103:
      	image("https://1.bp.blogspot.com/-C9jXRfW6X5w/YGxhmEXJlZI/AAAAAAAAELo/C9hjbuyScp0eSsS1ocgxwxbeJOTHYo6RACLcBGAsYHQ/s320/extra3.png",pos.x,pos.y,width,height);          
      break
    	case 104:
      	image("https://1.bp.blogspot.com/-g2wNk9c5yzs/YG3uDuH7kWI/AAAAAAAAEPg/weoszFtTwBMxHNHSY39j62veGJ8EhLeHgCLcBGAsYHQ/s320/extra4.png",pos.x,pos.y,width,height);          
      break
      case 105:
      	image("https://1.bp.blogspot.com/-stxbllQOk2E/YHXxmidt8eI/AAAAAAAAETk/54Gkf5a_QUQPoYpBuVLhNa8S9w5n7-TqQCLcBGAsYHQ/s320/extra5.png",pos.x,pos.y,width,height);          
      break
        
    }
    if(ID > 100){
      stroke(140,64,70);
     	noFill();
     	strokeWeight(3);
     	rect(pos.x,pos.y,width,height);
     	strokeWeight(1);
    }
    double factorX = width/80;
    double factorY = height/30;
    if(ID >= 15){
      factorX = 0;
      factorY = 0;
    }
    if(hover){
      fill(0,0,0,0.26);
      stroke(0,0,0,0.26);
    	rect(pos.x+3*factorX,pos.y+2*factorY,width-6*factorX,height-4*factorY);
    }
    if(click){
      fill(0,0,0,0.26);
      stroke(0,0,0,0.26);
    	rect(pos.x+3*factorX,pos.y+3*factorY,width-6*factorX,height-6*factorY);
    }
    fill(255);
    stroke(255);
    rect(-10,-10,1,1);
    if(tx != ""){
      textSize(txSize);
      fill(255,255,255);
      text(tx,pos.x+width/2-textWidth(tx)/2,pos.y+height/2+txSize/2);
    }
  }
}

int enterNum(){
  int num = -2;
  if(keyPressed){
    keyPressed = false;
    switch(key){
      case "0": num = 0; break
      case "1": num = 1; break
      case "2": num = 2; break
      case "3": num = 3; break
      case "4": num = 4; break
      case "5": num = 5; break
      case "6": num = 6; break
      case "7": num = 7; break
      case "8": num = 8; break
      case "9": num = 9; break
      case "Enter": num = -1; break
      //case ".": num = -3; break
      //case "-": num = -4; break
    }
  }
  return num;
}

boolean searchChar(String a, char b){
  boolean found = false;
  char[] strArr = stringToCharArray(a);
  for(int i = 0; i < strArr.length; i++){
    if(strArr[i] == b){
      found = true;
    }
  }
  return found;
}

class sel{
  int ID; 
  double x; 
  double y; 
  double width;
  double height; 
  
  double value;
  double minValue; 
  double maxValue;
  
  double enteredNum; 
  int count = 10; 
  boolean decimal = false;
  boolean negative = false;
  
  boolean boolValue;
  
  int dropValue;
  double dropDownX;
  String[] dropNames;
  boolean dropped = false;
  
  double renderedHue = 0;
  
  boolean centered = false;
  String tx = "";
  int txSize = 8;
  
  String tooltip = "";
  
  sel(int ID,double x,double y,double width,double height){
    this.ID = ID;
    this.x = x;
    this.y = y;
    this.width = width;
    this.height = height;    
    this.dropDownX = x+width-height;
    
    if(ID == 4){
      this.minValue = 0;
      this.maxValue = 360;
    }else if(ID == 5){
      this.minValue = 0;
      this.maxValue = 1;
    }else if(ID == 6){
      this.minValue = 0;
      this.maxValue = 1;
    }
  }
  
  public void renderText(){
    textSize(txSize);
    fill(255);
    String renderedValue = roundTo(value,0)+"";
    if(enteredNum > 0){
      renderedValue = roundTo(enteredNum,0)+"";
      if(decimal && !searchChar(renderedValue,'.')){
      	renderedValue += ".";
      }
    }
    double offset = 3;
    
    if(centered){
      text(renderedValue,x+width/2-textWidth(renderedValue)/2,y+height/2+txSize/2);
    }else{
      if(ID == 6){
        fill(255);
      }
      text(tx,x+offset,y+height/2+txSize/2);
      if(ID == 6){
        fill(0);
      }
      text(renderedValue,x+width-textWidth(renderedValue)-offset,y+height/2+txSize/2);
    }
    
  }
  
  public void render(){
    switch(ID){
      case 1:
      	fill(mainColorRGB[0],mainColorRGB[1],mainColorRGB[2]);
      	stroke(secColorRGB[0],secColorRGB[1],secColorRGB[2]);
      	image("https://1.bp.blogspot.com/-p3fmcPEWL5Q/YDQIuwHoYSI/AAAAAAAADwU/CkU2JeWE58oWKMwR10sBvn1YUpmnC3yCQCLcBGAsYHQ/s0/simplebutton.png",x,y,width,height);
      	fill(0,0,0,0.25);
      	noStroke();
      	rect(x,y,map(value,minValue,maxValue,0,width),height);
      	renderText();
      break
      case 2:
      	fill(mainColorRGB[0],mainColorRGB[1],mainColorRGB[2]);
      	stroke(secColorRGB[0],secColorRGB[1],secColorRGB[2]);
      	image("https://1.bp.blogspot.com/-8XqunRgTm-E/YFOD0keQZBI/AAAAAAAAD34/tAbbmr55TM0OjIj0EgSoQ0l5WJifPySiQCLcBGAsYHQ/s0/tickBt.png",x,y,width,height);
      	if(boolValue){
          strokeWeight(1);
          double offset = 5;
          line(x+offset,y+offset,x+width-offset,y+height-offset);
          line(x+offset,y+height-offset,x+width-offset,y+offset);
        }
      break
      case 3:
      	fill(mainColorRGB[0],mainColorRGB[1],mainColorRGB[2]);
      	stroke(secColorRGB[0],secColorRGB[1],secColorRGB[2]);
      	rect(x,y,width,height);
      	double offset = 4;
      
      	rect(dropDownX,y,height,height);
      	textSize(txSize);
      	fill(0);
      	text(dropNames[dropValue],x+2,y+height/2+txSize/2);
      
      	if(dropped){
          fill(mainColorRGB[0],mainColorRGB[1],mainColorRGB[2]);
          rect(x,y+height,width,height*dropNames.length);
          for(int i = 0; i < dropNames.length; i++){
            if(i == dropValue){
              fill(0,0,0,0.5);
              noStroke();
              rect(x+1,y+height*(i+1),width-2,height);
              stroke(secColorRGB[0],secColorRGB[1],secColorRGB[2]);
            }
            fill(0);
            text(dropNames[i],x+2,y+height/2+txSize/2+height*(i+1));
          }
        }
      
  			fill(secColorRGB[0],secColorRGB[1],secColorRGB[2]);
      	triangle(dropDownX+offset,y+offset,dropDownX+height-offset,y+offset,dropDownX+height/2,y+height-offset);
      break
      case 4:
      	stroke(secColorRGB[0],secColorRGB[1],secColorRGB[2]);
      	rect(x,y,width,height);
      	for(int i = 1; i < width; i++){
          int[] c = fromHSLtoRGB(map(i,0,width,0,360),1,0.5);
          stroke(c[0],c[1],c[2]);
          line(x+i,y+1,x+i,y+height-1);
        }
      	stroke(0);
      	noFill();
      	rect(map(value,minValue,maxValue,x,x+width),y,2,height);
      	renderText();
      break
      case 5:
      	stroke(secColorRGB[0],secColorRGB[1],secColorRGB[2]);
      	rect(x,y,width,height);
      	for(int i = 1; i < width; i++){
          int[] c = fromHSLtoRGB(renderedHue,map(i,1,width,0,1),0.5);
          stroke(c[0],c[1],c[2]);
          line(x+i,y+1,x+i,y+height-1);
        }
      	stroke(0);
      	noFill();
      	rect(map(value,minValue,maxValue,x,x+width),y,2,height);
      	renderText();
      break
      case 6:
      	stroke(secColorRGB[0],secColorRGB[1],secColorRGB[2]);
      	rect(x,y,width,height);
      	for(int i = 1; i < width; i++){
          int[] c = fromHSLtoRGB(0,0,map(i,1,width,0,1));
          stroke(c[0],c[1],c[2]);
          line(x+i,y+1,x+i,y+height-1);
        }
      	stroke(0);
      	noFill();
      	rect(map(value,minValue,maxValue,x,x+width),y,2,height);
      	renderText();
      break
    }
  }
  
  public boolean collideMouse(){
    boolean collision = false;
    if(intersectPR(x,y,width,height,mouseX,mouseY)){
      collision = true;
    }
    return collision
  }
  
  public double getValue(){
    switch(ID){
      default:
      	if(collideMouse() && !mousePressed){
          int singleNum = enterNum();
          if(singleNum >= 0){
            if(decimal){
              double decimalSingleNum = singleNum;
              if(negative){
                enteredNum -= decimalSingleNum/count;
              }else{
                enteredNum += decimalSingleNum/count;
              }
              count *= 10;
            }else{
              enteredNum *= 10;
              if(negative){
                enteredNum -= singleNum;
              }else{
                enteredNum += singleNum;
              }
            }
          }
          if(singleNum == -3){
            decimal = true;
          }
          if(singleNum == -4){
            negative = true;
          }
          if(singleNum == -1){
            if(enteredNum <= maxValue && enteredNum >= minValue){
              value = enteredNum;
            }
            enteredNum = 0;
            decimal = false;
            negative = false;
            count = 10;
          }
        }
        if(collideMouse() && mousePressed && enteredNum <= 0){
          value = map(mouseX-x,0,width,minValue,maxValue);
        }
      break
    }
    return value
  }
  
  public boolean getBoolValue(){
    if(collideMouse() && mousePressed){
      mousePressed = false;
      boolValue = !boolValue;
    }
    return boolValue
  }
  
  public boolean collideMouseDrop(){
    boolean collision = false;
    if(intersectPR(dropDownX,y,height,height,mouseX,mouseY)){
      collision = true;
    }
    return collision
  }
  
  public int getDropValue(){
    if(collideMouseDrop() && mousePressed){
      mousePressed = false;
      dropped = !dropped;
    }
    if(dropped){
      for(int i = 0; i < dropNames.length; i++){
        if(intersectPR(x,y+height*(i+1),width,height,mouseX,mouseY) && mousePressed){
          mousePressed = false;
          dropValue = i;
        }
      }
    }
    return dropValue
  }
}

class nodeMap{
  vector[] pos;
  vector[] dir;
  nodeMap(double[][] coords){
    pos = new vector[coords.length];
    dir = new vector[coords.length-1];
    
    for(int i = 0; i < coords.length; i++){
      pos[i] = new vector(coords[i][0],coords[i][1]);
      if(i < coords.length-1){
        double x = coords[i][0]-coords[i+1][0];
        double y = coords[i][1]-coords[i+1][1];
        dir[i] = normalize(new vector(x,y));
      }
    }
  }
  
  public void render(){
    for(int i = 0; i < pos.length; i++){
      fill(149,149,149);
      stroke(0,0,0);
      ellipse(pos[i].x+mapCamera.x,pos[i].y+mapCamera.y,2,2);
      if(i < pos.length-1){
        line(pos[i].x+mapCamera.x,pos[i].y+mapCamera.y,pos[i+1].x+mapCamera.x,pos[i+1].y+mapCamera.y);
      }
    }
  }
}

class mapAvatar{
  int ID;
  int aniState;
  vector pos;
  double width;
  double height;
  
  animation idle;
  animation walkLeft;
  animation walkRight;
  
  mapAvatar(int ID, double x, double y, double width, double height){
    this.ID = ID;
    pos = new vector(x,y);
    this.width = width;
    this.height = height;
		aniState = 0;
  }
  
  public void render(){
    switch(aniState){
      case 0:
      	idle.render(pos.x,pos.y,width,height);
      break
      case 1:
      	walkLeft.render(pos.x,pos.y,width,height);
      break
     	case 2:
      	walkRight.render(pos.x,pos.y,width,height);
      break
    }
  }
}

class transition{
  int ID;
  boolean active = false;
  boolean mid = false;
  int changeVar;
  int timer = 0;
  int lenT = 30;
  transition(int ID){
    this.ID = ID;
    switch(ID){
    	case 0://UI
      	lenT = 30;
      break
      case 1://VOLVER MAPA
      	lenT = 30;
      break
      case 2://JUGAR NIVEL
      	lenT = 30;
      break
      case 3://GANAR NIVEL
      	lenT = 30;
      break
    }
  }
  
  public void render(){
    if(active){
      timer++;
      //double factor = map(timer,0,lenT/2,0,160);
      //double factor2 = map(timer,lenT/2,lenT,160,0);
      fill(0);
      stroke(0);
      switch(ID){
        case 0://UI
        	double factor = map(timer,0,lenT,0,640);
        	rect(-320+factor,0,320,40);
          rect(320-factor,40,320,40);
          rect(-320+factor,80,320,40);
          rect(320-factor,120,320,40);
          rect(-320+factor,160,320,40);
          rect(320-factor,200,320,40);
          rect(-320+factor,240,320,40);
          rect(320-factor,280,320,40);
        break
        case 1://VOLVER MAPA
        	double factor2 = map(timer,0,lenT/2,0.001,0.999);
        	double factor3 = map(timer,lenT/2,lenT+1,0.999,0.01);
        	if(timer < lenT/2){
            fill(0,0,0,factor2);
          }else{
            fill(0,0,0,factor3);
          }        	
       		rect(-1,-1,320,320);
        
        break
        case 2://JUGAR NIVEL
        	double factor4 = map(timer,0,lenT/2,0,200);
        	double factor5 = map(timer,lenT/2,lenT+1,0,320);
       		fill(0,0,0);
        	if(timer < lenT/2){
            rect(-200+factor4,0,140,320);
            triangle(-60+factor4,0,-60+factor4,320,factor4,0);
            rect(380-factor4,0,140,320);
            triangle(380-factor4,0,380-factor4,320,320-factor4,320);
          }else{
            rect(0,0-factor5,140,320);
            triangle(140,0-factor5,140,320-factor5,200,0-factor5);
            rect(180,0+factor5,140,320);
            triangle(180,0+factor5,180,320+factor5,120,320+factor5);
          }        	
        break
        case 3://GANAR NIVEL
        	int factor6 = round(map(timer,0,lenT/2,0,64));
        	int factor7 = round(map(timer,lenT/2,lenT,64,0));
        	for(int i = 0; i < 5; i++){
            for(int j = 0; j < 5; j++){
              if(timer < lenT/2){
                rect(32+i*64-factor6/2,32+j*64-factor6/2,factor6,factor6);
              }else{
                rect(32+i*64-factor7/2,32+j*64-factor7/2,factor7,factor7);
              }
            	
          	}
          }
        break
      }
      fill(0,0,0);
      rect(-10,-10,1,1);
      /*if(timer > lenT/2){
        //rect(160-factor2,160-factor2,1+factor2*2,1+factor2*2);
      }else{
        //rect(160-factor,160-factor,1+factor*2,1+factor*2);
        
      }*/
      
      
    }
    if(timer == lenT/2){
      mid = true;
    }
    if(timer > lenT){
      timer = 0;
      active = false;
    }
  }
}

class particle{
  int type;
  double x;
  double y;
  double cameraX;
  vector truePos;
  double width = 1;
  double height = 1;
  int[] color = {0,0,0};
  int ID = 0;
  int timer = 0;
  int lifeLen;
  double alphaVar = 0;
  double alpha = 0.99;
  boolean gravity = false;
  
  vector acc;
  vector vel;
  
  animation ani1;
  animation ani2;
  
  particle(int type, double x, double y, int lifeLen, int angle, double mod){
    this.type = type;
    this.x = x;
    this.y = y;
    this.cameraX = camera.x;
    this.lifeLen = lifeLen;
    
    truePos = new vector(0,0);
    acc = new vector(0,0);
    vel = fromPolar(angle,mod);
    
    ani1 = new animation(17,3,4);
    ani2 = new animation(18,3,4);
  }
  
  public void update(){
    timer++;
    if(gravity){
      acc.add(new vector(0,0.3));
    }
    vel.add(acc);
    acc.equal(0,0);
    x += vel.x;
    y += vel.y;
    
    truePos.x = camera.x-cameraX + x;
    truePos.y = camera.y + y;
    
    if(alpha <= 0){
      alpha = 0.01;
    }
  }
  
  public void render(){
    fill(color[0],color[1],color[2],alpha);
    stroke(color[0],color[1],color[2],alpha);
    switch(type){
      case 0:
      	point(truePos.x,truePos.y);
      break
      case 1:
      	ellipse(truePos.x,truePos.y,width,height);
      break
      case 2:
      	switch(ID){
          case 0:
          	image("https://1.bp.blogspot.com/-AJtikHtXr9o/YFDpXH-giFI/AAAAAAAAD3k/x1Tot2ZLx800Y76hq24xBZIP5spteVPWgCLcBGAsYHQ/s0/rockBolt.png",
                 truePos.x,truePos.y,width,height);
          break
          case 1:
          	ani1.render(truePos.x,truePos.y,width,height);
          break
          case 2:
          	ani2.render(truePos.x,truePos.y,width,height);
          break
          case 3:
          	image("https://1.bp.blogspot.com/-3t90wDoItXM/YFcmCnwUTGI/AAAAAAAAD_0/fsWffWzvn_kiyBMEhv4K-qfUwZK0hGSoQCLcBGAsYHQ/s0/woodChunk.png",
                 truePos.x,truePos.y,width,height);
          break
          case 4:
          	image("https://1.bp.blogspot.com/-yD-y6Fr1qZY/YGW0YO5Y2nI/AAAAAAAAEG0/A4V_zOfWy8oBrUpuTPHrieSjHH9fOvnTQCLcBGAsYHQ/s10/sandChunk.png",
                 truePos.x,truePos.y,width,height);
          break
          case 5:
          	image("https://1.bp.blogspot.com/-IgnczBi_yOk/YGW0YB30g8I/AAAAAAAAEG4/oREchk2jGcMJqi8XFnux6Pw0zLgMc_HDACLcBGAsYHQ/s0/iceChunk.png",
                 truePos.x,truePos.y,width,height);
          break
          case 6:
          	image("https://1.bp.blogspot.com/-mpKq3uT5_VI/YG3mnl4Gz7I/AAAAAAAAEPM/C_kO9AmafN4-Jh9yB3wC2pC8Kz1Igd_KACLcBGAsYHQ/s0/obsidianChunk.png",
                 truePos.x,truePos.y,width,height);
          break
          case 7:
          	image("https://1.bp.blogspot.com/-dujuJJO9AqU/YG3mnsEsfcI/AAAAAAAAEPQ/qglq46kmkSAfT4QEJ80l1ug6mO12CG5FwCLcBGAsYHQ/s10/basaltChunk.png",
                 truePos.x,truePos.y,width,height);
          break
          case 8:
          	image("https://1.bp.blogspot.com/-fV8o23Qg1T4/YG3mndPic4I/AAAAAAAAEPI/FmbAl3aHeFIii7uFKeIiu8--bPF_BTrrACLcBGAsYHQ/s0/brickChunk.png",
                 truePos.x,truePos.y,width,height);
          break
        	case 9:
          	image("https://1.bp.blogspot.com/-jskE9eQY9Kk/YHM8ae_w9HI/AAAAAAAAERc/MEWhf7_hf_cIcqOLMvzc2JwEZrJHZn8WwCLcBGAsYHQ/s0/skyChunk.png",
                 truePos.x,truePos.y,width,height);
          break
        }
      break
    }
    fill(0,0,0);
    stroke(0,0,0);
    rect(-10,-10,1,1);
  }
}

class emitter{
  particle[] arr;
  double x;
  double y;
  double cameraX;
  vector truePos;
  
  int type = 0;
  int lifeLen = 40;
  
  int timer = 0;
  int maxLife;
  
  int[] color = {0,0,0};
  int minAngle = 0;
  int maxAngle = 360;
  double minMod = 1;
  double maxMod = 1;
  double width = 1;
  double height = 1;
  double maxSize = 0;
  double sizeVar = 0;
  double alphaVar = 0;
  double alpha = 0.99;
  int ID = 0;
  boolean hijackPos = false;
  boolean gravity = false;
  
  int spawnRate = 1;
  int spawnTimer = 0;
  int spawnLen = 0;
  int maxSpawnLife = 0;
  
  emitter(double x, double y, int maxLife){
    arr = new particle[0];
  	this.x = x;
    this.y = y;    
    this.cameraX = camera.x;
    truePos = new vector(0,0);
    this.maxLife = maxLife;
    maxSpawnLife = maxLife;
  }
  
  public void add(){
    particle[] aux = arr;
    arr = new particle[aux.length+1];
    for(int i = 0; i < aux.length; i++){
      arr[i] = aux[i];
    }
    arr[aux.length] = new particle(type,truePos.x,truePos.y,lifeLen,round(random(minAngle,maxAngle)),random(minMod,maxMod));
    arr[aux.length].color = color;
    arr[aux.length].ID = ID;
    arr[aux.length].width = width;
    arr[aux.length].height = height;
    arr[aux.length].alphaVar = alphaVar;
    arr[aux.length].alpha = alpha;
    arr[aux.length].gravity = gravity;
    if(maxSize != 0.0){
      double size = random(width,maxSize);
      arr[aux.length].width = size;
      arr[aux.length].height = size;
    }
  }
  
  public void del(int index){
    particle[] aux = arr;
    arr = new particle[aux.length-1];
    int n;
    for(int i = 0; i < aux.length; i++){
      if(i != index){
        arr[n] = aux[i]; 
        n++;
      }
    }
  }
  
  public void update(){
    timer++;
    spawnTimer++;
    
    if(!hijackPos){
      truePos.x = camera.x-cameraX + x;
    	truePos.y = camera.y + y;
    }
    
    
    if(spawnTimer >= spawnLen && (timer < maxSpawnLife || maxLife == 0)){
      spawnTimer = 0;
      for(int i = 0; i < spawnRate; i++){
        add();
      }
    }
    
    for(int i = 0; i < arr.length; i++){
      if(arr[i].timer >= arr[i].lifeLen){
        del(i);
      }
    }
    for(int i = 0; i < arr.length; i++){
      arr[i].width += sizeVar;
      arr[i].height += sizeVar;
      
      arr[i].alpha -= alphaVar;
      
      arr[i].update();
    }
  }
  
  public void render(){
    for(int i = 0; i < arr.length; i++){
      arr[i].render();
    }
  }
}

class particleSystem{
  emitter[] arr;
  
  particleSystem(){
    arr = new emitter[0];
  }
  
  public void add(emitter template){
    emitter[] aux = arr;
    arr = new emitter[aux.length+1];
    for(int i = 0; i < aux.length; i++){
      arr[i] = aux[i];
    }
    arr[aux.length] = new emitter(template.x,template.y,template.maxLife);
    arr[aux.length].type = template.type;
    arr[aux.length].lifeLen = template.lifeLen;
    arr[aux.length].color = template.color;
    arr[aux.length].minMod = template.minMod;
    arr[aux.length].maxMod = template.maxMod;
    arr[aux.length].minAngle = template.minAngle;
    arr[aux.length].maxAngle = template.maxAngle;
    arr[aux.length].width = template.width;
    arr[aux.length].height = template.height;
    arr[aux.length].maxSize = template.maxSize;
    arr[aux.length].sizeVar = template.sizeVar;
    arr[aux.length].spawnRate = template.spawnRate;
    arr[aux.length].spawnLen = template.spawnLen;
    arr[aux.length].spawnTimer = template.spawnTimer;
    arr[aux.length].alphaVar = template.alphaVar;
    arr[aux.length].alpha = template.alpha;
    arr[aux.length].ID = template.ID;
    arr[aux.length].hijackPos = template.hijackPos;
    arr[aux.length].gravity = template.gravity;
    arr[aux.length].maxSpawnLife = template.maxSpawnLife;
    
  }
  
  public void del(int index){
    emitter[] aux = arr;
    arr = new emitter[aux.length-1];
    int n;
    for(int i = 0; i < aux.length; i++){
      if(i != index){
        arr[n] = aux[i]; 
        n++;
      }
    }
  }
  
  public void update(){
    for(int i = 0; i < arr.length; i++){
      if(arr[i].timer >= arr[i].maxLife){
        del(i);
      }
    }
    for(int i = 0; i < arr.length; i++){
      arr[i].update();
    }
  }
  
  public void render(){
    for(int i = 0; i < arr.length; i++){
      arr[i].render();
    }
  }
}


//FUNCIONES ESPECÍFICAS

//BASE DE DATOS
vector camera = new vector(0,0);

vector editorCamera = new vector(0,0);

vector mapCamera = new vector(0,0);
vector moveMapDir = new vector(0,0);

vector mouse = new vector(0,0);
player curPlayer = new player(0,0,140,18,35);

//particulas
particleSystem globalParticleSystem = new particleSystem();
emitter breakBlock = new emitter(0,0,25);
breakBlock.type = 1;
breakBlock.width = 5;
breakBlock.maxSize = 10;
breakBlock.gravity = true;
breakBlock.alphaVar = -0.01;
breakBlock.spawnLen = 30;
breakBlock.spawnRate = 4;
breakBlock.spawnTimer = 30;
breakBlock.color[0] = 255;
breakBlock.color[1] = 255;
breakBlock.color[2] = 255;

emitter blockHit = new emitter(0,0,15);
blockHit.type = 1;
blockHit.width = 1;
blockHit.height = 1;
blockHit.maxSize = 4;
blockHit.sizeVar = -0.2;
blockHit.spawnLen = 20;
blockHit.spawnRate = 10;
blockHit.spawnTimer = 20;
blockHit.minMod = 0.5;
blockHit.maxMod = 1.5;
blockHit.color[0] = 26;
blockHit.color[1] = 26;
blockHit.color[2] = 26;

emitter drops = new emitter(0,0,15);
drops.type = 1;
drops.width = 1;
drops.height = 1;
drops.maxSize = 4;
drops.sizeVar = -0.2;
drops.spawnLen = 20;
drops.spawnRate = 10;
drops.spawnTimer = 20;
drops.minMod = 0.5;
drops.maxMod = 1.5;
drops.color[0] = 63;
drops.color[1] = 169;
drops.color[2] = 241;

emitter smoke = new emitter(0,0,40);
smoke.type = 1;
smoke.width = 5;
smoke.height = 5;
smoke.maxSize = 25;
smoke.sizeVar = -0.5;
smoke.alphaVar = -0.07;
smoke.alpha = 0.5;
smoke.spawnLen = 50;
smoke.spawnRate = 15;
smoke.spawnTimer = 50;
smoke.minMod = 0.5;
smoke.maxMod = 2.5;
smoke.minAngle = 80;
smoke.maxAngle = 100;
smoke.color[0] = 118;
smoke.color[1] = 118;
smoke.color[2] = 118;

emitter coinSparkle = new emitter(0,0,15);
coinSparkle.type = 1;
coinSparkle.width = 5;
coinSparkle.height = 5;
coinSparkle.sizeVar = -0.2;
coinSparkle.spawnLen = 20;
coinSparkle.spawnRate = 10;
coinSparkle.spawnTimer = 20;
coinSparkle.color[0] = 255;
coinSparkle.color[1] = 230;
coinSparkle.color[2] = 5;

emitter manaPotion = new emitter(0,0,15);
manaPotion.type = 1;
manaPotion.width = 5;
manaPotion.height = 5;
manaPotion.sizeVar = -0.2;
manaPotion.spawnLen = 20;
manaPotion.spawnRate = 10;
manaPotion.spawnTimer = 20;
manaPotion.color[0] = 87;
manaPotion.color[1] = 146;
manaPotion.color[2] = 231;

emitter lifeHeart = new emitter(0,0,15);
lifeHeart.type = 1;
lifeHeart.width = 5;
lifeHeart.height = 5;
lifeHeart.sizeVar = -0.2;
lifeHeart.spawnLen = 20;
lifeHeart.spawnRate = 10;
lifeHeart.spawnTimer = 20;
lifeHeart.color[0] = 255;
lifeHeart.color[1] = 96;
lifeHeart.color[2] = 96;

emitter lifePlus = new emitter(0,0,15);
lifePlus.type = 1;
lifePlus.width = 5;
lifePlus.height = 5;
lifePlus.sizeVar = -0.2;
lifePlus.spawnLen = 20;
lifePlus.spawnRate = 10;
lifePlus.spawnTimer = 20;
lifePlus.color[0] = 93;
lifePlus.color[1] = 247;
lifePlus.color[2] = 105;
  
emitter secretPlus = new emitter(0,0,15);
secretPlus.type = 1;
secretPlus.width = 5;
secretPlus.height = 5;
secretPlus.sizeVar = -0.2;
secretPlus.spawnLen = 20;
secretPlus.spawnRate = 10;
secretPlus.spawnTimer = 20;
secretPlus.color[0] = 255;
secretPlus.color[1] = 255;
secretPlus.color[2] = 255;

emitter newPower = new emitter(0,0,80);
newPower.type = 1;
newPower.width = 2;
newPower.height = 2;
newPower.maxSize = 10;
newPower.sizeVar = -0.2;
newPower.alphaVar = -0.07;
newPower.spawnLen = 5;
newPower.maxSpawnLife = 30;
newPower.spawnRate = 15;
newPower.spawnTimer = 0;
newPower.color[0] = 255;
newPower.color[1] = 255;
newPower.color[2] = 255;

emitter dustJump = new emitter(0,0,11);
dustJump.type = 2;
dustJump.ID = 1;
dustJump.width = 18;
dustJump.height = 18;
dustJump.minMod = 0;
dustJump.maxMod = 0;
dustJump.spawnLen = 40;
dustJump.spawnRate = 1;
dustJump.spawnTimer = 40;

emitter dustLanding = new emitter(0,0,11);
dustLanding.type = 2;
dustLanding.ID = 2;
dustLanding.width = 30;
dustLanding.height = 10;
dustLanding.minMod = 0;
dustLanding.maxMod = 0;
dustLanding.spawnLen = 40;
dustLanding.spawnRate = 1;
dustLanding.spawnTimer = 40;

emitter bloodHit = new emitter(0,0,15);
bloodHit.type = 1;
bloodHit.width = 5;
bloodHit.height = 5;
bloodHit.sizeVar = -0.2;
bloodHit.spawnLen = 20;
bloodHit.spawnRate = 10;
bloodHit.spawnTimer = 20;
bloodHit.minMod = 1;
bloodHit.maxMod = 3;
bloodHit.color[0] = 205;
bloodHit.color[1] = 19;
bloodHit.color[2] = 19;

Stage[] extraStages = new Stage[numExtras];

Stage curStage;

Stage[] allStages = new Stage[numStages];;
boolean[] stageUnlock = new boolean[numStages];

int[][] editorLevel = new int[16][50];

Stage editorStage = new Stage(editorLevel,1,0,-1);
//editorStage = level3;
editorStage.changeCamera(editorCamera);

//animaciones
//int ID, double dur, int nFrames (linea 800)
animation cutScene1 = new animation(0,0,0);
cutScene1.animateOnce = true;

//botones

bt playBT = new bt(0,120,140,80,30);
playBT.tx = "Historia";
bt editorBT = new bt(1,120,180,80,30);
editorBT.tx = "Editor";
bt communityBT = new bt(2,120,220,80,30);
communityBT.tx = "Extras";
bt settingBT = new bt(2,120,260,80,30);
settingBT.tx = "Opciones";
bt returnBT = new bt(4,10,290,20,20);

bt playLvBT = new bt(0,255,5,60,20);
playLvBT.tx = "Jugar";

bt nextLvBT = new bt(0,125,250,70,30);
nextLvBT.tx = "Siguiente";
bt returnToMapBT = new bt(0,130,260,60,20);
returnToMapBT.tx = "Volver";

bt returnLvBT = new bt(0,120,125,80,30);
returnLvBT.tx = "Reanudar";
bt returnMpBT = new bt(0,110,165,100,30);
returnMpBT.tx = "Volver al mapa";

bt centerEdBT = new bt(11,10,260,20,20);
bt itemsEdBT = new bt(5,0,0,40,40);
bt bgEdBT = new bt(12,40,0,40,40);
bt enemiesEdBT = new bt(6,80,0,40,40);
bt delEnemiesEdBT = new bt(7,120,0,40,40);
bt optionsEdBT = new bt(8,160,0,40,40);
bt playEdBT = new bt(9,200,0,40,40);
bt saveEdBT = new bt(10,240,0,40,40);

bt[] bgsEdBT = new bt[10];
bgsEdBT[0] = new bt(15,60,80,80,80);
bgsEdBT[1] = new bt(16,160,80,80,80);
bgsEdBT[2] = new bt(17,60,180,80,80);
bgsEdBT[3] = new bt(18,160,180,80,80);
bgsEdBT[4] = new bt(19,60,80,80,80);
bgsEdBT[5] = new bt(20,160,80,80,80);
bgsEdBT[6] = new bt(21,60,180,80,80);
bgsEdBT[7] = new bt(22,160,180,80,80); 
bgsEdBT[8] = new bt(23,60,80,80,80); 
bgsEdBT[9] = new bt(24,160,80,80,80); 

bt upArrowBgEdBT = new bt(13,250,150,20,20);
bt downArrowBgEdBT = new bt(14,250,170,20,20);

bt earthItemEdBT = new bt(0,40,60,40,20);
earthItemEdBT.tx = "Tierra";

int[] earthTilesIDs = {
1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,
41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,72
};

tile[] earthTiles = new tile[73];
for(int i = 0; i < earthTiles.length; i++){
  earthTiles[i] = new tile(earthTilesIDs[i]);
  earthTiles[i].setup();
}

bt waterItemEdBT = new bt(0,80,60,40,20);
waterItemEdBT.tx = "Agua";

int[] waterTilesIDs = {
74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,
110,111,112,113,114,115,116,117,118,119,120,121,122,123,
};

tile[] waterTiles = new tile[50];
for(int i = 0; i < waterTiles.length; i++){
  waterTiles[i] = new tile(waterTilesIDs[i]);
  waterTiles[i].setup();
}

bt fireItemEdBT = new bt(0,120,60,40,20);
fireItemEdBT.tx = "Fuego";

int[] fireTilesIDs = {
124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,
};

tile[] fireTiles = new tile[30];
for(int i = 0; i < fireTiles.length; i++){
  fireTiles[i] = new tile(fireTilesIDs[i]);
  fireTiles[i].setup();
}

bt windItemEdBT = new bt(0,160,60,40,20);
windItemEdBT.tx = "Viento";

int[] windTilesIDs = {
154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,
};

tile[] windTiles = new tile[20];
for(int i = 0; i < windTiles.length; i++){
  windTiles[i] = new tile(windTilesIDs[i]);
  windTiles[i].setup();
}

bt pickupItemEdBT = new bt(0,200,60,40,20);
pickupItemEdBT.tx = "Colec";

//no meter vidas(9005) ni coleccionables (a partir de 9050) ni escudo (9003)
int[] pickupTilesIDs = {
  9001,9002,9004,
};

tile[] pickupTiles = new tile[3];
for(int i = 0; i < pickupTiles.length; i++){
  pickupTiles[i] = new tile(pickupTilesIDs[i]);
  pickupTiles[i].setup();
}

bt miscItemEdBT = new bt(0,240,60,40,20);
miscItemEdBT.tx = "Misc";
//No meter 1011 a 1014, se pueden desbloquear powerUps antes de tiempo entonces
int[] miscTilesIDs = {
  1017,1015,1004,1003,1020,1018,1007,1010,1006,1009,1001,1016,1002,1005,1008,1019,1021,
};
tile[] miscTiles = new tile[17];
for(int i = 0; i < miscTiles.length; i++){
  miscTiles[i] = new tile(miscTilesIDs[i]);
  miscTiles[i].setup();
}

//enemies 
enemy earth1 = new enemy(7,60,100,20,20);
earth1.fixed = true;
enemy earth2 = new enemy(8,85,100,20,20);
earth2.fixed = true;

enemy water1 = new enemy(9,60,100,20,20);
water1.fixed = true;
enemy water2 = new enemy(10,85,100,20,10);
water2.fixed = true;
enemy water3 = new enemy(11,110,100,35,30);
water3.fixed = true;
enemy water4 = new enemy(12,150,100,16,12);
water4.fixed = true;
enemy water5 = new enemy(13,171,100,16,12);
water5.fixed = true;
enemy water6 = new enemy(14,192,100,12,16);
water6.fixed = true;
enemy water7 = new enemy(15,209,100,12,16);
water7.fixed = true;

enemy fire1 = new enemy(18,60,100,10,10);
fire1.fixed = true;
enemy fire2 = new enemy(19,75,100,15,14);
fire2.fixed = true;
enemy fire3 = new enemy(20,95,100,15,15);
fire3.fixed = true;
enemy fire4 = new enemy(21,115,100,20,20);
fire4.fixed = true;

enemy wind1 = new enemy(23,60,100,18,10);
wind1.fixed = true;
enemy wind2 = new enemy(24,83,100,20,20);
wind2.fixed = true;
enemy wind3 = new enemy(25,108,100,21,20);
wind3.fixed = true;

enemy boss1 = new enemy(7,60,100,20,20);
boss1.fixed = true;

enemy misc1 = new enemy(22,60,100,60,60);
misc1.fixed = true;

//botones enemigos
bt earthEnemyEdBT = new bt(0,40,60,40,20);
earthEnemyEdBT.tx = "Tierra";

enemy[] earthEnemies = {earth1,earth2};

bt waterEnemyEdBT = new bt(0,80,60,40,20);
waterEnemyEdBT.tx = "Agua";

enemy[] waterEnemies = {water1,water2,water3,water4,water5,water6,water7};

bt fireEnemyEdBT = new bt(0,120,60,40,20);
fireEnemyEdBT.tx = "Fuego";

enemy[] fireEnemies = {fire1,fire2,fire3,fire4};

bt windEnemyEdBT = new bt(0,160,60,40,20);
windEnemyEdBT.tx = "Viento";

enemy[] windEnemies = {wind1,wind2,wind3};

bt bossEnemyEdBT = new bt(0,200,60,40,20);
bossEnemyEdBT.tx = "Jefe";

enemy[] bossEnemies = {boss1};

bt miscEnemyEdBT = new bt(0,240,60,40,20);
miscEnemyEdBT.tx = "Misc";

enemy[] miscEnemies = {misc1};

//botones opciones
bt gridEdBT = new bt(0,60,80,80,30);
gridEdBT.tx = "Cuadrícula";

bt applyEdBT = new bt(0,150,120,80,30);
applyEdBT.tx = "Aplicar";

sel lvlWidth = new sel(1,60,120,80,30);
lvlWidth.minValue = 32;
lvlWidth.maxValue = 320;

lvlWidth.txSize = 9;
lvlWidth.value = sizeOf(editorStage.layer1.Tiles,2);
lvlWidth.tx = "Anchura";

sel minRadius = new sel(1,60,160,80,30);
minRadius.minValue = 10;
minRadius.maxValue = 320;
minRadius.txSize = 9;
minRadius.value = editorStage.minLight;
minRadius.tx = "Radio L.";

bt lantern = new bt(0,150,160,80,30);
lantern.tx = "Linterna";

//transiciones
transition fromMain = new transition(1);
transition toMain = new transition(1);
transition returnMap = new transition(3);
transition playMap = new transition(0);
transition winMap = new transition(2);

//editor
tile[] tileArr;
enemy[] enemyArr; 

//mapa
double[][] nodes = {
  {160,180},
  {270,150},
  {395,178},
  {507,138},
  {649,186},
  {737,308},
  {832,392},
  {804,470},
  {692,519},
  {566,457},//mitad
  {364,432},
  {219,476},
  {220,582},
  {268,651},
  {226,729},
  {222,841},
  {396,812},
  {522,745},
  {626,791},
  {755,749},
  {832,828},
};
nodeMap mainMap = new nodeMap(nodes);

mapAvatar mainAvatar = new mapAvatar(0,160-9,160-17.5,18,35);
mainAvatar.idle = new animation(10,5,6);
mainAvatar.walkLeft = new animation(12,5,8);
mainAvatar.walkLeft.vel = 2;
mainAvatar.walkRight = new animation(11,5,8);
mainAvatar.walkRight.vel = 2;

String[] levelNames = {
  "Nivel 1-1",
  "Nivel 1-2",
  "Nivel 1-3",
  "Nivel 1-4",
  "Nivel 1-5",
  "Nivel 2-1",
  "Nivel 2-2",
  "Nivel 2-3",
  "Nivel 2-4",
  "Nivel 2-5",
  "Nivel 3-1",
  "Nivel 3-2",
  "Nivel 3-3",
  "Nivel 3-4",
  "Nivel 3-5",
  "Nivel 4-1",
  "Nivel 4-2",
  "Nivel 4-3",
  "Nivel 4-4",
  "Nivel 4-5",
  "Portal a la Tierra",
};

//extras
bt[] extraBT = new bt[5];
extraBT[0] = new bt(101,20,20,80,70);
extraBT[1] = new bt(102,120,20,80,70);
extraBT[2] = new bt(103,220,20,80,70);
extraBT[3] = new bt(104,20,110,80,70);
extraBT[4] = new bt(105,120,110,80,70);
/*extraBT[5] = new bt(106,220,110,80,70);
extraBT[6] = new bt(107,20,200,80,70);
extraBT[7] = new bt(108,120,200,80,70);
extraBT[8] = new bt(109,220,200,80,70);
extraBT[9] = new bt(110,20,20,80,70);
extraBT[10] = new bt(111,120,20,80,70);
extraBT[11] = new bt(112,220,20,80,70);*/

bt upArrowExBT = new bt(4,140,290,20,20);
bt downArrowExBT = new bt(3,160,290,20,20);

//opciones 
sel showFpsBt = new sel(2,20,20,20,20);
lvlWidth.boolValue = showFps;

sel crossBt = new sel(2,20,50,20,20);
crossBt.boolValue = crosshair;

sel godMana = new sel(2,20,80,20,20);
godMana.boolValue = curPlayer.infiniteMana;

sel godHealth = new sel(2,20,110,20,20);
godHealth.boolValue = curPlayer.infiniteHealth;

sel godLife = new sel(2,20,140,20,20);
godLife.boolValue = curPlayer.infiniteLifes;

//UPDATE Y RENDER

void main(){
  image("https://1.bp.blogspot.com/-WXdeLoKw8Jo/YEE3rAlPCoI/AAAAAAAADyM/sXhXjsJr3EE77lAfGfKCYlBEgJPXmhNEQCLcBGAsYHQ/s320/Screenshot1.png",
           -50,-50,370,370);
  stroke(255);
  fill(255);
  rect(60,150,200,20);  
  noFill();
  stroke(0);
  rect(60-1,150-1,200+2,20+2);
  
  animate(setup);
  
  String message = readString("Mira los controles e información del juego abajo");
  println("¡Bienvenido a Elemental Unity, un juego plataformas 2D con innovativas mecánicas! En este juego puedes disfrutar de la historia principal, con 21 divertidos niveles, o de los niveles extras, que pueden ser desafios o guiños a otros juegos. Además puedes construir tus propios niveles en el editor y probarlos, creando tu propia historia.");
  println("");
  println("-CONTROLES-");
  println("");
  println("Para todos los botones del juego y para los poderes se usa el ratón (cualquier botón de este)");
  println("");
  println("A y D para moverte por el nivel");
  println("A y D pegado una pared para deslizarte");
  println("Espacio para saltar");
  println("Espacio pegado a una pared para hacer salto lateral");
  println("Mantener W pulsada para correr");
  println("Q y E para cambiar entre poderes");
  println("S para bucear en el agua");
  println("ESC en un nivel para abrir el menu");
  println("");
  println("Q y E en el editor para hacer zoom in o zoom out");
  println("1, 2, 3 y 4 en el editor para cambiar entre casillas de selección");
  println("");
  println("-PODERES-");
  println("");
  println("A lo largo del juego desbloquearás varios poderes que te ayudaran a progresar en tu aventura. Estos poderes gastan tu barra azul, el mana, y tienen varias funciones que puedes descubrir por ti mismo. Aquí se mostrarán solo las bases de como usarlo. Los poderes te dan mucha libertad, y una vez los domines podrás pasarte cualquier nivel de mil maneras.");
  println("");
  println("-Arcano: Es el primer poder, que ya viene desbloqueado. Para usarlo apunta el ratón a donde quieras y púlsalo. Saldrá una bola arcana que puede destruir algunos bloques o dañar enemigos");
  println("-Tierra: Segundo poder. Para usarlo mantiene el ratón y presionado y arrástralo. Esto creará un rectángulo: si es rojo no es válido, y tienes que probar otras dimensiones, si es verde puedes soltar el ratón y se formará una plataforma");
  println("-Agua: Tercer poder. Tiene una función pasiva y otra activa. La función pasiva se activa al tenerlo seleccionado y te permite respirar bajo el agua indefinidamente. La función activa se usa al presionar el ratón, y crea una corriente de agua con varios usos");
  println("-Fuego: Cuarto poder. Similar al primero, lanza bolas ígneas al pulsar el ratón. Sin embargo, estas bolas se ven afectadas por la gravedad, pueden rebotar y cuestan menos mana");
  println("-Viento: Último poder. Para usarlo pulsa y arrastra el ratón, creando una línea gris de longitud variable. Esta línea te moverá a ti o a los enemigos al colisionar con ellos. Cuanto mayor sea la línea más mana costará y más te impulsará a ti o a los enemigos"); 
  println("");
}

boolean allLoaded = false;
int setupTimer = 0;

void setup(){
  background(255);
  if(allLoaded){
    animate(update);
  }else{
    image("https://1.bp.blogspot.com/-WXdeLoKw8Jo/YEE3rAlPCoI/AAAAAAAADyM/sXhXjsJr3EE77lAfGfKCYlBEgJPXmhNEQCLcBGAsYHQ/s320/Screenshot1.png",
           -50,-50,370,370);
  
    stroke(255);
    fill(255);
    rect(60,150,200,20);
    noFill();
    stroke(0);
    rect(60-1,150-1,200+2,20+2);
		stroke(255);
    
    fill(64,255,28);
    noStroke();
    
    rect(60,150,map(setupTimer,0,(numStages+numExtras-1),0,200),20);
    
    fill(0,0,0);
    textSize(10);
    text(round(map(setupTimer,0,(numStages+numExtras-1),0,100))+"%",65,165);
    fill(255);
    
    if(setupTimer < numStages){
      loadingText = " "+levelNames[setupTimer];
    }else{
      loadingText = " Extra "+(setupTimer-numStages+1);
    }
    
    text("Cargando"+loadingText,160-textWidth("Cargando"+loadingText)/2,195);
    
    textSize(8);
    text("Tip: Si no puedes pasarte algún nivel, mira el menu de opciones",10,310);
    
    switch(setupTimer){
      case 0:
      	int[][] level1w1 = {
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  10,  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  10,  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  10,  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  10,  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  14,   0,   0,  11,  12,  12,  12,  12,  12,  12,  13,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  24,   0,   0,  31,  32,  32,  32,  32,  32,  32,  33,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  10,  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  24,   0,   0,1005,   0,  10,   0,   0,  10,   0,1005,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  10,  10,  10,  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  34,   0,   0,1005,   0,  10,   0,   0,  10,   0,1005,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  11,  12,  12,  12,  12,  12,  12,  12,  12,  12,  13,   0,   0,   0,   0,   0,   0,   0,   0,   0,  10,  10,   0,   0,   0,   0,   0,   0,   0,   0,  10,  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  21,  22,  22,  22,  22,  22,  22,  22,  22,  22,  35,  13,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,  11,  12,  12,  12,  12,  12,  12,  13,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  11,  12,  12,  12,  12,  12,  12,  36,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  35,  13,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1009,   0,   0,},
        {  11,  12,  12,  12,  12,  12,  12,  12,  12,  36,  22,  22,  22,  22,  22,  22,  23,   0,   0,  11,  13,   0,   0,  11,  13,   0,   0,   0,  11,  12,  36,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  35,  12,  12,  12,  13,   0,   0,   1,   2,   2,   3,   0,   0,   1,   3,   0,   0,   1,   2,   2,   3,   0,   0,  11,  12,  12,  12,  12,  12,  13,},
        {  21,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  23,   0,   0,  21,  23,   0,   0,  21,  23,   0,   0,   0,  21,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  23,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  21,  22,  22,  22,  22,  22,  23,},
        {  21,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  23,   0,   0,  21,  23,   0,   0,  21,  23,   0,   0,   0,  21,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  23,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  21,  22,  22,  22,  22,  22,  23,},
        {  31,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  33,   8,   8,  31,  33,   8,   8,  31,  33,   8,   8,   8,  31,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  33,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,  31,  32,  32,  32,  32,  32,  33,},
        };
        int[][] levelLayer1w2 = {
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9004,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  20,  20,  40,  40,  40,  40,  20,  20,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9004,9004,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9004,9004,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9002,   0,   0,9002,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9002,9002,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9050,   0,9001,   0,   0,  20,  40,  20,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  20,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,  20,  20,  40,  30,  30,  40,  20,   0,   0,   0,9001,9001,   0,   0,9001,9001,   0,   0,   0,   0,   0,  20,  20,  30,  20,  20,  20,  20,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  20,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {  20,  20,  40,  20,  20,  20,  40,  20,  20,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  20,  20,   0,   0,  20,  20,   0,   0,   0,  20,  20,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  20,  40,  20,  20,   0,   0,  20,  20,  30,  20,   0,   0,  20,  20,   0,   0,  20,  30,  20,  20,   0,   0,  20,  40,  40,  20,   0,  20,  20,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        };
        Stage level1 = new Stage(level1w1,1,1,0);
        level1.layer2 = new TileMap(level1w1);
        level1.auxlayer2 = new TileMap(levelLayer1w2);
        level1.addEnemy(8,1126,226,20,40);
        level1.addEnemy(8,1249,225,20,40);
        level1.addEnemy(8,1329,220,20,40);
      
      	allStages[setupTimer] = level1;
      break
      case 1:
      	int[][] level2w1 = {
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  21,  27,  28,  28,  28,  28,  28,  28,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  21,  27,  28,  28,  28,  28,  28,  28,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  11,  36,  27,  28,  28,  28,  28,  28,  28,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  10,  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  11,  36,  22,  27,  28,  28,  28,  28,  28,  28,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  10,  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  21,  22,  22,  27,  28,  28,  28,  28,  28,  28,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  11,  12,  13,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  31,  32,  26,  37,  38,  38,  38,  38,  38,  38,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  11,  13,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1002,  10,  10,  10,1002,   0,   0,   0,   0,   0,  10,  10,  10,  10,  10,  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  11,  36,  22,  35,  13,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  31,  32,  32,  32,  32,  32,  26,  22,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  11,  36,  23,   0,   0,   0,   0,   0,   0,   0,  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  11,  36,  17,  18,  19,  35,  13,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  31,  32,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  11,  36,  22,  35,  12,  13,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  11,  13,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  10,  10,   0,   0,   0,   0,  11,  12,  12,  13,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  11,  36,  17,  16,  28,  15,  19,  23,   0,   0,   0,   0,   0,   0,   0,  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  21,  17,  18,  18,  19,  35,  13,   0,   0,   0,   0,   4,   0,   0,   0,  11,  36,  35,  12,  12,  12,  13,   0,   0,   0,   0,   0,   0,  11,  13,   0,   0,   0,   0,   0,   0,   0,   0,  10,  10,   0,   0,   0,  11,  36,  22,  22,  35,  13,   0,   0,   0,   0,   0,   0,   0,   0,  11,  36,  17,  16,  28,  28,  28,  29,  23,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,  11,  36,  27,  28,  28,  15,  19,  35,  12,  13,   0,   0,   0,   0,   0,  11,  36,  17,  18,  18,  18,  19,  35,  12,  12,  13,   0,   0,  11,  36,  23,   0,   0,  11,  13,   0,   0,   0,   0,   0,   0,   0,  11,  12,  36,  17,  18,  18,  19,  35,  12,  13,   0,   0,   0,   0,   0,   0,  21,  17,  16,  28,  28,  28,  28,  29,  23,   0,   0,   0,   0,   0,   0,  10,  10,  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,  11,  12,  36,  17,  16,  28,  28,  28,  15,  18,  19,  23,   9,   8,   9,   8,   9,  21,  17,  16,  28,  28,  28,  15,  18,  18,  19,  23,   0,   0,  21,  22,  23,   0,   0,  21,  35,  12,  12,  13,   0,   0,   0,   0,  21,  17,  18,  16,  28,  28,  15,  18,  19,  35,  13,   0,   0,   0,   0,  11,  36,  27,  28,  28,  28,  28,  28,  29,  35,  13,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,  11,  36,  17,  18,  16,  28,  28,  28,  28,  28,  28,  29,  35,  12,  12,  12,  12,  12,  36,  27,  28,  28,  28,  28,  28,  28,  28,  29,  23,   0,   0,  21,  22,  23,   0,   0,  21,  17,  18,  19,  35,  12,  12,  12,  12,  36,  27,  28,  28,  28,  28,  28,  28,  15,  19,  23,   0,   0,   0,   0,  21,  17,  16,  28,  28,  28,  28,  28,  15,  19,  35,  13,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  11,  13,   0,   0,   0,   0,   0,1009,   0,   0,},
        {  11,  12,  12,  12,  12,  12,  36,  17,  16,  28,  28,  28,  28,  28,  28,  28,  28,  15,  18,  18,  18,  18,  18,  18,  18,  16,  28,  28,  28,  28,  28,  28,  28,  29,  23,   0,   0,  21,  22,  23,   0,   0,  21,  27,  28,  15,  18,  18,  18,  18,  18,  18,  16,  28,  28,  28,  28,  28,  28,  28,  29,  23,   0,   0,   0,   0,  21,  27,  28,  28,  28,  28,  28,  28,  28,  15,  19,  23,   0,   0,   0,   1,   2,   2,   2,   3,   0,   0,  11,  12,  36,  35,  12,  12,  12,  12,  12,  13,   0,   0,},
        {  21,  17,  18,  18,  18,  18,  18,  16,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  29,  23,   0,   0,  21,  22,  23,   0,   0,  21,  27,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  29,  23,   0,   0,   0,   0,  21,  27,  28,  28,  28,  28,  28,  28,  28,  28,  29,  35,  12,  13,   0,   0,   0,   0,   0,   0,   0,  11,  36,  22,  22,  22,  22,  22,  22,  22,  22,  35,  12,  12,},
        {  21,  27,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  29,  23,   9,   9,  21,  22,  23,   9,   9,  21,  27,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  29,  23,   9,   8,   9,   8,  21,  27,  28,  28,  28,  28,  28,  28,  28,  28,  29,  22,  22,  23,   9,   8,   9,   8,   9,   8,   9,  21,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,},
        };
        int[][] level2w2 = {
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9005,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9060,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9002,9001,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  20,  20,  20,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,  40,  40,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  20,   0,   0,   0,  20,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,  20,   0,   0,   0,9001,9001,9001,   0,   0,   0,9001,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9004,9001,   0,   0,   0,   0,   0,   0,9004,9001,9001,9001,9001,9002,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  20,   0,   0,   0,   0,   0,  20,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,  20,   0,   0,   0,  20,  20,   0,9001,9001,   0,   0,9002,   0,   0,   0,   0,  20,  40,   0,   0,   0,   0,   0,9002,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,  20,  20,  40,  20,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,  40,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,  20,   0,9001,   0,   0,  30,   0,   0,   0,  20,   0,   0,  20,  20,  20,  30,   0,9004,   0,   0,   0,   0,  40,  40,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,  20,   0,   0,   0,   0,  20,   0,   0,   0,9001,   0,   0,9001,   0,  40,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9002,9001,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,   0,   0,   0,},
        {   0,   0,   0,   0,   0,9001,9001,9001,   0,  20,   0,   0,   0,   0,   0,   0,   0,  20,  30,   0,   0,   0,   0,   0,  30,   0,   0,   0,   0,   0,   0,   0,  20,  20,  30,   0,   0,  40,   0,   0,   0,   0,  20,  20,   0,   0,   0,   0,9001,9001,   0,  20,  20,   0,   0,   0,   0,   0,   0,  20,  30,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,1011,   0,9001,9001,9001,9001,   0,   0,   0,},
        {   0,   0,   0,   0,   0,9001,   0,  20,  20,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  20,  40,  20,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  20,   0,   0,   0,   0,  20,   0,   0,   0,   0,   0,   0,   0,   0,   0,  20,   0,   0,   0,   0,   0,9001,9004,9001,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,  20,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  20,  30,  40,  20,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  20,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,  20,  20,   0,9001,9001,9001,9001,   0,   0,   0,},
        {  20,  20,  20,  20,  40,  20,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  20,  40,  40,  40,  20,   0,   0,  20,  20,   0,   0,  30,  40,  40,  20,  20,  20,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  30,  30,   0,   0,   0,   0,   0,   0,   0,  20,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  20,  20,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {},
        };
        Stage level2 = new Stage(level2w1,1,1,1);
        level2.layer2 = new TileMap(level2w2);
        level2.auxlayer2 = new TileMap(level2w2);
        level2.addEnemy(8,-447+870,195-30,20,40);
        level2.addEnemy(7,-446+870,151-30,20,40);
        level2.addEnemy(8,-280+870,194-30,20,40);
        level2.addEnemy(8,-106+870,194-30,20,40);
        level2.addEnemy(7,-109+870,134-30,20,40);
        level2.addEnemy(8,92+870,131-30,20,40);
        level2.addEnemy(7,102+870,249-30,20,40);
        level2.addEnemy(8,575+870,113-30,20,40);
        level2.addEnemy(7,792+870,172-30,20,40);
        level2.addEnemy(8,800+870,273-30,20,40);
      
      	allStages[setupTimer] = level2;
      break
      case 2:
      	int[][] level3w1 = {
        {  54,  28,  28,  41,  41,  41,  41,  28,  42,  42,  42,  28,  28,  28,  41,  41,  41,  41,  41,  28,  28,  42,  42,  28,  42,  28,  28,  28,  65,  65,  65,  65,  65,  28,  28,  43,  43,  43,  28,  42,  42,  42,  28,  28,  28,  65,  65,  65,  65,  28,  28,  28,  42,  42,  43,  28,  28,  28,  28,  28,  43,  43,  43,  43,  43,  28,  28,  28,  28,  42,  41,  41,  28,  28,  28,  28,  28,  41,  41,  28,  28,  28,  28,  28,  43,  43,  43,  43,  28,  28,  28,  28,  28,  28,  28,  28,  28,  43,  43,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  54,  28,  28,},
        {  64,  28,  28,  28,  41,  41,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  41,  41,  28,  28,  28,  42,  42,  42,  28,  65,  66,  52,  52,  52,  52,  52,  64,  28,  28,  43,  43,  28,  42,  42,  28,  28,  28,  66,  52,  52,  52,  52,  64,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  28,  28,  28,  43,  41,  42,  28,  65,  28,  28,  28,  41,  41,  28,  42,  28,  28,  28,  28,  43,  28,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  28,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  54,  42,  42,},
        {  52,  64,  28,  28,  28,  28,  28,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  28,  28,  28,  28,  28,  28,  28,  28,  56,  52,  52,   0,   0,   0,   0,   0,  52,  64,  28,  28,  28,  28,  42,  28,  28,  28,  66,  52,   0,   0,   0,   0,  52,  52,  52,  52,  52,  52,  52,  52,  52,  52,  52,  52,  52,  52,  52,  52,  52,  64,  28,  28,  43,  43,  28,  56,  52,  64,  28,  28,  28,  28,  28,  42,  42,  28,  28,  66,  52,  52,  52,  52,  52,  52,  52,  52,  52,  52,  52,  52,  52,  64,   0,  44,  45,  45,  45,  45,  45,  45,  45,  45,  45,  46,   0,  54,  28,  28,},
        {   0,  52,  64,  28,  28,  28,  66,  52,  52,  52,  52,  52,  52,  52,  52,  52,  52,  64,  65,  65,  65,  65,  65,  65,  65,  66,   0,   0,   0,   0,   0,   0,   0,   0,  52,  64,  28,  28,  28,  28,  28,  28,  66,  52,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  52,  64,  28,  28,  28,  28,  66,   0,  52,  64,  28,  28,  28,  28,  28,  42,  28,  66,  52,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  52,   0,  54,  28,  28,  28,  28,  28,  28,  28,  28,  28,  66,   0,  64,  65,  28,},
        {   0,   0,  52,  64,  65,  66,  52,   0,   0,   0,   0,   0,  55,   0,   0,   0,   0,  52,  52,  52,  52,  52,  52,  52,  52,  52,   0,   0,   0,   0,   0,   0,   0,   0,   0,  52,  64,  28,  28,  28,  28,  66,  52,   0,   0,  55,  55,   0,   0,  55,  55,   0,   0,  55,  55,   0,   0,  55,  55,   0,   0,  55,  55,   0,   0,   0,   0,  52,  64,  28,  28,  66,  52,   0,   0,  52,  64,  28,  28,  28,  28,  28,  66,  52,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  64,  65,  65,  65,  65,  65,  65,  65,  28,  56,   0,   0,   0,   0,  54,},
        {   0,   0,   0,  52,  52,  52,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  52,  64,  65,  65,  66,  52,   0,   0,   0,  55,  55,   0,   0,  55,  55,   0,   0,  55,  55,   0,   0,  55,  55,   0,   0,  55,  55,   0,   0,   0,   0,   0,  52,  64,  66,  52,   0,   0,   0,   0,   0,  64,  65,  65,  65,  66,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  52,  52,  52,  52,  52,  52,  52,  52,  54,  56,   0,   0,   0,   0,  54,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,  55,  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,  55,   0,   0,  55,  55,   0,   0,  55,  55,   0,   0,  55,  55,   0,   0,  55,  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  54,  56,   0,   0,   0,   0,  54,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  44,  45,  45,  46,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  54,  56,   0,   0,   0,   0,  54,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1001,1001,   0,   0,1001,1001,   0,   0,1001,1001,   0,   0,1001,1001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  44,  28,  28,  28,  28,  46,   0,   0,   0,  55,  55,  55,  55,   0,   0,   0,   0,   0,   0,   0,   0,  54,  56,   0,   0,   0,   0,  54,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,  55,  55,  55,  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  54,  56,   0,   0,  54,  56,   0,   0,  54,  56,   0,   0,  54,  56,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,  55,   0,   0,  55,   0,   0,  55,   0,   0,  55,   0,   0,   0,  44,  28,  28,  28,  28,  42,  28,  46,   0,   0,   0,   0,   0,   0,   0,   0,   0,1009,   0,   0,   0,   0,  54,  56,   0,   0,   0,   0,  54,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,   0,  55,   0,  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  54,  56,   8,   8,  54,  56,   8,   8,  54,  56,   8,   8,  54,  28,  46,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,  55,  55,   0,   0,  55,   0,   0,   0,   0,   0,  55,   0,   0,  28,  28,  28,  28,  28,  42,  42,  28,  28,  46,   0,   0,   0,   0,   0,   0,  44,  45,  45,  46,   0,   0,   0,  54,  56,   0,   0,   0,   0,  54,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,   8,  55,   8,  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  44,  45,  45,  45,  45,  45,  45,  28,  28,  45,  45,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  46,   0,   0,   0,   0,   0,   0,  44,  45,  28,  28,  28,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,  28,  28,  28,  28,  28,  28,  28,  42,  42,  28,  28,  46,   0,   0,   0,   0,  44,  28,  28,  28,  28,  46,   0,   0,  54,  56,   0,   0,   0,1009,  54,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,  44,  45,  45,  45,  45,  45,  46,   0,   0,   0,   0,   0,   0,   0,  44,  45,  45,  45,  45,  45,  46,   0,   0,   0,   0,   0,   0,   0,   0,   0,  44,  28,  28,  28,  28,  41,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  41,  41,  41,  28,  28,  28,  28,  46,   0,   0,   0,   0,  44,  43,  43,  28,  28,  28,  28,1019,1019,1019,1019,1019,1019,1019,1019,  28,  28,  28,  28,  41,  41,  28,  28,  28,  28,  28,  28,  28,  45,  45,  45,  45,  28,  28,  43,  28,  28,  28,  45,  45,  28,  28,  45,  45,  45,  45,  28,},
        {  45,  45,  45,  45,  46,   0,   0,   8,  44,  28,  28,  28,  28,  28,  28,  28,  46,   8,   0,   0,   0,   8,  44,  28,  28,  28,  28,  28,  28,  28,  46,   8,   0,   0,   0,   0,   0,   8,  44,  28,  28,  28,  28,  41,  41,  41,  28,  28,  28,  28,  43,  43,  28,  28,  28,  28,  41,  41,  41,  28,  42,  42,  28,  28,  45,  45,  45,  45,  28,  43,  43,  41,  41,  28,  42,  28,1007,1007,1007,1007,1007,1007,  28,  28,  28,  28,  41,  41,  41,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  43,  43,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,},
        {  28,  28,  28,  28,  28,  45,  45,  45,  28,  28,  28,  28,  42,  42,  28,  28,  28,  45,  45,  45,  45,  45,  28,  28,  28,  41,  41,  42,  28,  28,  28,  45,  45,  45,  45,  45,  45,  45,  28,  28,  43,  43,  28,  28,  41,  28,  42,  28,  28,  43,  43,  43,  43,  28,  28,  28,  28,  28,  28,  28,  42,  42,  42,  28,  28,  28,  28,  43,  28,  28,  41,  41,  28,  28,  42,  42,  28,  28,  28,  28,  28,  28,  28,  42,  28,  28,  41,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  41,  41,  28,  28,  28,  28,  28,  28,  28,  28,  28,  42,  42,  41,  41,  41,  28,},
        {  28,  43,  43,  43,  43,  28,  28,  28,  28,  28,  28,  28,  42,  42,  42,  28,  28,  28,  28,  43,  43,  43,  28,  28,  41,  41,  41,  41,  28,  28,  28,  42,  42,  42,  28,  28,  28,  28,  28,  43,  43,  43,  28,  28,  28,  42,  42,  28,  28,  28,  43,  43,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  42,  42,  28,  28,  28,  43,  28,  28,  28,  28,  43,  43,  28,  28,  28,  28,  28,  28,  28,  28,  42,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  42,  42,  28,  28,  28,  28,  28,  28,  28,  28,  28,  42,  42,  42,  28,  28,  28,},
        };
        int[][] level3w2 = {
        {},
        {},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9005,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9004,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9002,9004,9001,9001,9002,9004,9001,9001,9002,9004,9001,9001,9002,9004,9001,9001,9002,9004,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9004,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,},
        {},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,   0,   0,   0,9001,9001,9001,   0,   0,   0,9001,   0,9004,   0,9001,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,9001,   0,   0,9001,   0,   0,9001,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,9001,   0,   0,   0,9001,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,   0,9004,   0,9001,9001,   0,   0,9001,9001,   0,   0,9001,9001,   0,   0,   0,   0,   0,9001,9001,9001,9001,   0,   0,   0,   0,9002,9001,   0,   0,9001,   0,   0,9001,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,9071,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,   0,   0,   0,9001,9001,9001,   0,   0,   0,9001,   0,9001,   0,9001,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9004,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,   0,   0,   0,9001,9001,9070,   0,   0,9002,   0,   0,   0,   0,   0,9002,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,   0,   0,   0,9001,9001,9001,   0,   0,   0,9001,   0,9001,   0,9001,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {},
        {},
        {},
        };

        Stage level3 = new Stage(level3w1,2,2,2);
        level3.layer2 = new TileMap(level3w2);
        level3.auxlayer2 = new TileMap(level3w2);
        level3.addEnemy(8,381,262,20,40);
        level3.addEnemy(7,524,145,20,40);
        level3.addEnemy(8,693,264,20,40);
        level3.addEnemy(7,1465,145,20,40);
        level3.addEnemy(8,2108,25,20,40);
        level3.addEnemy(8,1949,144,20,40);
        level3.addEnemy(8,1798,121,20,40);
        level3.enlighten = true;
        level3.minLight = 100;
        
      	allStages[setupTimer] = level3;
      break
      case 3:
      	int[][] level4w1 = {
        {  28,  28,  28,  59,  69,  28,  28,  28,  28,  28,  28,  28,  65,  65,  65,  28,  28,  28,  69,  28,  28,  28,  28,  28,  28,  28,  69,  69,  28,  28,  28,  28,  28,  69,  69,  69,  69,  28,  28,  65,  65,  65,  65,  65,  65,  28,  28,  28,  69,  28,  28,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  55,  55,  64,  28,  69,  69,  56,  55,  55,  54,  28,  28,  69,  28,  28,  28,  69,  69,  69,  69,  69,  28,  28,  28,  28,  28,  28,  28,  28,  28,  69,  28,  28,  28,  28,  28,  28,  69,},
        {  28,  28,  59,  59,  28,  28,  28,  28,  28,  28,  28,  66,  50,   0,  49,  64,  28,  28,  28,  69,  69,  28,  28,  28,  28,  69,  28,  69,  28,  28,  28,  28,  28,  65,  65,  65,  65,  65,  66,  50,   0,  48,   0,   0,  49,  64,  65,  65,  65,  65,  66,  50,   0,   0,   0,   0,  48,  48,   0,   0,   0,   0,  55,  55,  49,  64,  28,  28,  56,  55,  55,  64,  65,  65,  65,  65,  65,  65,  65,  28,  28,  28,  28,  28,  65,  65,  65,  65,  69,  69,  28,  28,  28,  28,  69,  69,  69,  28,  28,  28,},
        {  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  66,  50,   0,   0,   0,  49,  64,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  65,  65,  65,  66,  50,   0,   0,  48,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,  55,   0,   0,   0,   0,   0,   0,   0,  49,  64,  65,  66,   0,   0,   0,   0,   0,  48,  48,   0,   0,  49,  64,  28,  28,  28,  56,   0,   0,   0,   0,  54,  69,  69,  28,  28,  28,  69,  28,  28,  28,  28,  69,},
        {  28,  28,  28,  28,  28,  65,  65,  65,  65,  66,  50,   0,   0,  55,   0,   0,  49,  64,  28,  28,  28,  28,  28,  28,  28,  28,  28,  65,  66,  50,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  70,   0,   0,   0,   0,  55,  55,  55,  55,  55,   0,   0,   0,  55,  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,  48,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  49,  64,  65,  28,  56,   0,   0,   0,   0,  54,  69,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,},
        {  28,  28,  65,  65,  66,  50,   0,  48,   0,   0,   0,   0,   0,   0,   0,   0,   0,  49,  64,  65,  65,  65,  65,  65,  65,  65,  66,   0,   0,   0,   0,   0,  55,  55,  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,  55,  55,  55,  55,   0,   0,   0,  55,  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,  55,   0,   0,   0,   0,   0,   0,  49,  64,  28,  45,  45,  46,   0,  54,  28,  28,  28,  28,  28,  65,  65,  65,  65,  65,  65,},
        {  65,  66,  50,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  70,  70,   0,   0,   0,   0,  55,  55,   0,   0,   0,   0,   0,  55,  55,   0,   0,   0,   0,   0,   0,   0,  55,   0,   0,   0,   0,  64,  65,  65,  66,1003,  54,  28,  28,  28,  65,  50,   0,   0,  48,  48,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,  55,  55,  55,   0,   0,   0,  60,   0,   0,   0,  55,  55,  55,   0,   0,   0,   0,   0,   0,  55,  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  49,  44,  45,  45,  45,  45,  46,  50,   0,   0,   0,   0,   0,   0,   0,  49,  44,  45,  45,  46,  50,   0,   0,   0,   0,   0,  70,  70,  70,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  48,   0,   0,  64,  65,  65,  50,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,  55,  55,  55,   0,   0,   0,   0,   0,   0,   0,  55,  55,  55,   0,   0,   0,  55,  55,   0,  55,  55,   0,  57,  44,  45,  45,  45,  45,  45,  46,  47,  44,  45,  65,  65,  65,  65,  65,  28,  45,  45,  45,  45,  45,  45,  45,  45,  45,  65,  65,  65,  65,  46,  50,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  49,  44,  45,  45,  46,  50,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,  55,   0,  55,  55,   0,  57,  64,  65,  65,  65,  65,  65,  28,  45,  69,  66,  67,   0,  58,  58,   0,  64,  65,  65,  65,  65,  65,  65,  65,  65,  66,   0,   0,  58,  58,  64,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  28,  65,  65,  65,  45,  45,  45,  45,  50,   0,  55,  55,   0,  55,  55,   0,   0,  55,  55,  55,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,  55,   0,   0,   0,   0,   0,   0,   0,   0,  58,  58,   0,  64,  65,  66,  67,   0,   0,   0,   0,   0,   0,   0,   0,  58,  58,   0,   0,   0,   0,   0,   0,   0,   0,   0,  58,  64,  65,  65,  65,  65,1015,  65,  65,  65,  65,  65,  65,  66,   0,  58,   0,  64,  65,  65,  66,  50,   0,  55,  55,   0,  55,  55,   0,   0,  55,  55,  55,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,  60,  60,  60,   0,   0,  60,  60,  60,   0,   0,  60,  60,  60,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,  60,  55,   0,   0,   0,   0,   0,   0,   0,  55,  60,  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,  54,  28,  56,   0,   0,  54,  28,  56,   0,   0,  54,  28,  56,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  60,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,  60,  55,  60,  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,  54,  28,  56,   0,   0,  54,  59,  56,   0,   0,  54,  28,  56,  68,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  68,   0,   0,   0,   0,   0,  60,  60,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  60,  60,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  60,   0,   0,   0,   0,   0,   0,   0,1009,   0,},
        {  45,  45,  46,   0,   0,   0,   0,  54,  28,  56,   0,   0,  54,  59,  56,   0,   0,  54,  59,  59,  46,  67,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  68,  68,  68,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  44,  45,  45,  45,  45,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,  45,  45,  45,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,  45,1001,  45,1018,1018,1018,1018,1018,1018,1018,1018,1018,  45,  45,  45,  45,  45,},
        {  28,  28,  28,  45,  45,  45,  45,  28,  59,  56,  68,  68,  54,  28,  56,  68,  68,  54,  59,  59,  28,  46,  67,   0,   0,   0,   0,   0,   0,   0,  57,  44,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  46,   0,   0,   0,   0,   0,  44,  28,  28,  59,  28,  28,  28,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019,  28,  28,  59,  28,  28,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019,  28,  28,  59,  28,  28,1019,1019,1019,1019,1019,1019,1019,  28,  28,  28,  59,  59,  28,},
        {  28,  59,  59,  28,  28,  28,  28,  59,  59,  28,  60,  60,  28,  28,  28,  60,  60,  28,  59,  59,  28,  28,  45,  45,  45,  45,  45,  45,  45,  45,  45,  28,  28,  28,  59,  59,  28,  28,  28,  28,  28,  28,  59,  28,  28,  45,  45,  45,  45,  45,  28,  28,  28,  59,  28,  28,  28,  28,  59,  28,  28,  28,  28,  59,  28,  28,  28,  28,  28,  28,  28,  59,  28,  28,  28,  28,  28,  28,  59,  59,  59,  59,  28,  28,  28,  28,  28,  28,  28,  28,  28,  59,  59,  59,  28,  28,  28,  28,  28,  28,},
        };
        int[][] level4w2 = {
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,9080,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1010,1010,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1010,1010,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9081,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9005,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,9001,   0,9001,9001,9002,9001,9001,   0,   0,   0,9001,9001,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,9001,9001,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,9001,9004,9001,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9004,9001,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,   0,   0,   0,9004,9001,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,9001,9001,   0,   0,9001,9001,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9004,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9004,9002,   0,   0,   0,   0,   0,9004,9002,   0,   0,9001,9001,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {},
        {   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,9001,9001,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {},
        {   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,9001,9001,9001,   0,   0,9001,9001,9001,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9002,   0,9002,9001,9001,9001,9004,9004,9004,9001,9001,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9002,   0,   0,   0,   0,9001,   0,9001,   0,   0,   0,   0,   0,   0,   0,9001,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,9001,9001,9001,   0,9001,   0,9004,   0,9001,   0,9001,9001,9001,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,9001,9001,9001,   0,   0,9004,   0,   0,9001,9001,9001,   0,   0,   0,   0,9001,9001,9001,   0,   0,9004,   0,   0,9001,9001,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,},
        {},
        {},
        {},
        {},
        };
        Stage level4 = new Stage(level4w1,3,2,3);
        level4.layer2 = new TileMap(level4w2);
        level4.auxlayer2 = new TileMap(level4w2);
        level4.addEnemy(7,1803,221,20,40);
        level4.addEnemy(7,1532,222,20,40);
        level4.addEnemy(7,1232,223,20,40);
        level4.addEnemy(7,620,204,20,40);
        level4.addEnemy(7,862,42,20,40);
        level4.addEnemy(7,1252,82,20,40);
        level4.addEnemy(7,1394,83,20,40);
        level4.addEnemy(7,1564,83,20,40);
        level4.addEnemy(7,264,102,20,40);
        level4.addEnemy(8,262,182,20,40);
        level4.addEnemy(8,945,204,20,40);
        level4.addEnemy(8,1004,45,20,40);
        level4.addEnemy(8,1324,104,20,40);
        level4.enlighten = true;
        level4.minLight = 60;
      
      	allStages[setupTimer] = level4;
      break
      case 4:
				int[][] level5w1 = {
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  72,   0,   0,   0,   0,   0,   0,   0,  72,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  10,  10,  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  72,   0,   0,   0,   0,  72,  72,  72,   0,   0,   0,   0,   0,  72,  72,  72,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  72,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  72,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  72,  72,  72,   0,   0,   0,  72,  72,  72,   0,   0,   0,   0,   0,  72,  72,  72,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  72,  72,  72,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  72,  72,  72,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  72,  72,  72,   0,   0,   0,  72,  71,  72,   0,   0,   0,   0,  72,  72,  72,  72,  72,   0,   0,   0,   0,  72,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  72,  72,  72,  72,  72,   0,   0,   0,   0,   0,  72,  72,  72,   0,   0,   0,   0,   0,   0,   0,   0,  72,  72,  72,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  72,  71,  72,   0,   0,   0,   0,  71,   0,   0,   0,   0,   0,  72,  72,  72,  72,  72,   0,   0,   0,  72,  72,  72,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,  72,   0,   0,   0,   0,   0,  10,  10,  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  72,  71,  72,   0,   0,   0,   0,   0,  72,  72,  72,  72,  72,   0,   0,   0,   0,   0,   0,  72,  72,  72,  72,  72,   0,   0,  10,  10,  10,  10,   0,   0,   0,   0,   0,   0,  71,   0,   0,   0,   9,   9,  71,   9,   9,   0,   9,   9,   0,  72,  71,  72,   0,   0,   0,   0,  72,  72,  72,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,  72,  72,  72,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  72,  72,  72,   0,   0,  72,  72,  71,  72,  72,   0,   0,   0,   0,  72,  72,  72,  72,  72,   0,   0,  10,   0,   0,   0,  72,  72,  72,  72,  72,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  72,  72,  71,   9,   9,  11,  12,  12,  12,  12,  13,1002,  11,  13,   0,   0,  71,   0,   0,   0,   0,  72,  72,  72,  72,  72,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,  72,  72,  72,  72,  72,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  72,  72,  72,   0,   0,   0,  72,  72,  72,   0,   0,   0,   0,  71,   0,   0,   0,   0,   0,   0,   0,  72,  71,  72,   0,   0,   0,   0,   0,   0,   0,   0,  72,  71,  72,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1002,1002,  71,  11,  12,  36,  22,  22,  22,  22,  35,  12,  36,  23,  61,1002,  71,   0,   0,   0,   0,  72,  72,  72,  72,  72,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,  72,  72,  72,  72,  72,   0,   0,   0,  72,  72,  72,   0,   0,   0,   0,   0,  72,  72,  72,   0,   0,   0,  72,  71,  72,   0,   0,   0,   0,  71,   0,  72,  72,  72,   0,   0,   0,   0,  71,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  71,   0,   0,  72,  72,  72,   0,   0,  72,  72,  72,   0,   0,   0,   0,  71,  21,  22,  25,  32,  32,  32,  32,  32,  26,  22,  23,  61,   9,  71,   0,   0,   0,   0,   0,  72,  71,  72,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,  72,  71,  72,   0,   0,   0,1002,  72,  72,  72,1002,1002,   0,   0,   0,  72,  71,  72,   0,   0,   0,   0,  71,   0,   0,   0,  72,  72,  71,   0,  72,  72,  72,   0,   0,1002,1002,  71,   0,  72,  72,  72,   0,  72,  72,  72,   0,1002,  71,1002,   0,  72,  72,  72,   0,   0,  72,  72,  72,   0,   0,   9,   9,  11,  36,  22,  23,   0,   0,   0,   0,   0,  21,  22,  35,  12,  12,  12,  12,  13,   0,   0,   0,   0,  71,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,  71,   0,   0,   0,   0,   0,  72,  71,  72,   0,   0,   0,   0,   0,   0,  71,   0,   0,   0,  72,  72,  71,   0,   0,   0,1002,1002,  71,   0,  72,  71,  72,   0,   0,   0,   0,  71,   0,  72,  72,  72,   0,  72,  72,  72,   0,   0,  71,   0,   0,  72,  71,  72,   0,   0,  72,  71,  72,   0,   0,  11,  12,  36,  22,  22,  23,   0,  10,   0,  10,   0,  21,  22,  22,  22,  22,  22,  22,  35,  13,   0,   0,   0,  71,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,1002,  71,1002,   0,   0,   0,   0,   0,  71,   0,   0,   0,   0,   0,   0,   0,  71,1002,1002,   0,   0,   0,  71,  72,  72,   0,   0,   0,  71,   0,   0,  71,   0,   0,   0,   0,   0,  71,   0,  72,  71,  72,   0,  72,  71,  72,   0,   0,  71,   0,   0,   0,  71,   0,   0,   0,   0,  71,   0,   0,  11,  36,  22,  22,  22,  22,  23,   0,   0,   0,   0,   0,  21,  22,  22,  22,  22,  22,  22,  22,  35,  13,   0,   0,  71,   0,   0,   0,   0,1009,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,  71,   0,   0,   0,   0,  72,  72,  71,   0,   0,   0,   0,   0,   0,   0,  71,   0,   0,   0,   0,   0,  71,   0,   0,   0,   0,   0,  71,   0,   0,  71,   0,   0,   0,   0,   0,  71,   0,   0,  71,   0,   0,   0,  71,   0,   0,   0,  71,   0,   0,   0,  71,   0,   0,   0,   0,  71,   0,   0,  21,  22,  22,  22,  22,  22,  35,  12,  12,  12,  12,  12,1001,  22,  22,  22,  22,  22,  22,  22,  22,  35,  12,  12,  12,  12,  12,  12,  12,  12,  12,  13,},
        {   0,   0,   0,   0,   0,  11,  12,  12,  12,  12,  13,   0,   0,   0,   0,   0,  71,   0,   0,  10,  10,   0,   0,  11,  12,  13,  10,  10,  10,  11,  12,  13,   0,  10,   0,   0,  71,   0,   0,  71,   0,   0,   0,   0,  11,  13,   0,   0,  14,   0,   0,   0,  14,   0,   0,   0,  11,  13,   0,  11,  12,  13,  10,  10,  11,  12,  12,  12,  36,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  23,},
        {  11,  12,  12,  12,  12,  36,  22,  22,  22,  22,  35,  13,   0,   0,  11,  12,  12,  13,   0,   0,   0,   0,  11,  36,  22,  23,   0,   0,   0,  21,  22,  23,   0,   0,   0,  11,  13,  10,  10,  11,  13,   0,   0,   0,  21,  23,   0,   0,  24,   0,   0,   0,  24,   0,   0,   0,  21,  23,   0,  21,  22,  23,   0,   0,  21,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  23,},
        {  31,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  33,   9,   9,  31,  32,  32,  33,   9,   9,   9,   9,  31,  32,  32,  33,   9,   9,   9,  31,  32,  33,   9,   9,   9,  31,  33,   9,   9,  31,  33,   9,   9,   9,  31,  33,   9,   9,  34,   9,   9,   9,  34,   9,   9,   9,  31,  33,   9,  31,  32,  33,   9,   9,  31,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  33,},
        };
        int[][] level5w2 = {
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {},
        {   0,   0,   0,   0,   0,   0,   0,   0,9001,9004,9001,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9002,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,9001,   0,9001,   0,   0,   0,   0,9001,9001,9001,9001,9001,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,},
        {},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,9001,   0,9004,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,9001,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,   0,   0,9001,   0,   0,   0,9001,9001,9001,9001,9001,   0,   0,9001,9002,9004,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,  20,   0,   0,   0,   0,   0,9004,   0,   0,   0,9001,   0,9001,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,9001,9001,   0,9001,9001,   0,   0,   0,   0,9001,9001,9001,9001,9001,   0,9001,9004,9001,   0,   0,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,1010,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,9001,   0,   0,   0,9001,   0,   0,   0,   0,9001,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1010,   0,   0,   0,   0,   0,1010,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,9001,   0,9001,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,1010,   0,   0,   0,   0,   0,1010,   0,   0,   0,   0,   0,  20,  40,   0,   0,   0,9001,   0,9001,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,9001,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,9001,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,9001,9001,9001,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,1010,9001,9001,9001,9001,9001,1010,   0,   0,   0,   0,   0,   0,   0,  20,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,9001,   0,   0,   0,   0,9001,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,9001,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,9001,9001,9001,   0,   0,   0,   0,   0,9001,   0,9001,   0,   0,9001,   0,9001,   0,  40,   0,   0,   0,   0,   0,1010,9001,9002,9090,9004,9001,1010,   0,   0,   0,   0,   0,   0,   0,   0,  20,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,9001,   0,9001,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1010,9001,9001,9001,9001,9001,1010,   0,   0,   0,   0,   0,   0,   0,   0,   0,  30,  20,   0,  40,  20,  20,  20,   0,  40,  20,},
        {   0,   0,   0,   0,   0,  20,  40,  20,  20,   0,  20,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,  20,   0,  20,   0,   0,   0,  20,   0,  40,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  20,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  40,   0,  20,   0,  20,   0,   0,  40,   0,  20,  20,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {  20,  20,  20,  20,  20,   0,   0,   0,   0,   0,   0,  30,   0,   0,  20,  20,   0,  30,   0,9001,9001,   0,  40,   0,   0,   0,9001,9004,9001,   0,   0,   0,   0,9004,   0,  20,   0,   0,   0,   0,  30,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        };
        Stage level5 = new Stage(level5w1,4,1,4);
        level5.layer2 = new TileMap(level5w2);
        level5.auxlayer2 = new TileMap(level5w2);
        level5.addEnemy(7,185,83,20,40);
        level5.addEnemy(7,322,142,20,40);
        level5.addEnemy(7,479,124,20,40);
        level5.addEnemy(7,600,105,20,40);
        level5.addEnemy(7,903,62,20,40);
        level5.addEnemy(7,1123,23,20,40);
        level5.addEnemy(7,1425,4,20,40);
        level5.addEnemy(7,1844,44,20,40);
        level5.addEnemy(8,1395,104,20,40);
        level5.addEnemy(8,1202,143,20,40);
        level5.addEnemy(8,1304,142,20,40);
        level5.addEnemy(8,958,164,20,40);
        level5.addEnemy(8,1045,165,20,40);
        level5.addEnemy(8,690,164,20,40);
        level5.addEnemy(8,564,182,20,40);
        level5.enlighten = false;
        level5.minLight = 100;      
      
      	allStages[setupTimer] = level5;
      break
      case 5:
      	int[][] level6w1 = {
        {},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  77,  77,  77,  77,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  77,  77,  77,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  77,  77,  77,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  77,  77,  77,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,  77,   0,   0,   0,   0,   0,  77,  77,   0,   0,   0,   0,  53,  77,  77,  51,  53,  77,  77,  51,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  74,  75,  76,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  53,  77,  77,  51,  53,  77,  77,  51,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  77,   0,   0,   0,   0,  77,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  74,  75,  76,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,  77,  77,  77,   0,   0,   0,  74,  75,  75,  76,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1012,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   8,   0,   0,   0,   0,   0,   8,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   8,   8,   8,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1009,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 120, 120, 120,  84,  85,  85,  85,  85,  86,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   0,   0,   0,   0,   0, 120,  87, 120,   0,   0,   0, 120,  87, 120, 120,   0,   0,   0,   0,   0,   0, 120, 120, 120,  84,  85,  85,  85,  85,  85,  85,  85,  86,1020,1020,1020,1020,1020,1020,1020,  87,1020,  84,  85,  85,},
        {  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  86, 120,   0,   0,   0,   0, 120,  84,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  86,1020,1020,1020,1020,1020,1020,1020,1020,1020,  94,  95,  95,  95,  95,  88,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  86,1020,1020,1020,1020,1020,1020,  97,1020,1020,1020,1020,1020,  97,1020,1020,1020,1020,1020,1020,1020,1020,1020,1020,  84,  89,  95,  95,  95,  95,  95,  95,  95,  88,  86,1008,1008,1008,1008,1008,1008,  97,1008,  94,  95,  95,},
        {  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  96,1020,1020,1020,1020,1020,1020,  94,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  88,  86,1008,1008,1008,1008,1008,1008,1008,1008,  94,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  88,  86,1008,1008,1008,1008,1008, 107,1008,1008,1008,1008,1008, 107,1008,1008,1008,1008,  84,  85,  85,  85,  85,  85,  89,  95,  95,  95,  95,  95,  95,  95,  95,  95,  88,  86,1008,1008,1008,1008,1008, 107,1008,  94,  95,  95,},
        {  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  96,1008,1008,1008,1008,1008,1008,  94,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  88,  86,1008,1008,1008,1008,1008,1008,1008,  94,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  88,  86,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,  84,  89,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  88,  86,1008,1008,1008,1008,1008,1008,  94,  95,  95,},
        {  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  88,  85,  85,  85,  85,  85,  85,  89,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  88,  85,  85,  85,  85,  85,  85,  85,  89,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  88,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  89,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  88,  85,  85,  85,  85,  85,  85,  89,  95,  95,},
        };
        int[][] level6w2 = {
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9002,9004,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9004,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {},
        {},
        {   0,   0,   0,   0,   0,   0,9001,9004,9001,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,9001,9001,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {},
        {   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,9001,9001,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9004,9001,9001,9001,9001,9004,9001,9001,   0,   0,9001,9001,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 115,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 115,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 115,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,1021,1021,1021,1021,   0, 114,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,1021,1021,1021,1021, 115,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,1021,1021, 115,1021,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,1021,1021,1021,1021,   0,1021,1021,1021,1021,1021,   0,   0,   0, 114,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 115,   0, 114,   0, 114,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,1021,1021,1021,1021,   0,   0,   0,},
        };
        Stage level6 = new Stage(level6w1,5,0,5);
        level6.layer2 = new TileMap(level6w2);
        level6.auxlayer2 = new TileMap(level6w2);
        level6.addEnemy(11,264,148,20,40);
        level6.addEnemy(11,792,107,20,40);
        level6.addEnemy(11,933,127,20,40);
        level6.addEnemy(11,1034,128,20,40);
        level6.addEnemy(11,1652,129,20,40);
        level6.addEnemy(9,1376,198,20,40);
        level6.addEnemy(9,813,197,20,40);
        level6.addEnemy(9,443,219,20,40);
        level6.addEnemy(9,539,219,20,40);
        level6.addEnemy(10,281,270,20,40);
        level6.addEnemy(10,728,267,20,40);
        level6.addEnemy(10,646,268,20,40);
        level6.addEnemy(10,1162,265,20,40);
        level6.addEnemy(10,1279,267,20,40);
        level6.addEnemy(10,1403,247,20,40);
        level6.addEnemy(10,1842,245,20,40);
        level6.addEnemy(10,1864,288,20,40);
        level6.enlighten = false;
        level6.minLight = 100;
      
      	allStages[setupTimer] = level6;
      break
      case 6:
      	 int[][] level7w1 = {
        {  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  78, 105, 105, 105,  79,  95,  95,  95,  95,  95,  95,  95,  78, 105, 105, 105, 105, 105, 105,  79,  95,  95,  95,  95,  95,  78, 105, 105, 105, 105, 105, 105,  79,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  78, 105, 105, 105, 105, 105,  79,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  78, 105, 105, 105, 105, 105, 105, 105, 105,  79,  95,  95,  95,  95,  95,  95,  78, 105, 105, 105, 105, 105, 105, 105,},
        {  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  96,1008,1008,1008, 104,  79,  95,  95,  95,  95,  95,  78, 106,1008,1008,1008,1008,1008,1008,  94,  95,  95,  95,  95,  78, 106,1008,1008,1008,1008,1008,1008, 104, 105,  79,  95,  95,  95,  95,  95,  95,  95,  78, 106, 119,1015,1015,1015,1015, 104,  79,  95,  95,  95,  78, 105, 105, 105, 105,  79,  95,  95,  95,  95,  95,  95,  96,1008,1008,1008,1008,1008,1008,1008,1008, 104, 105,  79,  95,  95,  95,  78, 106,   0,   0,   0,   0,   0,   0,   0,},
        {  95,  95,  95,  95,  95,  95,  95,  95,  95,  78, 106,1008,1008,1008,1008, 104, 105, 105, 105, 105, 105, 106,1008,1008,1008,1008,1008,1008,1008, 104,  79,  95,  95,  78, 106,1008,1008,1008,1008,1008,1008,1008,1008,1008,  94,  95,  95,  95,  95,  95,  95,  78, 106,1008, 119,   0,   0,   0,   0,  52, 104,  79,  95,  78, 106,1008,1008,1008,1008, 104,  79,  95,  95,  95,  95,  78, 106,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,  94,  95,  95,  78, 106,   0,   0,   0,   0,   0,   0,   0,   0,},
        { 105, 105, 105,  79,  95,  95,  95,  78, 105, 106,1008,1008,1008,1008,1008,1008, 119,  52,  52,  52, 119,1008,1008,1008,1008,1008,1008,1008,1008,1008, 104, 105, 105, 106,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008, 104,  79,  95,  95,  95,  95,  78, 106,1008,1008, 119,   0,   0,   0,   0,   0,  52, 104, 105, 106,1008,1008,1008,1008,1008,1008, 104,  79,  95,  95,  78, 106,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008, 104, 105, 105, 106,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {1008,1008,1008, 104, 105, 105, 105, 106,1008,1008,1008,1008,1008,1008,1008,1008, 119,   0,  77,   0, 119,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008, 104,  79,  95,  95,  78, 106,1008,1008,1008, 119,   0,   0,   0,   0,   0,   0,  52, 119,1008,1008,1008,1008,1008,1008,1008,1008, 104, 105, 105, 106,1017,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008, 119,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008, 119,   0,  77,   0, 119,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008, 104,  79,  78, 106,1008,1008,1008,1008, 119,   0,   0,   0,   0,   0,   0,   0, 119,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008, 119,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008, 119,   0,  77,   0, 119,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,  84,  85,  85,  86,1008,1008,1008,1008,1008, 104, 106,1008,1008,1008,1008,1008, 119,   8,   8,   8,   8,   0,   0,   0, 119,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,  84,  85,  85,  85,  86,   0,   0,   0,   0,   0,1009,   0,},
        {1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008, 119,   0,  77,   0, 119,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,  84,  89,  77,  77,  88,  86,1017,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008, 119,  84,  85,  85,  86,1001,   0,   0, 119,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,  84,  85,  85,  85,  85,  85,  85,  85,  89,  95,  95,  95,  88,  77,  85,  85,  85,  85,  85,  85,},
        {1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008, 119,   8,   8,   8, 119,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,  84,  89,  77,  77,  77,  77,  88,  86,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,  84,  89,  77,  77,  88,  86,1001,   0, 119,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,  94,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  77,  77,  95,  95,  95,  95,  95,},
        {1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008, 119,  84,  85,  86, 119,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008, 104, 105, 105,  77,  77, 105, 105, 106,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,  94,  77,  77,  77,  77,  88,  86,1001, 119,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008, 104, 105, 105, 105, 105, 105, 105, 105,  79,  95,  95,  95,  95,  77,  77,  95,  95,  95,  95,  95,},
        {1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,  84,  89,  95,  88,  86,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008, 119,   0,   0,   0,   0,   0,   0, 119,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008, 104, 105, 105,  79,  77,  77,  88,  86, 119,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008, 119,   0,  77,  52,  52,  77,  77,  77, 104,  79,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,},
        {1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,  84,  89,  95,  95,  95,  88,  86,1017,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008, 119,   0,   0,   0,   0,   0,   0, 119,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008, 104, 105,  79,  77,  88,  86,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008, 119,   0,  77,   0,   0,  77,  77,  77,  77, 104, 105, 105, 105, 105, 105, 105,  79,  95,  95,  95,},
        {1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,  84,  89,  95,  95,  95,  95,  95,  88,  86,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008, 119,   0,   0,   0,   0,   0,   0, 119,1008,1008,  84,  85,  85,  85,  86,1008,1008,1008,1008,1008,1008,1008,1008, 104, 105, 105, 106,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008, 119,   0,  77,  77,  77,  77,   0,   0,  77,  77,  77,  77,  52,  52,  77,  77, 104, 105, 105, 105,},
        {  85,  86,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,  84,  89,  95,  95,  95,  95,  95,  95,  95,  88,  86,1008,1008,1008,1008,1008,1008,1008,  84,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  89,  95,  95,  95,  88,  85,  86,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008, 119,   0,  77,  77,  77,  77,   0,   0,  77,  77,  77,  77,   0,   0,  77,  77,   0,   0,   0,   0,},
        {  95,  88,  86,1008,1008,1008,1008,1008,1008,1008,1008,1008,  84,  89,  95,  95,  95,  95,  95,  95,  95,  95,  95,  88,  85,  85,  85,  85,  85,  85,  85,  89,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  88,  85,  85,  85,  85,  86,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,  84,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  86,  77,  77,  77,  77,  77,  77,   0,   0,1009,   0,},
        {  95,  95,  88,  85,  85,  85,  85,  85,  85,  85,  85,  85,  89,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  88,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  89,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  88,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,},
        };
        int[][] level7w2 = {
        {},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001, 116,   0,   0,   0,   0,   0,   0,   0,   0, 116,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 116,   0,   0,   0,   0,   0, 114,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,9001,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 115,   0,   0,   0,   0,   0,   0,   0, 116,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,   0, 116,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 116,   0,9004,   0,   0,   0,   0,   0,   0,   0,   0,   0, 116,   0,9001,   0,   0,   0, 114,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,9001,   0,9001,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 117,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 116,1021,1021,1021,1021,1021,1021,   0,   0,   0,   0,   0, 117,   0,   0,   0,   0,   0,   0,   0,   0, 116,   0,   0,   0,   0,   0,   0,   0,   0, 115,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 116,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0, 114,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,9001,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 117,   0,9001,   0,   0,   0,   0,9001,9001,9001,   0,   0, 116,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 117,   0,   0,   0,9001,9001,9001,9001,   0, 116,   0,   0,   0,   0,   0,   0,   0,   0, 115,   0,   0,   0,9001,9001,9004,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9002,   0,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,9001,   0,9001,   0,   0,},
        {   0,   0,   0,   0,   0, 116,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,9001,9004,9001,   0,   0,   0,   0,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 115,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,9001,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,9001,9002,9001,   0,   0,   0,   0,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 115,   0,   0,   0,   0,   0,   0,   0,   0,9111,   0,   0,   0,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,9001,   0,9001,   0,   0,},
        {   0,   0,   0,   0,1021,1021,1021,1021,1021,1021,1021,   0,9001,9001,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,9002,9002,   0,   0,   0,9004,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,9001,9001,9001,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,   0,   0,   0,   0,9001,9110,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,9001,9001,9001,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9005,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,9001,9001,9001,9004,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9004,9004,   0,   0,   0,   0,   0,1021,1021,1021,1021,   0,   0,   0,9002,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9004,9001,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,9001,9001,9001,9005,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 114,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,9001,9001,9001,   0,   0,9001,9001,9001,   0,   0,   0,   0,9001,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 114,   0,   0,   0,   0,   0,   0,   0,   0,   0, 115,   0,   0,   0,   0,9001,   0,   0,9001,   0,   0,   0, 115,   0,   0,   0,   0,   0,   0, 116,   0,   0,   0, 115,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,9001,9001,9001,   0,   0,9001,9001,9001,   0,   0,   0,   0,9001,9001,9001,9001,9001,9001,9004,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0, 114,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 114,   0,   0,   0,   0,   0,   0,   0,   0,   0, 115,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 115,1021,1021,1021,1021,1021,   0, 116,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,   0,   0,   0,   0,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,   0,   0,9001,9004,   0,   0,   0,   0,},
        {   0,   0,   0, 114,1021,1021,1021,1021,1021,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 114,9004,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 117,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 117,   0,   0,   0,   0,   0,   0,   0,   0,9001,9004,9001,   0,9001,9001,9001,9002,9001,9001,9001,9001,9001,9112,   0,   0,   0,   0,},
        {   0,   0,   0, 114,   0,   0,   0,   0,   0,   0,   0, 114,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9004,   0, 117,   0,   0,   0,   0,   0, 116,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9004,9001,9001,9001,9001,9001,   0,   0,   0,   0,},
        {},
        };
        Stage level7 = new Stage(level7w1,2,3,6);
        level7.layer2 = new TileMap(level7w2);
        level7.auxlayer2 = new TileMap(level7w2);
        level7.addEnemy(9,1670,220,20,40);
        level7.addEnemy(9,1733,260,20,40);
        level7.addEnemy(9,1846,260,20,40);
        level7.addEnemy(11,784,228,20,40);
        level7.addEnemy(9,496,258,20,40);
        level7.addEnemy(9,788,98,20,40);
        level7.addEnemy(9,1663,118,20,40);
        level7.addEnemy(9,1224,279,20,40);
        level7.addEnemy(10,198,128,20,40);
        level7.addEnemy(10,195,248,20,40);
        level7.addEnemy(10,516,188,20,40);
        level7.addEnemy(10,525,48,20,40);
        level7.addEnemy(10,570,88,20,40);
        level7.addEnemy(10,952,226,20,40);
        level7.addEnemy(10,952,168,20,40);
        level7.addEnemy(10,1478,107,20,40);
        level7.addEnemy(10,1463,167,20,40);
        level7.addEnemy(10,1477,227,20,40);
        level7.addEnemy(10,1352,228,20,40);
        level7.addEnemy(10,1340,168,20,40);
        level7.addEnemy(10,1335,108,20,40);
        level7.enlighten = false;
        level7.minLight = 100;
      
      	allStages[setupTimer] = level7;
      break
      case 7:
      	int[][] level8w1 = {
        {  95,  95,  95,  95,  95,  77,  77,  77,  77,  95,  95,  95,  95,  77,  77,  77,  77,  77,  77,  77,  77,  77,  77,  77,  95,  95,  95,  95,  77,  77,  77,  95,  95,  78, 105, 105, 105, 105, 105,  79,  95,  95,  77,  77,  77,  77,  77,  77,  77,  78, 105, 105, 105, 105,  79,  95,  95,  95,  77,  77,  77,  77,  77,  77,  95,  95,  95,  95,  95,  95,  95,  95,  95,  77,  77,  77,  77,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  77,  77,  77,  77,  77,  77,  77,  77,  95,  95,  77,  77,},
        {  95,  95,  95,  95,  95,  77,  77,  77,  77,  95,  95,  95,  95,  95,  77,  77,  77,  78, 105, 105, 105,  79,  95,  77,  95,  95,  95,  78, 105, 105, 105, 105, 105, 106,1008,1008,1015,1008,1008, 104,  79,  95,  95,  77,  77,  77,  77,  78, 105, 106,1008,1008,1008,1008, 104,  79,  95,  95,  95,  77,  77,  77,  77,  95,  95,  78, 105, 105, 105, 105, 105, 105,  79,  95,  95,  77,  77,  78, 105, 105, 105, 105, 105, 105,  79,  95,  95,  95,  95,  77,  77,  77,  77,  77,  95,  95,  95,  95,  95,  77,},
        { 105, 105, 105, 105,  79,  95,  77,  77,  77,  77,  77,  77,  77,  95,  95,  95,  95,  96,1008,1008,1008, 104,  79,  95,  95,  95,  78, 106,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008, 104,  79,  95,  95,  95,  95,  95,  96,1008,1008,1008,1008,1008,1008,1008, 104, 105,  79,  95,  77,  77,  77,  95,  95,  78, 106,1008,1008,1008,1008,1008,1008, 104, 105, 105, 105, 105, 106,1008,1008,1008,1008,1008,1008, 104,  79,  95,  95,  95,  95,  77,  77,  77,  95,  95,  95,  95,  95,  95,  95,},
        {1008,1008,1008,1008, 104,  79,  95,  77,  77,  77,  77,  77,  77,  95,  95,  95,  78, 106,1008,1008,1008,1008,  94,  95,  95,  78, 106,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008, 104,  79,  95,  95,  95,  78, 106,1008,1008,1008,1008,1008,1008,1008,1008,1008,  94,  95,  95,  95,  95,  95,  78, 106,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008, 104,  79,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,},
        {1008,1008,1008,1008,1008, 104,  79,  77,  77,  77,  77,  77,  95,  95,  95,  78, 106,1008,1008,1008,1008,1008, 104, 105, 105, 106,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008, 104,  79,  95,  78, 106,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008, 104,  79,  95,  95,  95,  78, 106,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008, 104,  79,  95,  95,  95,  95,  95,  95,  78, 105, 105, 105, 105, 105,},
        {1008,1008,1008,1008,1008,1008, 104, 105, 105, 105, 105, 105, 105, 105, 105, 106,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008, 104, 105, 106,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008, 104,  79,  95,  78, 106,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008, 104, 105,  79,  95,  95,  78, 105, 106,   0,   0,   0,   0,   0,},
        {1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008, 104, 105, 106,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008, 104, 105, 105, 106,   0,   0,   0,   0,   0,   0,   0,},
        {},
        {},
        {1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1016,  84,  85,  86,   0,   0,   0,   0,   0,   0,   0,},
        {1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,  84,  85,  85,  85,  85,  85,  86,1017,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,  84,  89,  95,  88,  86,   0,   0,   0,   0,   0,   0,},
        {1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,  84,  85,  85,  85,  85,  86,1008,1008,1008,1008,1008,1008,1008,1008,1008,  84,  85,  85,  86,1008,1008,1008,1008,1008,1008,1008,  84,  89,  95,  95,  95,  77,  77,  88,  86,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,  84,  85,  85,  85,  85,  85,  85,  86,1008,1008,1008,1008,1008,1008,1008,  84,  89,  95,  95,  95,  88,  86,   0,   0,1009,   0,   0,},
        {1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1001,1008,1008,1008,1008,  84,  89,  95,  95,  95,  95,  88,  86,1008,1008,1008,1008,1008,1008,1008,  84,  89,  95,  95,  88,  86,1008,1008,1008,1008,1008,  84,  89,  95,  95,  95,  95,  77,  77,  77,  88,  86,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,  84,  89,  95,  95,  95,  95,  95,  95,  88,  86,1008,1008,1008,1008,1008,1008,  94,  95,  95,  95,  95,  95,  88,  85,  85,  85,  85,  85,},
        {  85,  85,  85,  85,  85,  86,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,  84,  85,  85,  85,  85,  85,  85,  85,  85,  89,  95,  95,  95,  77,  77,  95,  88,  85,  85,  85,  85,  85,  85,  85,  89,  95,  95,  77,  77,  88,  85,  85,  85,  85,  85,  89,  95,  95,  95,  95,  77,  77,  77,  77,  77,  88,  86,1008,1008,1008,1008,1008,1008,1008,1008,  84,  89,  95,  95,  95,  77,  77,  95,  95,  95,  88,  85,  85,  85,  85,  85,  85,  89,  95,  77,  77,  77,  95,  95,  95,  95,  95,  95,  95,},
        {  95,  95,  95,  95,  95,  88,  86,1008,1008,1008,1008,1008,1008,1008,1008,  84,  89,  95,  95,  95,  77,  77,  77,  95,  95,  95,  95,  95,  77,  77,  77,  77,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  77,  77,  77,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  77,  77,  77,  77,  77,  77,  88,  85,  85,  85,  85,  85,  85,  85,  85,  89,  95,  95,  95,  77,  77,  77,  77,  95,  95,  95,  95,  95,  77,  77,  95,  95,  95,  77,  77,  77,  77,  77,  77,  77,  95,  95,  95,  95,},
        {  95,  77,  77,  77,  95,  95,  88,  85,  85,  85,  85,  85,  85,  85,  85,  89,  95,  95,  77,  77,  77,  77,  77,  77,  95,  95,  95,  95,  77,  77,  77,  77,  77,  77,  77,  77,  95,  95,  95,  95,  95,  95,  77,  77,  77,  77,  77,  95,  95,  95,  95,  95,  95,  95,  95,  77,  77,  77,  77,  77,  77,  77,  77,  77,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  77,  77,  77,  77,  77,  95,  95,  95,  95,  77,  77,  77,  77,  77,  95,  95,  77,  77,  77,  77,  77,  77,  95,  95,  95,  95,},
        };
        int[][] level8w2 = {
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9121,1010,1010,1010,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 115,   0,   0, 116,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9005,1010,1010,1010,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 116,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0, 115,   0,   0, 116,   0,   0,   0,   0,   0,   0,   0,   0,   0, 114,   0,   0,9004,9002,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 114,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 115,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,1010,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 116,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0, 116,   0,9001,   0,   0,   0,   0,   0,   0,   0, 114,   0,   0,   0,   0,   0,   0, 115,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 114,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 115,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1010,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 116,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0, 116,   0,9001,   0,   0,   0,   0,   0,   0,   0, 114,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9004,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1010,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0, 114,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 117,   0,1021,1021,1021,1021,   0,   0,9001,1021,1021,1021,1021,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0, 114,   0,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,1021,1021,1021,1021,1021,1021,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0, 114,   0,   0,   0,   0,   0,   0, 115,   0,   0,   0,   0,9001,9001,   0,   0,9001,9001,   0, 117,   0,   0,   0,9004,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,1021,1021,1021,1021,   0,   0,   0,   0,9001,9004,9002,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,},
        {   0,   0,   0,   0,   0, 114,   0,   0,   0,9001,9004,9001, 115,   0,   0,   0,   0,9001,9004,   0,   0,9002,9001,   0,   0,   0,   0,   0,9001,   0,   0,   0,9001,   0,   0,   0,9004,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,1021,1021,1021,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,9001,9001,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,1021,1021,1021,   0,   0,   0, 116,   0,   0,   0,   0, 114,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,   0,   0, 116,   0,1021,1021,1021,1021,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0, 117,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,   0,   0, 116,   0,   0,   0,   0, 114,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 116,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0, 117,   0,1021,1021,1021,1021,9001,   0,   0,1021,1021,1021,1021,1021, 115,   0,9001,9001,9001,9001,9001,   0,   0,1021,1021,1021,1021,1021,1021,1021,   0,   0,   0,   0,1021,1021,1021,1021,1021,1021,1021,   0,   0, 116,1021,1021,1021,1021,1021,1021,1021,1021,   0,   0,9001,9001, 116,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0, 114,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,1021,1021,1021, 116,   0,1021,1021,1021,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0, 116,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0, 115,9001,9001,9001,9001,9001,9004,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 116,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0, 114,   0,   0,   0,1021,1021,1021,   0,   0,1021,1021,1021,   0,   0,   0,   0, 116,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 116,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9004,1010,1010,1010,   0, 115,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 116,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0, 115,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9120,1010,1010,1010,1010, 115,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 115,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9005,9001,9001,9001,9001,9001,   0,1021,1021,1021,1021,1021,1021,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        };
        Stage level8 = new Stage(level8w1,2,2,7);
        level8.layer2 = new TileMap(level8w2);
        level8.auxlayer2 = new TileMap(level8w2);
        level8.addEnemy(10,156,229,20,40);
        level8.addEnemy(10,255,229,20,40);
        level8.addEnemy(10,571,90,20,40);
        level8.addEnemy(10,710,89,20,40);
        level8.addEnemy(10,783,190,20,40);
        level8.addEnemy(10,955,152,20,40);
        level8.addEnemy(10,1093,129,20,40);
        level8.addEnemy(10,1341,193,20,40);
        level8.addEnemy(10,1351,111,20,40);
        level8.addEnemy(10,1524,91,20,40);
        level8.addEnemy(10,1526,150,20,40);
        level8.addEnemy(10,1532,191,20,40);
        level8.addEnemy(11,1644,226,20,40);
        level8.addEnemy(11,742,222,20,40);
        level8.addEnemy(10,676,190,20,40);
        level8.addEnemy(11,601,108,20,40);
        level8.addEnemy(11,381,50,20,40);
        level8.addEnemy(10,463,211,20,40);
        level8.addEnemy(10,328,210,20,40);
        level8.enlighten = false;
        level8.minLight = 100;
      
      	allStages[setupTimer] = level8;
      break
      case 8:
      	int[][] level9w1 = {
        {},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {},
        {   0,   0,   0,   0,   0,   0,   0, 122,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 122, 122, 122,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 122, 122,   0,   0,   0,   0, 122, 122,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 123, 123,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   8,   0,   0,   0,   8,   0,   0,   0,   8,   0,   0,   0,   8,   0,   0,   0,   8,   0,   0,   0,   0,   0,   0, 122, 122, 122, 122,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 123, 122, 123,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  53, 123,  51,   0,  53, 123,  51,   0,  53, 123,  51,   0,  53, 123,  51,   0,  53, 123,  51,   0,   0,   0,   0,   0, 122, 122, 122, 122,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0, 122, 122, 122,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 122, 122,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  52,   0,   0,   0,   0,   0,   0,   0,  52,   0,   0,   0,   0,   0,   0,   0,  52,   0,   0,   0,   0,   0,   0, 122, 122, 122, 122,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 122, 122, 122, 122, 122,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 123, 122, 123,   0,   0,   0,   0, 122, 122,   0,   0,   0,   0, 122, 122,   0,   0,   0,   0,   0,   0,   0, 122,   0, 122,   0, 122,   0, 122,   0, 122,   0, 122,   0, 122,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 122, 122, 122, 122, 122, 122,   0,   0,   0,},
        {   0,   0,   0,   0,   0, 122,   0,   0,   0, 122,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 122, 122, 122, 122, 122, 122,   0,1009,   0,},
        {   0,   0,   0,   0,   0, 122, 122, 122, 122, 122,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  80,  81,  82,  51,   0,   0,   0,   0,   0,   0,   0,   0,  53,  80,  82, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122,  80,  82, 122, 122, 122, 122, 122, 122,  80,  81,  82,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 123,   0,   0,   0,   0,   0, 123,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 123,   0,   0,   0,   0, 123, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122,  80, 109,  91,  92,  51,   0,   0,   0,   0,   0,   0,   0,   0,  53,  90, 108,  82, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122,  80, 109,  92, 122, 122, 122, 122, 122,  80, 109,  91,  92,},
        {  80,  81,  81,  81,  81,  81,  81,  81,  81,  81,  81,  81,  81,  81,  81,  82,  51,   0,   0,   0,  53,  80,  81,  81,  81,  81,  81,  81,  81,  81,  81,  81,  81,  82,  51,   0,   0,  53,  80,  81,  81,  81,  81,  81,  81,  81,  81,  81,  81,  81,  81,  81, 109,  91,  91,  92,  51,   0,   0,   0,   0,   0,   0,   0,   0,  53,  90,  91,  92,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,  90,  91,  92, 122, 122, 122, 122, 122,  90,  91,  91,  92,},
        {  90,  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,  92,  51,   0,   0,   0,  53,  90,  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,  92,  51,   0,   0,  53,  90,  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,  92,  51,   0,   0,   0,   0,   0,   0,   0,   0,  53,  90,  91, 108,  81,  81,  81,  81,  81,  81,  81,  81,  81,  81,  81,  81,  81,  81,  81,  81,  81,  81,  81, 109,  91, 108,  81,  82, 122, 122,  80, 109,  91,  91,  92,},
        { 100, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 102,   8,   8,   8,   8,   8, 100, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 102,   8,   8,   8,   8, 100, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 102,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8, 100, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 102, 122, 122, 100, 101, 101, 101, 102,},
        };
        int[][] level9w2 = {
        {},
        {},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,9004,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9004,9004,9001,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9005,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,9002,9004,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9002,9001,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,9004,   0,   0,   0,9002,   0,   0,   0,9004,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9002,9001,9001,9001,9004,9001,9001,9001,9002,9001,9001,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,9001,   0,   0,   0,},
        {   0,   0,   0,   0,   0,9001,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,9001,9001,9004,9004,9002,9001,   0,   0,   0,},
        {   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,9001,   0,9001,   0,9001,   0,9001,   0,9001,   0,9001,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,9001,9001,9001,9005,9001,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,9001,   0,   0,   0,   0,9001,9004,9001,9001,9001,9001,9002,9001,9001,9001,9001,9001,9001,9001,9001,9002,9001,9001,9001,9004,9001,   0,   0,9001,9001,9001,9001,9001,9001,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,9001,9001,9002,9004,9001,9001,   0,   0,   0,   0,   0,9005,9001,9001,9001,9004,9001,9001,9004,9130,9001,9001,9001,9004,9001,9001,9001,9001,9001,9004,   0,   0,   0,9001,9001,9004,9004,9001,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9005,9131,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9005,9005,   0,   0,   0,   0,   0,},
        };
        Stage level9 = new Stage(level9w1,7,2,8);
        level9.layer2 = new TileMap(level9w2);
        level9.auxlayer2 = new TileMap(level9w2);
        level9.addEnemy(13,143,143,20,40);
        level9.addEnemy(13,494,184,20,40);
        level9.addEnemy(13,614,183,20,40);
        level9.addEnemy(13,555,143,20,40);
        level9.addEnemy(9,541,239,20,40);
        level9.addEnemy(9,140,178,20,40);
        level9.addEnemy(9,361,77,20,40);
        level9.addEnemy(9,360,139,20,40);
        level9.addEnemy(15,326,163,20,40);
        level9.addEnemy(14,403,163,20,40);
        level9.addEnemy(9,781,138,20,40);
        level9.addEnemy(9,860,138,20,40);
        level9.addEnemy(9,939,138,20,40);
        level9.addEnemy(9,1021,138,20,40);
        level9.addEnemy(13,893,104,20,40);
        level9.addEnemy(13,1463,124,20,40);
        level9.addEnemy(13,1623,125,20,40);
        level9.addEnemy(9,1433,195,20,40);
        level9.addEnemy(9,1647,195,20,40);
        level9.enlighten = false;
        level9.minLight = 100;
  
      
      	allStages[setupTimer] = level9;
      break
      case 9:
      	int[][] level10w1 = {
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 122, 122,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   8,   8,   8,   8,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 122, 122,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  53, 123, 123, 123, 123,  51,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 122, 122,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  52,  52,  52,  52,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 122, 122,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 122, 122, 122,   0,   0,   0,   0,   0,   0,   0,   0,   0, 123, 123,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 123, 123,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 123, 123,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   8,   8,   8,   8,   8,   8,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 122, 122, 123, 122, 122,   0,   0,   0,   0,   0,   0,   0,   0,   0, 122, 122, 122,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  72,  72,  72,  72,  72,  72,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 122, 122, 122,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 122, 122, 122, 122,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  72,  72,  72,  72,  72,  72,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0, 122, 122,   0,   0,   0, 122, 122,   0,   0,   0, 122, 122,   0,   0,   0,   0,   0,   0,   0, 122, 122,   0,   0, 122,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  52,  52,  52,  52,  52,  52,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 122, 122,   0,   0, 122,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 122, 122, 122, 122, 122,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 122, 122, 122, 122, 122, 122,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 122, 122,   0,   0,   0,   0,   0,   0, 122,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 122, 122,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   8,   8,   8,   8,   8,   8,   0,   0,1009,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0, 123, 123, 123, 123,   0,   0, 122, 122,   0,   0,   0, 122, 122,   0,   0, 123, 123, 123, 123, 122,   0,   0, 122, 122, 122, 122,   0,   0,   0,   0,   0,   0, 122, 122,   0,   0,   0,   0, 122,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 122, 122,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 110, 111, 111, 111, 112,},
        { 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123,   0,   0, 122, 122,   0,   0,   0, 122, 122,   0,   0, 123, 123, 123, 123, 122,   0,   0, 122, 122, 122, 122, 123, 123,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 122, 122,   0,   0,   0,   0,   0,   0,   0, 122,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 122, 122, 122,   0,   0,   0,   0,   0,   0,   0,   0, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122,},
        { 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 123, 123, 123, 123, 122, 122, 122, 122, 122, 122, 122, 123, 123,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122,},
        { 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8, 123, 123, 123, 122, 122, 122, 122, 122, 122, 122, 122, 123, 123,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123,},
        };
        int[][] level10w2 = {
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9004,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9004,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9004,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9002,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9004,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,9001,9001,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9004,9004,9001,9001,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {},
        {},
        {},
        {},
        {},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9004,9001,9001,9001,9001,9001,9004,9001,9005,9001,9001,9002,9001,9005,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,9001,9004,9001,9001,9001,9001,9005,9001,9001,9141,9001,9005,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9005,9140,9001,9001,9001,9001,9002,9005,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        };
        Stage level10 = new Stage(level10w1,7,2,9);
        level10.layer2 = new TileMap(level10w2);
        level10.auxlayer2 = new TileMap(level10w2);
        level10.addEnemy(13,1183,103,20,40);
        level10.addEnemy(13,1202,103,20,40);
        level10.addEnemy(13,1524,103,20,40);
        level10.addEnemy(13,1541,103,20,40);
        level10.addEnemy(13,822,104,20,40);
        level10.addEnemy(13,842,104,20,40);
        level10.addEnemy(13,342,123,20,40);
        level10.addEnemy(15,566,80,20,40);
        level10.addEnemy(15,546,184,20,40);
        level10.addEnemy(9,340,77,20,40);
        level10.addEnemy(9,289,137,20,40);
        level10.addEnemy(9,390,137,20,40);
        level10.addEnemy(9,291,217,20,40);
        level10.addEnemy(9,390,218,20,40);
        level10.addEnemy(9,1009,237,20,40);
        level10.addEnemy(9,1458,238,20,40);
        level10.addEnemy(9,611,177,20,40);
        level10.addEnemy(9,571,257,20,40);
        level10.enlighten = false;
        level10.minLight = 100;

      
      	allStages[setupTimer] = level10;
      break
      case 10:
      	int[][] level11w1 = {
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 133,   0,   0,   0,   0,   0,   0,   0, 133,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 133,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 133, 133, 133,   0,   0,1013,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1006,1006,1006,   0,   0,   0,   0,   0,1006,1006,1006,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 133, 133, 133,   0,   0,   0,   0,1009,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 151, 129, 130, 131, 152,1006,1006,1006, 151, 129, 130, 131, 152,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 133, 133, 133,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 133, 132,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 151, 129, 130, 131, 152,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 133, 133,   0,   0, 133, 133,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 133,   0,   0,   0,   0,   0,   0,   0,   0,   0, 133, 133,   0, 133, 133,   0,   0, 133, 133,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 133, 133, 133,   0,   0,   0,   0,   0,   0,   0,   0,   0,1006,1006,1006,1006,1006,   0,   0,   0,1006,1006,1006,1006,1006,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 133,   0, 133,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 133, 133,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 133, 133, 133,   0,   0,   0,   0,   0,   0,   0,   0, 151, 129, 130, 130, 130, 131, 152,   0, 151, 129, 130, 130, 130, 131, 152,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 133, 133,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 133, 133, 133,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 133, 133,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1006,   0,1006,   0,1006,   0,1006,   0,1006,   0,1006,   0,1006,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 133, 133, 133, 133, 133,   0,   0,   0,   0,   0,   0,1006,1006,1006,1006,1006,1006,1006,1006,   0,1006,1006,1006,1006,1006,1006,1006,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 124, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 126,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 133, 133,   0,   0,   0, 133, 133,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 133, 133, 133, 133, 133,   0,   0,   0,   0,   0, 124, 125, 125, 125, 125, 125, 130, 130, 131, 133, 129, 130, 130, 125, 125, 125, 125, 126,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 124, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 126,   0,   0,   0,   0, 149,   0,   0,   0, 149,   0,   0,   0, 149,   0,   0,   0, 149,   0,   0,   0, 133, 133,   0,   0,   0, 133, 133,   0,},
        { 125, 125, 125, 125, 125, 125, 126,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 124, 135, 135, 135, 135, 135, 146, 133,   0,   0,   0,   0,   0, 133, 144, 135, 135, 135, 135, 130, 131, 133, 133, 133, 129, 130, 131, 133, 133, 129, 131, 133, 133, 129, 130, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 125, 131, 133, 129, 125, 131, 133, 129, 125, 131, 133, 129, 125, 131, 133, 129, 125, 126,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        { 135, 135, 135, 135, 135, 135, 135, 126,   0,   0,1006,1006,1006,1006,1006,   0,   0,   0, 124, 135, 135, 135, 135, 135, 136, 133, 133,   0,   0,   0,   0,   0, 133, 133, 134, 135, 135, 136,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 134, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 136,   0,   0,   0, 137,   0,   0,   0, 137,   0,   0,   0, 137,   0,   0,   0, 134, 136,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        { 135, 135, 135, 135, 135, 135, 135, 135, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 135, 135, 135, 135, 135, 135, 136, 133, 133, 133, 133, 133, 133, 133, 133, 133, 134, 135, 135, 136,   0,   0,   0,   0,   0,   0, 149,   0,   0,   0, 149, 149,   0,   0,   0,   0, 134, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 136,   0,   0,   0, 137,   0,   0,   0, 137,   0,   0,   0, 137,   0,   0,   0, 134, 136,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        { 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 130, 130, 130, 130, 130, 130, 130, 130, 130, 135, 135, 135, 135, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 125, 125, 125, 135, 125, 125, 125, 135, 125, 125, 125, 135, 125, 125, 125, 135, 136, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149,},
        };
        int[][] level11w2 = {
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9004,   0,9001,9001,9001,9001,9001,   0,9002,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9004,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9002,9152,9001,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9002,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9002,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,9001,9001,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,9001,9001,9001,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9004,   0,   0,   0,   0,   0,   0,   0,   0,   0,9004,9001,   0,9001,9001,   0,   0,9001,9001,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9004,9001,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9004,9001,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,9001,9001,9001,   0,   0,   0,9001,9001,9001,   0, 153,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {},
        {   0,   0,   0,   0, 153,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 153,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 153,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,9001,9002,   0,},
        {},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 153,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,9001,9150,   0,   0,   0,   0,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,9001,9001,9001,   0,9001,9001,9001,   0,9001,9001,9001,   0,   0,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9004,9001,9001,9001,9005,9001,9001,9001,9002,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,9001,9001,9001,   0,9001,9151,9001,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        };
        Stage level11 = new Stage(level11w1,8,3,10);
        level11.layer2 = new TileMap(level11w2);
        level11.auxlayer2 = new TileMap(level11w2);
        level11.addEnemy(19,241,181,20,40);
        level11.addEnemy(19,240,101,20,40);
        level11.addEnemy(21,579,254,20,40);
        level11.addEnemy(21,797,278,20,40);
        level11.addEnemy(21,1035,277,20,40);
        level11.addEnemy(19,927,281,20,40);
        level11.addEnemy(20,1262,101,20,40);
        level11.addEnemy(21,1479,274,20,40);
        level11.addEnemy(21,1722,276,20,40);
        level11.addEnemy(21,1639,275,20,40);
        level11.addEnemy(21,1561,278,20,40);
        level11.addEnemy(19,1603,141,20,40);
        level11.addEnemy(20,582,111,20,40);
        level11.enlighten = false;
        level11.minLight = 100;
      
      	allStages[setupTimer] = level11;
      break
      case 11:
      	int[][] level12w1 = {
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 140, 140,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 149, 149, 149, 149,   0,   0,   0,   0,   0,   0,   0,   0,   0, 149, 149, 149, 149, 149,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 149, 149, 149, 149, 149,   0,   0,   0,   0,   0,   0,   0,   0, 149, 149, 149, 139, 139, 139, 149, 149, 149,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 140, 140,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 151, 128, 128, 128, 128, 152,   0,   0,   0,   0,   0,   0,   0, 151, 128, 139, 139, 139, 128, 152,   0,   0,   0,   0,   0,   0,   0,   0,   0, 149,   0,   0, 149,   0,   0, 139, 139, 139, 139, 139, 152,   0,   0,   0,   0,   0,   0,   0, 139, 139, 139, 150, 150, 150, 139, 139, 139,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,1006,1006,1006, 140, 140,1006,1006,1006,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 151, 148, 148, 148, 148, 152,   0,   0,   0,   0,   0,   0,   0, 151, 138, 152, 140, 151, 148, 152,   0,   0,   0, 140, 140, 140,   0,   0, 151, 139, 140, 140, 139,   0,   0, 139, 140, 140, 140, 139, 152,   0,   0,   0,   0,   0,   0,   0, 150, 150, 150,   0,   0,   0, 150, 150, 150,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0, 139, 139, 139, 140, 140, 139, 139, 139,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 150, 150, 150, 150,   0,   0,   0,   0,   0,   0,   0,   0, 151, 138, 152, 140, 140, 140,   0,   0,   0,   0, 140,   0, 140,   0,   0, 151, 139, 140, 140, 139,   0,   0, 139, 140, 140, 140, 139, 152,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 140, 140,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1006,   0,   0,   0, 151, 138, 152, 140, 140, 140,   0,   0,   0,   0, 140,   0, 140,   0,   0, 151, 139, 140, 140, 139,   0,   0,   0,   0,   0,   0, 139, 152,   0,   0,   0,   0,   0,   0,   0,  72,  72,  72,  72,  72,  72,  72,  72,  72,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,1006,1006,1006, 140, 140,1006,1006,1006,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 149, 149,   0,   0,   0,   0, 151, 128, 128, 128, 152,   0, 151, 138, 152, 140, 140, 140,   0,   0,   0,   0, 140,   0, 140,   0,   0,   0, 150,   0,   0,   0,   0,   0,   0,1006,   0,   0, 139, 152,   0,   0,   0,   0,   0,   0,   0, 150, 150,   0,   0,   0,   0,   0, 150,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0, 139, 139, 139, 140, 140, 139, 139, 139,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 151, 128, 128,   0,   0,   0,   0, 151, 148, 148, 148, 152,   0, 151, 148, 139, 139, 139, 148, 152,   0,   0,   0, 140, 140, 140,   0,   0,   0,   0,   0,   0,   0,   0,   0, 139, 139,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 149,   0,   0,   0,   0,   0, 149,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 140, 140,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 151, 148, 148,   0,   0, 149, 149,   0, 150, 150, 150,   0,   0,   0, 150, 150, 150, 150, 150,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 149, 149, 149,   0,   0,   0, 139, 139,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 139, 140, 140, 140, 140, 140, 139,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,1006,1006,1006, 140, 140,1006,1006,1006,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 128, 128, 152,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 151, 139, 139, 139,   0,   0,   0, 139, 139,   0,   0,   0,   0,   0,   0,   0,   0,   0,1006, 128,   0, 139,   0,   0,   0,   0,   0, 139,   0, 128,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0, 139, 139, 139, 140, 140, 139, 139, 139,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 148, 148, 152,   0, 149, 149, 149,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 151, 139, 139, 139,   0,   0,   0, 150, 150,   0,   0,   0,   0,   0,   0,   0,   0,1006, 128, 138,   0, 139,   0,   0,   0,   0,   0, 139,   0, 128, 128,   0,   0,   0,   0,   0,   0,   0,   0,   0,1009,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 140, 140,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 151, 128, 128, 128, 152,   0,   0,   0,1006,   0,   0, 150, 150,   0, 151, 128, 128, 128,   0,   0,   0,   0,   0,1006,1006,1006,1006,1006,1006,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 149, 149,   0,   0,   0,   0,   0,   0,   0,   0,1006, 128, 138, 138,   0, 139,   0,   0, 140, 140,   0, 139,   0, 138, 128, 128,1018,1018,1018,1018,1018,1018,1018, 128, 128, 128,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,1006,1006,1006, 140, 140,1006,1006,1006,   0,   0,   0,   0,   0,   0,   0, 151, 148, 148, 148, 152,   0, 151, 128, 128, 152,   0,   0,   0,   0, 151, 138, 138, 138,   0,   0,   0, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128,   0,   0,1006,1006,   0,   0,   0,   0, 151, 139, 139,   0,   0,   0,   0,   0,   0,   0,   0, 128, 138, 138, 138,   0, 139, 139,   0,   0, 139,   0, 139,   0, 138, 138, 138,1019,1019,1019,1019,1019,1019,1019, 138, 138, 138,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0, 139, 139, 139, 140, 140, 139, 139, 139,   0,   0,   0,   0,   0,   0,   0,   0, 150, 150, 150,   0,   0, 151, 148, 148, 152,   0,   0,   0,   0, 151, 148, 148, 148,   0,   0,   0, 138, 138, 138, 138, 138, 138, 138, 138, 138, 138, 151, 139, 139, 139,   0,   0,   0,   0, 151, 139, 139,   0,   0,   0,   0,   0,   0,   0, 128, 138, 138, 138, 138,   0,   0, 139,   0,   0, 139,   0, 139,   0, 138, 138, 138,1007,1007,1007,1007,1007,1007,1007, 138, 138, 138,},
        { 128, 128, 128, 128, 128, 128, 128,   0,   0,   0,   0,   0, 140, 140,   0,   0,   0,   0,   0, 138, 138, 138,   0,   0,   0,   0,   0,   0,   0,   0,   0, 150, 150,   0,   0,   0,   0,   0,   0, 150, 150, 150,   0,   0,   0, 140, 140, 140, 138, 138, 138, 138, 138, 138, 138, 151, 139, 139, 139,   0,   0,   0,   0,   0, 150, 150,   0,   0,   0,   0,   0,   0,   0, 140, 140, 138, 138, 138,   0,   0, 140, 140,   0, 139,   0, 140,   0, 138, 138, 138,1007,1007,1007,1007,1007,1007,1007, 138, 138, 138,},
        { 138, 138, 138, 138, 138, 138, 138,   0,   0,1006,1006,1006, 140, 140,1006,1006,1006,   0,   0, 138, 138, 138,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 140, 140, 140, 138, 138, 138, 138, 138, 138, 138,   0, 150, 150, 150,   0,   0,   0,1001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 140, 140, 138, 138, 138,   0,   0,   0,   0,   0, 139,   0,   0,   0, 138, 138, 138, 128, 128, 128, 128, 128, 128, 128, 138, 138, 138,},
        { 148, 148, 148, 148, 148, 148, 148, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 148, 148, 148, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 148, 148, 148, 148, 148, 139, 139, 139, 139, 139, 139, 139, 139, 139, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148,},
        };
        int[][] level12w2 = {
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9005,   0,   0,   0,   0,   0,   0,9001,9002,9001,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9163,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9004,9004,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,9001,9004,9001,9001,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,9002,9001,   0,   0,   0,   0,9001,9004,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9161,9002,9001,9001,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,9001,9001,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9005,9001,9001,9001,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9004,9004,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9004,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,9001,9001,9004,9001,9001,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,9001,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9004,9004,   0,   0,   0,   0,   0,9001,9004,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9004,9004,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9160,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9162,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9005,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9005,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {},
        };
        Stage level12 = new Stage(level12w1,8,4,11);
        level12.layer2 = new TileMap(level12w2);
        level12.auxlayer2 = new TileMap(level12w2);
        level12.addEnemy(21,1629,57,20,40);
        level12.addEnemy(21,1652,57,20,40);
        level12.addEnemy(19,1605,204,20,40);
        level12.addEnemy(19,1651,184,20,40);
        level12.addEnemy(19,1624,242,20,40);
        level12.addEnemy(19,1574,282,20,40);
        level12.addEnemy(19,1698,284,20,40);
        level12.addEnemy(18,1826,185,20,40);
        level12.addEnemy(18,1865,185,20,40);
        level12.addEnemy(18,1905,186,20,40);
        level12.addEnemy(19,406,241,20,40);
        level12.addEnemy(19,525,183,20,40);
        level12.addEnemy(19,1642,122,20,40);
        level12.addEnemy(20,1084,85,20,40);
        level12.enlighten = false;
        level12.minLight = 100;
      
      	allStages[setupTimer] = level12;
      break
      case 12:
      	int[][] level13w1 = {
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 142, 142,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 142, 142,   0,   0,   0,   0,   0,   0, 142, 142,   0,   0,   0,   0, 142, 142,   0,   0,   0,   0, 142, 142,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 142,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 142, 142,   0,   0,   0,   0,   0,   0,   0,   0,   0, 142, 142,   0,   0,   0,   0,   0,   0, 142, 142,   0,   0,   0,   0, 142, 142,   0,   0,   0,   0, 142, 142,   0,   0,   0,   0,   0,   0,   0, 142, 142, 142, 142,   0,   0,   0,   0, 142,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 142, 142,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 142, 142,   0,   0,   0,   0, 142, 142,   0,   0,   0,   0, 142, 142,   0,   0,   0,   0,   0,   0,   0, 142,   0,   0, 142,   0,   0,   0,   0, 142,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 142, 142,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 142, 142, 142, 142,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0, 142,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 142,   0,   0,   0,   0,   0,   0, 142,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 141,1018,1018, 141,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 141,1018,1018,1018,1018, 141,1019,1019, 141,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018, 141,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1009,   0,},
        {   0,   0,   0,   0,   0,   0,   0, 142, 142, 142,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 142, 142,   0,   0, 142, 142,   0,   0, 142, 142,   0,   0,   0,   0,   0,   0,   0, 142,   0,   0,   0,   0, 142,   0,   0,   0,   0,   0,   0, 141,1018,1018,1018,1018, 141,1019,1019,1019,1019, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141,1018,1018,1018,1018,1018,1018, 141,1018,1018, 141, 141,1018,1018,1018,1018, 141, 141,1018,1018,1018,1018,1018, 141, 141, 141,},
        { 141, 141, 141,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018, 141,1018,1018,1018,1018, 141,1018,1018,1018,1018,1018,1018, 141,1019,1019,1019,1019, 141,1007,1007,1007,1007, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141,1019,1019,1019,1019,1019,1019, 141,1019,1019, 141, 141,1019,1019,1019,1019, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141,},
        { 141, 141, 141,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019, 141,1019,1019,1019,1019, 141,1019,1019,1019,1019,1019,1019, 141,1007,1007,1007,1007, 141,1007,1007,1007,1007, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141,1007,1007,1007,1007,1007,1007, 141, 141, 141, 141, 141,1007,1007,1007,1007, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141,},
        {},
        {},
        };
        int[][] level13w2 = {
        {},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,9001,9004,   0,9001,9001,   0,9004,9001,   0,   0,   0,   0,9004,9004,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,9005,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,9001,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,9001,9001,   0,9001,9001,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,9002,9001,9001,9002,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,},
        {},
        {   0,   0,   0,   0,   0,   0,   0,   0,9004,   0,   0,   0,   0,9001,9001,9001,9001,9001,9001,   0,   0,   0,9002,   0,   0,9001,9001,   0,   0,9004,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,9001,9001,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,9001,   0,   0,   0,   0,9001,   0,   0,   0,9001,   0,   0,   0,9001,   0,   0,9001,   0,   0,9001,   0,   0,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,9001,   0,   0,9001,   0,   0,9001,   0,   0,   0,9001,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,9001,9001,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,9004,   0,   0,   0,   0,9004,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {},
        {},
        {},
        {},
        };
        Stage level13 = new Stage(level13w1,8,0,12);
        level13.layer2 = new TileMap(level13w2);
        level13.auxlayer2 = new TileMap(level13w2);
        level13.addEnemy(18,106,228,20,40);
        level13.addEnemy(18,484,186,20,40);
        level13.addEnemy(18,544,186,20,40);
        level13.addEnemy(18,1155,186,20,40);
        level13.addEnemy(18,1534,203,20,40);
        level13.addEnemy(18,1656,204,20,40);
        level13.addEnemy(18,1856,207,20,40);
        level13.addEnemy(18,1915,207,20,40);
        level13.addEnemy(18,935,225,20,40);
        level13.addEnemy(18,1577,204,20,40);
        level13.addEnemy(20,162,102,20,40);
        level13.addEnemy(20,514,102,20,40);
        level13.addEnemy(20,813,104,20,40);
        level13.addEnemy(20,1232,62,20,40);
        level13.addEnemy(20,1374,100,20,40);
        level13.addEnemy(18,816,228,20,40);
        level13.addEnemy(18,1355,183,20,40);
        level13.addEnemy(18,1397,185,20,40);
        level13.addEnemy(20,1753,103,20,40);
        level13.addEnemy(18,285,224,20,40);
        level13.addEnemy(18,347,225,20,40);
        level13.addEnemy(18,687,225,20,40);
        level13.enlighten = false;
        level13.minLight = 100;
      
      	allStages[setupTimer] = level13;
      break
      case 13:
      	int[][] level14w1 = {
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 141,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 141, 141,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 141, 141, 152,   0,   0,   0,   0,   0,   0,   0, 151, 141, 141, 152,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 141, 141,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 141, 152,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 150, 150,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 150, 150,   0,   0,   0,   0,   0,   0,   0,   0, 151, 141, 141, 152,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 150, 150,   0,   0,   0,   0,   0,   0, 141,   0,   0,   0,   0, 141, 152,   0,   0,   0,   0,   0,   0,   0, 141, 141,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 141, 141, 152,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 151, 141, 141, 152,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 141,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0, 141, 141,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 149,   0, 150, 150,   0,   0,   0,   0,   0, 149,   0,   0,   0,   0,   0,   0, 149, 149,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 149,   0,   0,   0,   0,   0,   0, 149,   0,   0, 142, 142,   0,   0, 149, 149,   0,   0, 150,   0,   0, 149,   0,   0,   0, 142, 142, 142,   0,   0, 149, 149, 149, 149, 149,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0, 142, 142,   0,   0,   0,   0,   0,   0, 141, 141, 141, 141,   0,   0,   0,   0,   0,   0, 141, 141,   0,   0, 141, 141, 141, 141, 141, 141,   0,   0,   0,   0,   0,   0,   0, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 142, 142, 142, 141, 141, 141, 141, 142, 142, 142, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 142, 142, 141, 141, 141, 141, 141, 141, 142, 142, 141, 141, 141, 141, 141, 142, 142, 142, 141, 141, 141, 141, 141, 141, 141, 141, 141,   0,   0,   0,},
        {   0,   0,   0,   0,   0, 142, 142,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 142, 142,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 142, 142, 142,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 142, 142, 142,   0,   0,   0,   0,   0,   0,   0, 151, 141,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 151, 141,   0,   0,   0,},
        {   0,   0,   0, 142, 142,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 151, 141,   0,   0,   0,},
        {   0,   0,   0, 142, 142,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 151, 141,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 151, 141,   0,   0,   0,},
        {   0,   0, 142, 142,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 151, 141,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 151, 141,   0,1009,   0,},
        { 141, 141, 141,   0,   0,   0,   0,   0, 142, 142,   0,   0,   0,   0,   0,   0,   0, 142, 142,   0,   0,1001,   0,   0,   0,   0, 142, 142,   0,   0,1001,   0,   0,   0,   0, 142, 142,   0,1001,   0,   0,   0,   0,   0, 142, 142,   0,   0,   0,   0,   0,1001,   0,   0, 142, 142,   0,   0,   0,1001,   0,   0,   0, 142, 142,   0,   0,   0,   0,   0,1001,   0, 142, 142,   0,   0,   0,   0,1001,   0,   0,   0, 142, 142,   0,   0,1001,   0,   0,   0, 142, 142,   0,   0,   0,   0,   0, 141, 141, 141,},
        {},
        {},
        {},
        };
        int[][] level14w2 = {
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9004,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,9001,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9002,9004,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9002,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,   0,   0,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9002,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,},
        {   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9004,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9004,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,},
        {   0,   0,   0,   0,   0,9001,9002,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9002,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9005,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9005,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9180,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9005,   0,   0,   0,   0,   0,   0,},
        {   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {},
        {   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,9001,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,},
        {},
        {},
        {},
        };
        Stage level14 = new Stage(level14w1,8,1,13);
        level14.layer2 = new TileMap(level14w2);
        level14.auxlayer2 = new TileMap(level14w2);
        level14.addEnemy(21,1812,215,20,40);
        level14.addEnemy(21,1649,213,20,40);
        level14.addEnemy(21,1449,215,20,40);
        level14.addEnemy(21,1271,216,20,40);
        level14.addEnemy(21,1089,216,20,40);
        level14.addEnemy(21,890,216,20,40);
        level14.addEnemy(21,708,217,20,40);
        level14.addEnemy(21,529,215,20,40);
        level14.addEnemy(21,349,216,20,40);
        level14.addEnemy(21,170,217,20,40);
        level14.addEnemy(22,337,121,20,40);
        level14.addEnemy(22,487,121,20,40);
        level14.addEnemy(22,637,121,20,40);
        level14.addEnemy(22,787,121,20,40);
        level14.addEnemy(22,927,121,20,40);
        level14.addEnemy(22,1067,121,20,40);
        level14.addEnemy(22,1207,121,20,40);
        level14.addEnemy(22,1337,121,20,40);
        level14.addEnemy(22,1477,121,20,40);
        level14.addEnemy(22,1607,121,20,40);
        level14.addEnemy(22,1737,121,20,40);
        level14.addEnemy(22,210,121,20,40);
        level14.addEnemy(22,104,124,20,40);
        level14.addEnemy(19,589,63,20,40);
        level14.addEnemy(19,889,63,20,40);
        level14.addEnemy(19,1093,59,20,40);
        level14.addEnemy(19,1666,61,20,40);
        level14.addEnemy(19,1853,4,20,40);
        level14.enlighten = false;
        level14.minLight = 100;
      
      	allStages[setupTimer] = level14;
      break
      case 14:
      	int[][] level15w1 = {
        {},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 143,   0,   0,   0,   0,   0,   0,   0,   0, 143,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 142,   0,   0, 142, 142,   0,   0, 143,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 142, 143, 143,   0,   0,   0,   0,   0,   0, 142, 143, 143,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 143, 143,   0,   0,   0,   0,   0,   0, 143, 142,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 143, 143, 143, 143,   0,   0,   0,   0, 143, 143, 143, 143,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 142, 143, 143,1018,1018,1018,1018,1018, 143, 143, 143, 143,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 143, 143, 143, 143,   0, 142, 142,   0, 143, 143, 143, 143,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 143, 143, 143,1019,1019,1019,1019,1019, 143, 143, 143, 143,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 143, 143, 143, 143, 143,   0,   0,   0,   0, 143, 143, 143, 143,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 142,   0,   0,   0, 142,   0,   0,   0,   0,   0,   0,   0, 143, 143, 143, 143, 143,1007,1007,1007,1007, 143, 143, 143, 143,   0,   0,   0,   0,   0,   0,   0,   0, 142, 142,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 142, 143, 143, 143, 143, 143,1018,1018,1018,1018, 143, 143, 143, 143, 142,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 143, 143, 141, 143, 143, 143,1007,1007,1007,1007, 143, 143, 143, 143, 142,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 142, 143, 143, 143, 143, 143,1019,1019,1019,1019,1019,1019, 143, 143, 143, 143, 143,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0, 142,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 142, 142, 142,   0, 142, 142, 142,   0,   0,   0, 142, 142, 142, 141, 141, 143, 143, 143,1007,1007,1007,1007,1007, 143, 143, 143, 143,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 142, 142, 143, 143, 143,1007,1007,1007,1007,1007,1007,1007, 143, 143, 142, 142, 143, 143,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 142, 142, 142, 141, 141, 143, 143, 143,1007,1007,1007,1007,1007, 143, 143, 143, 143,   0,   0,   0,   0,   0,   0,   0, 142, 142,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 142, 142, 143, 143, 143, 143,1007,1007,1007,1007,1007,1007,1007, 143, 143, 143, 142, 142, 142, 142,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 142, 142, 142, 142, 141, 143, 143, 143,1007,1007,1007,1007,1007,1007,1007, 143, 143, 143,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 142, 142, 142, 143, 143, 143, 143,1007,1007,1007,1007,1007,1007,1007, 143, 143, 143, 141, 141, 142, 142,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 142, 142, 141, 141, 141, 141, 143, 143, 143,1007,1007,1007,1007,1007,1007,1007, 143, 143, 143, 143,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018, 141, 141, 141, 141, 141, 141, 141, 142, 142, 143, 143, 143,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007, 143, 143, 141, 141, 141, 142,   0,   0,   0,   0,1009,   0,   0,},
        { 141, 141, 141, 141, 141, 141,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 142, 142, 141, 141, 141, 143, 143,1007,1007,1007,1007,1007,1007,1007,1007,1007, 143, 143, 143, 143, 143,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019, 141, 141, 141, 141, 141, 141, 141, 141, 142, 143, 143, 143, 143,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007, 143, 143, 143, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141,},
        { 141, 141, 141, 141, 141, 141, 141,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 143, 143, 143,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007, 143, 143, 143, 143,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007, 141, 141, 141, 141, 141, 141, 141, 142, 142, 143, 143, 143,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007, 143, 143, 143, 141, 141, 141, 141, 141, 141, 141, 141,},
        { 141, 141, 141, 141, 141, 141, 141, 141,1007,1007,1007,1007,1007,1007,1007,1007,1007, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 143, 143,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007, 143, 143, 143, 143, 143, 143,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007, 143, 141, 141, 141, 141, 141, 141, 141, 142, 142, 143,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007, 143, 143, 143, 141, 141, 141, 141, 141, 141, 141,},
        { 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 143,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007, 143, 143, 143, 143, 143, 143, 143, 143, 143, 143, 143, 143, 143, 143, 143, 143, 141, 141, 141, 141, 141, 143, 143, 143, 143,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007, 143, 143, 143, 141, 141, 141, 141, 141,},
        };
        int[][] level15w2 = {
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9002,   0,   0,   0,   0,   0,   0,   0,   0,   0,9002,9004,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,1021,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,1021,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,9002,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,9001,9001,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,9001,   0,9001,9001,   0,9001,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,9002,   0,   0,   0,9004,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9002,   0,   0,9001,9001,9001,   0,   0,9001,9001,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,},
        {   0,   0,   0,   0,9004,   0,   0,   0,9001,9001,9001,9001,   0,9001,9001,9001,9001,   0,   0,   0,   0,9001,9001,9001,   0,9001,9001,9001,   0,   0,   0,9001,9004,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,9001,9001,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,9001,9001,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9005,9001,   0,   0,9001,9001,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9005,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 153,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,9001,9001,   0,   0,   0,   0,},
        {   0,   0,   0, 153,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 153,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0, 153,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9005,9190,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {},
        };
        Stage level15 = new Stage(level15w1,8,1,14);
        level15.layer2 = new TileMap(level15w2);
        level15.auxlayer2 = new TileMap(level15w2);
        level15.addEnemy(18,146,226,20,40);
        level15.addEnemy(18,347,225,20,40);
        level15.addEnemy(18,217,224,20,40);
        level15.addEnemy(18,277,225,20,40);
        level15.addEnemy(18,767,64,20,40);
        level15.addEnemy(18,1065,205,20,40);
        level15.addEnemy(18,1171,204,20,40);
        level15.addEnemy(18,1259,206,20,40);
        level15.addEnemy(20,816,14,20,40);
        level15.addEnemy(20,1636,55,20,40);
        level15.addEnemy(21,480,56,20,40);
        level15.addEnemy(21,1381,36,20,40);
        level15.addEnemy(19,484,221,20,40); 
        level15.addEnemy(19,1371,201,20,40);
        level15.enlighten = false;
        level15.minLight = 100;
      
      	allStages[setupTimer] = level15;
      break
      case 15:
      	int[][] level16w1 = {
        {},
        {},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  77,  77,  77,  77,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {},
        {},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  77,  77,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  77,  77,   0,   0,   0,   0,   0,   0,  77,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {},
        {   0,   0,   0,   0,   0,   0,   0,   0,  77,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  77,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  77,   0,   0,   0,   0,   0,1014,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,  77,  77,  77,   0,   0,   0,   0,   0,   0,   0,   0,   0,  77,   0,   0,  77,   0,   0,   0,   0,   0,   0,  77,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  77,  77,  77,   0,   0,   0,   0,   0,   0,  77,   0,   0,   0,  77,   0,   0,   0,  77,   0,   0,   0,   0,   0,   0,   0,  77,  77,  77,   0,   0,   0,   0,   0,   0,1009,   0,},
        {  84,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  86,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  77,  77,  77,   0,   0,   0,   0,   0,   0,   0,   0,  77,  77,  77,   0,   0,   0,   0,  84,  85,  85,  85,  85,  86,   0,   0,  84,  85,  85,  85,  86,   0,   0,  84,  85,  85,  86,  77,  77,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  77,  77,  84,  85,  85,  85,  85,  85,  85,  85,  85,  86,},
        {  94,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  88,  85,  86,   0,   0,   0,  87,   0,   0,  87,   0,   0,   0,  84,  85,  85,  85,  85,  85,  85,  85,  86,   0,   0,   0,   0,  77,  77,  77,   0,   0,   0,   0,  94,  95,  95,  95,  95,  96,   0,   0,  94,  95,  95,  95,  96,   0,   0,  94,  95,  95,  88,  85,  85,  85,  86,   0,   0,   0,  84,  85,  86,   0,   0,  87,   0,   0,  84,  85,  86,   0,   0,   0,  84,  85,  85,  85,  89,  95,  95,  95,  95,  95,  95,  95,  95,  96,},
        {  94,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  96,   0,   0,   0,  97,   0,   0,  97,   0,   0,   0,  94,  95,  95,  95,  95,  95,  95,  95,  96,   0,   0,   0,   0,  77,  77,  77,   0,   0,   0,   0,  94,  95,  95,  95,  95,  96,   0,   0,  94,  95,  95,  95,  96,   0,   0,  94,  95,  95,  95,  95,  95,  95,  96,   0,   0,   0,  94,  95,  96,   0,   0,  97,   0,   0,  94,  95,  96,   0,   0,   0,  94,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  96,},
        {  94,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  96,   0,   0,   0,  97,   0,   0,  97,   0,   0,   0,  94,  95,  95,  95,  95,  95,  95,  95,  96,   0,   0,   0,   0,  77,  77,  77,   0,   0,   0,   0,  94,  95,  95,  95,  95,  96,   0,   0,  94,  95,  95,  95,  96,   0,   0,  94,  95,  95,  95,  95,  95,  95,  96,   0,   0,   0,  94,  95,  96,   0,   0,  97,   0,   0,  94,  95,  96,   0,   0,   0,  94,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  96,},
        { 104, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 106,   8,   8,   8, 107,   8,   8, 107,   8,   8,   8, 104, 105, 105, 105, 105, 105, 105, 105, 106,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8, 104, 105, 105, 105, 105, 106,   8,   8, 104, 105, 105, 105, 106,   8,   8, 104, 105, 105, 105, 105, 105, 105, 106,   8,   8,   8, 104, 105, 106,   8,   8, 107,   8,   8, 104, 105, 106,   8,   8,   8, 104, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 106,},
        };
        int[][] level16w2 = {
        {},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,9001,9001,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,9001,   0,   0,9001,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,9001,9001,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,9001,9001,9001,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,9001,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,1021,1021,   0,   0,9001,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,9001,9001,   0,   0,9001,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,9001,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,1021,1021,   0,1021,1021,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0, 163,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,9001,9001,   0,   0,9001,   0,   0,   0,9001,9001,9001,9001,9001,   0,   0,   0,9001,9001,   0,   0,9001,   0,   0,9001,9001,   0,   0,   0,9004,9002,   0,   0,   0,9001,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0, 162,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,9001,   0,   0,   0,9001,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,9001,9001,   0,   0, 163,   0,   0,   0,   0,   0,   0,   0,   0,   0, 163,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0, 163,   0,9001,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,},
        {   0,   0,   0,   0,   0, 162,   0,   0,9001,   0,   0, 163,   0,   0, 163,   0,   0,9001,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,1021,   0,   0,9001,9001,   0,   0, 162,   0,   0, 163,   0,9001,   0,   0,   0,   0, 162,   0,9001,   0,   0,   0,   0,9001,9001,9001,   0, 162,   0,9001,   0,   0,   0,   0,9001,9001,   0,9001,9001,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,9001,   0,9001,   0,   0,},
        {   0,   0,   0,   0,   0, 162,   0,9001,9005,9001,   0, 162,   0,   0, 162,   0,   0,9001,   0,9002,   0,   0,9004,   0,9001,   0,   0,   0,   0,9001,   0,   0, 163,   0,   0,   0,9001,9001,   0,   0,9004,   0,   0,9001,9001,   0,   0, 162,   0,   0, 162,   0,9001,   0, 163,   0,   0, 162,   0,9001,   0,   0,   0,   0,9001,9001,9001,   0, 162,   0,9001,   0,   0,9004,   0,9001,9001,9002,9001,9001, 163,9004,   0,   0,9001,   0,   0,   0,   0,9001,9005,9001,   0,   0, 163,   0,9001,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 162,   0,   0,9001,   0,   0,   0,   0, 163,   0,9001,   0,   0,   0,9001,9005,9001,   0, 162,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,9005,9001,   0, 162,   0,   0,   0,   0,   0, 163,   0,   0,   0,   0,   0, 162,   0, 163,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,1021,   0,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,1021,1021,   0,   0,   0,   0,1021,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,1021,   0,   0,   0,   0,   0,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        };
        Stage level16 = new Stage(level16w1,9,0,15);
        level16.layer2 = new TileMap(level16w2);
        level16.auxlayer2 = new TileMap(level16w2);
        level16.addEnemy(24,341,162,20,40);
        level16.addEnemy(24,481,162,20,40);
        level16.addEnemy(25,410,61,20,40);
        level16.addEnemy(24,800,118,20,40);
        level16.addEnemy(25,730,146,20,40);
        level16.addEnemy(25,872,110,20,40);
        level16.addEnemy(24,1044,231,20,40);
        level16.addEnemy(24,1060,86,20,40);
        level16.addEnemy(24,1183,227,20,40);
        level16.addEnemy(24,1201,83,20,40);
        level16.addEnemy(25,1402,149,20,40);
        level16.addEnemy(25,1681,150,20,40);
        level16.addEnemy(25,1511,185,20,40);
        level16.addEnemy(25,1571,186,20,40);
        level16.addEnemy(8,646,222,20,40);
        level16.addEnemy(8,974,202,20,40);
        level16.enlighten = false;
        level16.minLight = 100;
      	
      	allStages[setupTimer] = level16;
      break
      case 16:
      	int[][] level17w1 = {
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {},
        {},
        {},
        {},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {},
        {},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 172, 172, 172,   0,   0,   0,   0,   0,   0,   0,   0, 172, 172,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 172, 172, 172, 172,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1009,   0,},
        { 173, 173, 173,   0,   0,   0,   0,   0,   0,   0,   0, 172, 172, 172,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 172, 172, 172,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 172, 172,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 172,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  11,  12,  12,  12,  12,  12,},
        { 173, 173, 173,   0,   0,   0,   0,   0,   0,   0,   0,   0, 172,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 172,   0,   0,   0,   0,   0,   0,   0,   0,   0, 172, 172, 172,   0,   0,   0,   0, 172,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  31,  26,  22,  22,  22,  22,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 172,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 172,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  31,  26,  22,  22,  22,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  31,  32,  32,  32,},
        {},
        {},
        {},
        };
        int[][] level17w2 = {
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,   0,   0,   0,   0,   0,   0,   0,1021,   0,   0,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,9001,   0,   0,   0,   0,   0,1021,1021,   0,   0,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,9001,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,1021,   0,   0,   0,   0,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,9001,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,1021,   0,   0,   0,   0,   0,   0,1021,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,9001,   0,   0,   0,   0,9001,9001,   0,9001,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,9001,   0,   0,   0,   0,   0,9001,9001,   0,   0,9001,9001,   0,   0,   0,   0,   0,1021,1021,   0,   0,   0,   0,   0,9001,   0,   0,9001,9001,   0,   0,   0,9001,9001,   0,9001,9001,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,9001,9001,   0,   0,   0,   0,9001,   0,   0,9001,   0,   0,9001,   0,   0,9001,9001,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,9001,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,9001,9001,   0,9001,9001,   0,   0,9002,   0,   0,9001,   0,   0,9001,9001,   0,   0,9001,   0,   0,   0,   0,9005,   0,   0,   0,},
        {   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,9001,9004,9001,   0,   0,   0,   0,   0,   0,   0,   0,9004,9004,   0,   0,   0,   0,9001,   0,9001,9001,   0,   0,   0,   0,9001,   0,   0,9001,   0,   0,   0,   0,   0,9001,9001,   0,   0,9001,9001,   0,   0,9002,   0,   0,9001,9001,   0,   0,   0,9001,   0,9001,   0,9001,9004,9004,9001,   0,   0,9001,9001,   0,9001,9001,   0,9001,9001,   0,   0,   0,   0,   0,9001,   0,   0,9001,9001,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9004,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,9001,9001,   0,   0,   0,   0,9001,   0,   0,9001,   0,9001,9004,9001,   0,9001,9001,   0,   0,9001,9001,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,9001,   0,9001,   0,   0,9001,9001,   0,   0,   0,9001,9001,   0,9001,9001,   0,9001,9001,   0,   0,9004,   0,   0,9001,   0,   0,9001,9001,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,9001,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9004,9001,   0,9001,9001,   0,9004,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,9001,9001,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,9004,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,1021,   0,   0,   0,   0,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,9005,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,   0,   0,   0,   0,   0,1021,1021,   0,   0,1021,1021,   0,   0,   0,   0,   0,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,1021,   0,   0,   0,   0,   0,   0,1021,   0,   0,9212,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9210,   0,   0,   0,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9211,   0,   0,   0,   0,   0,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,9005,   0,   0,   0,   0,   0,9005,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,   0,   0,   0,   0,9005,   0,   0,   0,   0,   0,   0,   0,   0,9005,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9005,   0,   0,   0,   0,   0,9005,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9005,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {},
        };
        Stage level17 = new Stage(level17w1,10,3,16);
        level17.layer2 = new TileMap(level17w2);
        level17.auxlayer2 = new TileMap(level17w2);
        level17.addEnemy(24,561,135,20,40);
        level17.addEnemy(24,720,29,20,40);
        level17.addEnemy(24,779,212,20,40);
        level17.addEnemy(24,911,152,20,40);
        level17.addEnemy(24,990,151,20,40);
        level17.addEnemy(25,1133,185,20,40);
        level17.addEnemy(24,1219,167,20,40);
        level17.addEnemy(24,1264,166,20,40);
        level17.addEnemy(24,1431,103,20,40);
        level17.addEnemy(24,1550,200,20,40);
        level17.addEnemy(24,1500,83,20,40);
        level17.addEnemy(24,1479,220,20,40);
        level17.addEnemy(24,1679,169,20,40);
        level17.addEnemy(24,1822,171,20,40);
        level17.addEnemy(25,1753,169,20,40);
        level17.enlighten = false;
        level17.minLight = 100;
      
      	allStages[setupTimer] = level17;
      break
      case 17:
      	int[][] level18w1 = {
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1015,   0,   0,   0,   0,   0,   0,   0,1015,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1015,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  10,  10,   0,   0,   0,   0,   0,   0,  10,   0,   0,   0,   0,  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  10,  10,  10,   0,   0,  10,  10,  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   1,   3,   0,  10,   0,   1,   3,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  10,  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  10,  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  10,  10,   0,   0,   0,   0,   0,   0,   0,  10,  10,  10,  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  11,  12,  12,  12,  12,  12,  12,  12,  12,  13,   0,   0,   0,   0,   0,   0,   0,   0,  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  11,  12,  12,  12,  12,  12,  12,  12,  12,  12,  13,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  10,  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  31,  26,  22,  22,  22,  22,  22,  22,  25,  33,   0,   0,   0,   0,   0,  11,  12,  12,  13,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  31,  26,  22,  22,  22,  22,  22,  22,  22,  25,  33,   0,   0,   0,   0,   0,   0,   0,   0,1009,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  11,  12,  12,  12,  12,  12,  12,  12,  12,  13,   0,   0,   0,   0,   0,   0,  10,  10,  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  21,  22,  22,  22,  22,  22,  22,  23,   0,   0,   0,   0,   0,   0,  31,  26,  25,  33,   0,   0,   0,   0,   0,   0,  11,  12,  12,  13,   0,   0,   0,   0,   0,  31,  26,  22,  22,  22,  22,  22,  25,  33,   0,   0,   0,   0,   0,   0,   0,  11,  12,  12,  12,  13,   0,},
        {  11,  12,  12,  12,  12,  12,  13,   0,   0,   0,   0,   0,  31,  26,  22,  22,  22,  22,  22,  22,  25,  33,   0,   0,   0,   0,   0,  11,  12,  12,  12,  13,   0,   0,   0,   0,   0,  11,  12,  12,  13,   0,   0,   0,   0,  31,  26,  22,  22,  22,  22,  25,  33,   0,   0,   0,   0,   0,   0,   0,  31,  33,   0,   0,   0,   0,   0,   0,   0,  31,  26,  25,  33,   0,   0,   0,   0,   0,   0,  31,  26,  22,  22,  22,  25,  33,   0,   0,   0,   0,   0,   0,   0,   0,  31,  26,  22,  25,  33,   0,},
        {  31,  26,  22,  22,  22,  25,  33,   0,   0,   0,   0,   0,   0,  31,  26,  22,  22,  22,  22,  25,  33,   0,   0,   0,   0,   0,   0,  31,  26,  22,  25,  33,   0,   0,   0,   0,   0,  31,  26,  25,  33,   0,   0,   0,   0,   0,  31,  26,  22,  22,  25,  33,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  31,  33,   0,   0,   0,   0,   0,   0,   0,   0,  31,  26,  22,  25,  33,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  31,  32,  33,   0,   0,},
        {   0,  31,  26,  22,  25,  33,   0,   0,   0,   0,   0,   0,   0,   0,  31,  32,  32,  32,  32,  33,   0,   0,   0,   0,   0,   0,   0,   0,  31,  32,  33,   0,   0,   0,   0,   0,   0,   0,  31,  33,   0,   0,   0,   0,   0,   0,   0,  31,  26,  25,  33,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  31,  32,  33,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,  31,  32,  33,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  31,  33,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  10,  10,  10,  10,  10,  10,  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {},
        {   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,1001,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,1001,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,1001,},
        };
        int[][] level18w2 = {
        {   0,   0,   0,   0,   0,   0,   0,1021,1021,1021,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,1021,1021,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,9001,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,9001,9004,   0,   0,   0,   0,   0,   0,9004,   0,   0,   0,   0,9005,   0,   0,1021,1021,1021,1021,1021,   0,   0,   0,   0,   0,1021,1021,1021,1021,   0,   0,   0,   0,   0,   0,1021,1021,   0,   0,1021,1021,1021,1021,1021,1021,1021,1021,1021,   0,   0,1021,1021,1021,1021,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,1021,1021,   0,   0,9001,   0,   0,   0,   0,9001,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  20,  20,   0,   0,   0,  20,  20,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,9001,9002,9001,   0,   0,9001,9004,9001,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,1021,1021,1021,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9004,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9004,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,9001,9001,   0,   0,   0,9001,9001,   0,   0,   0,9001,9001,   0,   0,9001,9001,   0,   0,   0,9001,9001,   0,   0,   0,9001,9001,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,9001,9001,   0,   0,9001,   0,  20,  20,  20,9001,9001,9002,9001,  20,  40,  40,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,9001,9001,   0,   0,9001,9001,   0,  20,  20,  40,  40,  20,  30,  20,  40,  40,  20,  20,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  20,  30,  40,9004,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,  20,  20,  40,  20,9001,9001,  20,  30,  20,  20,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,  20,  20,  30,  20,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,  20,  20,   0,  20,  40,   0,},
        {  20,  20,  40,  20,  20,  40,  20,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  20,9001,9005,9001,  30,   0,   0,   0,   0,   0,  20,  40,  20,  30,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,1021,1021,1021,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,9001,9001,   0,   0,   0,   0,   0,   0,9001,   0,9001,   0,   0,   0,   0,   0,1021,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,1021,1021,1021,1021,   0,   0,   0,   0,   0,1021,1021,1021,1021,   0,   0,   0,   0,   0,   0,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,9001,9001,   0,   0,   0,   0,   0,   0,9001,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,9001,9001,   0,   0,   0,   0,   0,1021,1021,1021,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9005,9220,9005,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,1021,1021,1021,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,1021,1021,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        };
        Stage level18 = new Stage(level18w1,10,1,17);
        level18.layer2 = new TileMap(level18w2);
        level18.auxlayer2 = new TileMap(level18w2);
        level18.addEnemy(23,1625,6,20,40);
        level18.addEnemy(24,1788,52,20,40);
        level18.addEnemy(24,1813,152,20,40);
        level18.addEnemy(24,1832,51,20,40);
        level18.addEnemy(25,1491,112,20,40);
        level18.addEnemy(25,1315,168,20,40);
        level18.addEnemy(24,1289,67,20,40);
        level18.addEnemy(24,1333,69,20,40);
        level18.addEnemy(25,1103,56,20,40);
        level18.addEnemy(25,1140,159,20,40);
        level18.addEnemy(24,842,133,20,40);
        level18.addEnemy(24,657,202,20,40);
        level18.addEnemy(24,679,97,20,40);
        level18.addEnemy(24,706,199,20,40);
        level18.addEnemy(25,480,39,20,40);
        level18.addEnemy(25,453,225,20,40);
        level18.addEnemy(25,512,227,20,40);
        level18.addEnemy(24,182,81,20,40);
        level18.addEnemy(24,204,223,20,40);
        level18.addEnemy(24,157,220,20,40);
        level18.enlighten = false;
        level18.minLight = 100;
      
      	allStages[setupTimer] = level18;
      break
      case 18:
      	int[][] level19w1 = {
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 172, 172, 172,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 172, 172,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 154, 156,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  10,  10,  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 154, 155, 156,   0,   0,   0,   0,   0,   0, 158, 170, 170, 160,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  10,  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 172, 172,   0,   0,   0,   0,   0,   0,   0,   0,   0, 158, 170, 170, 170, 160,   0,   0,   0,   0,   0,   0, 164, 166,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1009,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 172,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 164, 170, 166,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 154, 155, 155, 156,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  10,  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 167,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  10,  10,  10,  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 158, 170, 170, 170, 170, 160,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  11,  12,  12,  12,  12,  12,  13,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 172,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  10,  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 164, 170, 170, 166,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,  11,  36,  22,  22,  22,  22,  22,  35,  13,   0,   0,   0, 154, 155, 156,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 154, 156,   0,   0,   0,   0,   0,   0,   0,  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  11,  12,  12,  13,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 157,   0,   0,   0,   0,   0,   0,   0,   0,   0, 164, 166,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,  31,  26,  22,  22,  22,  22,  22,  25,  33,   0,   0, 158, 170, 170, 170, 160,   0,   0,   0, 154, 155, 156,   0,   0,   0, 158, 170, 170, 160,   0,   0,   0,   0,   0,  10,  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 172,   0,   0,   0,   0,   0,  21,  22,  22,  23,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 158, 170, 160,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0, 154, 155, 155, 156,   0,   0,   0,   0,   0,  31,  26,  22,  22,  22,  25,  33,   0,   0,   0,   0, 164, 165, 166,   0,   0,   0, 158, 170, 170, 170, 160,   0,   0,   0, 164, 166,   0,   0,   0,  11,  12,  12,  12,  13,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 154, 156,   0,   0,   0,   0,   0, 154, 155, 156,   0,   0,   0,   0,  31,  26,  25,  33,   0,   0,   0,   0,  11,  12,  12,  13,   0,   0,   0, 167,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        { 158, 170, 170, 170, 170, 160,   0,   0,   0,   0,   0,  31,  26,  22,  25,  33,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 164, 165, 166,   0,   0,   0,   0,   0,   0,   0,   0,   0,  31,  26,  22,  25,  33,   0,   0,   0,   0,   0,   0,   0,   0,   0, 158, 170, 170, 160,   0,   0,   0, 158, 170, 170, 170, 160,   0,   0,   0,   0,  31,  33,   0,   0,   0,   0,   0,  31,  26,  25,  33,   0,   0,   0,   0,   0,   0,   0,   0, 172, 172,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0, 164, 165, 165, 166,   0,   0,   0,   0,   0,   0,   0,  31,  32,  33,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  31,  32,  33,   0,   0,   0,   0, 154, 155, 156,   0,   0,   0,   0, 164, 166,   0,   0,   0,   0,   0, 164, 165, 166,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  31,  33,   0,   0,   0,   0,   0,   0,   0,   0, 154, 155, 155, 156,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 158, 170, 170, 170, 160,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 158, 170, 170, 170, 170, 160,   0,   0,   0, 172, 172, 172,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 164, 165, 166,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 164, 165, 165, 166,   0,   0,   0,   0,   0,   0,   0,   0,},
        {},
        };
        int[][] level19w2 = {
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9002,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,   0,   0,   0,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,   0,   0,   0,   0,9001,9004,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,   0,   0,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,   0,   0,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9004,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,1021,1021,   0,9001,9001,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,1021,1021,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9002,   0,   0,   0,   0,   0,   0,1021,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,   0,   0,   0,1021,   0,   0,9001,9001,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,  20,  20,  40,  40,9001,9005,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,1021,   0,   0,1021,1021,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,9001,9001,   0,9001,9004,9004,9001,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,9001,   0,  20,   0,   0,   0,   0,   0,   0,   0,  20,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,9004,   0,   0,9001,9001,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,   0,   0,   0,   0,   0,   0,   0,9001,   0,  20,9001,9001,  30,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,1021,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,9001,9001,  20,  20,  40,9001,9004,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,9004,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,9001,9001,   0,  20,  20,  30,  40,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9004,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,1021,   0,   0,   0,   0,   0,1021,1021,   0,   0,   0,   0,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9230,9001,   0,},
        {},
        {},
        };
        Stage level19 = new Stage(level19w1,10,1,18);
        level19.layer2 = new TileMap(level19w2);
        level19.auxlayer2 = new TileMap(level19w2);
        level19.addEnemy(24,143,138,20,40);
        level19.addEnemy(25,371,119,20,40);
        level19.addEnemy(25,579,60,20,40);
        level19.addEnemy(24,514,169,20,40);
        level19.addEnemy(24,650,137,20,40);
        level19.addEnemy(24,771,156,20,40);
        level19.addEnemy(25,841,72,20,40);
        level19.addEnemy(24,913,199,20,40);
        level19.addEnemy(24,1038,93,20,40);
        level19.addEnemy(24,1179,201,20,40);
        level19.addEnemy(25,1262,52,20,40);
        level19.addEnemy(24,1340,175,20,40);
        level19.addEnemy(24,1492,145,20,40);
        level19.addEnemy(25,1741,83,20,40);
        level19.addEnemy(23,537,8,20,40);
        level19.addEnemy(23,1502,7,20,40);
        level19.addEnemy(9,1572,177,20,40);
        level19.addEnemy(9,960,37,20,40);
        level19.addEnemy(9,244,117,20,40);
        level19.enlighten = false;
        level19.minLight = 100;
      
      	allStages[setupTimer] = level19;
      break
      case 19:
      	int[][] level20w1 = {
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 172, 172,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 154, 156,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 154, 155, 156,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 172, 172,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0, 172, 172,   0,   0,   0,   0,   0,   0, 172,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 158, 170, 170, 160,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 158, 170, 170, 170, 160,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 172, 172,   0,   0,   0,   0,   0,   0, 158, 155, 155, 160,   0,   0,   0, 172, 172,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 158, 155, 160,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 164, 166,   0,   0,   0,   0,   0,   0,   0, 158, 155, 155, 160,   0,   0,   0,   0,   0,   0,   0, 164, 165, 166,   0,   0,   0,   0,   0,   0, 172,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 158, 155, 155, 160,   0,   0,   0,   0,   0,   0, 164, 166,   0,   0,   0,   0, 172, 172,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 167,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 164, 166,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 158, 155, 155, 155, 160,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 164, 166,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 172, 172,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0, 158, 155, 155, 160,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 164, 165, 166,   0,   0,   0,   0, 172, 172, 172,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 172, 172,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0, 164, 166,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 172,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 172, 172,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 172, 172,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 172, 172,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 172, 172,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 154, 155, 155, 155, 155, 156,   0,   0,   0,   0,   0, 172,   0,   0,   0,   0,   0, 158, 155, 155, 155, 155, 155, 160,   0,   0,   0,   0,   0,   0, 154, 155, 155, 156,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 154, 155, 156,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 172, 172,   0,   0,1009,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 158, 170, 170, 170, 170, 170, 170, 160,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 164, 165, 165, 165, 166,   0,   0,   0,   0,   0, 158, 155, 170, 170, 170, 170, 155, 160,   0,   0,   0,   0,   0,   0,   0,   0, 158, 170, 170, 170, 160,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 154, 155, 155, 155, 155, 155, 155, 155, 155, 156,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0, 172, 172, 172,   0,   0,   0,   0,   0,   0, 164, 165, 165, 165, 165, 166,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 164, 165, 165, 165, 165, 166,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 164, 165, 166,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 158, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 160,   0,   0,},
        { 158, 155, 155, 155, 160,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 154, 155, 156,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 172, 172,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 158, 155, 155, 155, 160,   0,   0,   0,   0,   0, 172, 172,   0,   0,   0,   0, 164, 170, 170, 170, 170, 170, 170, 170, 170, 166,   0,   0,   0,},
        {   0, 164, 165, 166,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 158, 170, 170, 170, 160,   0,   0,   0,   0,   0,   0,   0,   0, 158, 155, 155, 160,   0,   0,   0,   0,   0,   0, 172, 172,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 164, 165, 166,   0,   0,   0,   0,   0, 158, 155, 155, 160,   0,   0,   0,   0, 164, 165, 165, 165, 165, 165, 165, 166,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0, 158, 155, 155, 155, 155, 155, 160,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 164, 165, 166,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 164, 166,   0,   0,   0,   0,   0,   0, 158, 155, 155, 160,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 164, 166,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0, 164, 165, 165, 165, 166,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 164, 166,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,},
        };
        int[][] level20w2 = {
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9005,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9241,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,1021,1021,   0,   0,9001,   0,   0,1021,1021,1021,1021,1021,1021,1021,   0,   0,   0,   0,   0,   0,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,   0,   0,   0,9001,9001,   0,   0,1021,1021,1021,   0,   0,9001,9001,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,9002,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9004,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9004,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,1021,1021,   0,   0,   0,9001,9001,   0,   0,   0,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,},
        {},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9004,9001,   0,   0,   0,   0,9001,9001,   0,   0,   0,9004,9002,   0,   0,   0,   0,1021,1021,   0,   0,1021,1021,   0,   0,9001,9001,9001,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,1021,1021,   0,   0,   0,   0,   0,1021,1021,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9004,9004,   0,   0,   0,9001,9001,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9004,9005,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,9002,   0,   0,   0,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,9001,9001,9001,   0,   0,9001,9001,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,9001,   0,   0,   0,9001,9001,   0,   0,9001,9001,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9004,9001,   0,   0,   0,1021,1021,   0,   0,   0,1021,1021,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,9001,9001,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,9001,9001,   0,1021,1021,   0,   0,   0,9001,9001,9001,9001,   0,   0,9001,9001,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,9240,   0,1021,1021,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,1021,   0,   0,   0,   0,   0,   0,   0,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9005,9005,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,1021,   0,   0,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9005,9005,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,1021,   0,   0,   0,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        };
        Stage level20 = new Stage(level20w1,10,2,19);
        level20.layer2 = new TileMap(level20w2);
        level20.auxlayer2 = new TileMap(level20w2);
        level20.addEnemy(23,414,5,20,40);
        level20.addEnemy(23,704,5,20,40);
        level20.addEnemy(23,854,5,20,40);
        level20.addEnemy(23,1164,5,20,40);
        level20.addEnemy(23,1364,5,20,40);
        level20.addEnemy(23,1604,5,20,40);
        level20.addEnemy(24,1691,185,20,40);
        level20.addEnemy(25,1549,181,20,40);
        level20.addEnemy(24,1370,157,20,40);
        level20.addEnemy(24,1117,200,20,40);
        level20.addEnemy(24,1195,196,20,40);
        level20.addEnemy(25,890,155,20,40);
        level20.addEnemy(25,670,230,20,40);
        level20.addEnemy(24,513,151,20,40);
        level20.addEnemy(24,312,152,20,40);
        level20.addEnemy(24,250,97,20,40);
        level20.addEnemy(24,310,256,20,40);
        level20.addEnemy(9,198,237,20,40);
        level20.addEnemy(9,584,198,20,40);
        level20.addEnemy(9,733,138,20,40);
        level20.addEnemy(9,1281,135,20,40);
        level20.addEnemy(9,1459,193,20,40);
      	level20.addEnemy(24,410,270,20,40);
        level20.enlighten = false;
        level20.minLight = 100;
      
      	allStages[setupTimer] = level20;
      break
      case 20:
      	int[][] level21w1 = {
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  21,  22,  27,  28,  28,  42,  41,  43,  28,  28,  28,  28,  41,  41,  28,  28,  28,  42,  42,  42,  28,  69,  28,  59,  59,  59,  28,  28,  28,  59,  69,  69,  28,  28,  28,  28,  28,  59,  59,  59,  28,  65,  65,  65,  65,  65,  28,  28,  28,  28,  59,  28,  28,  28,  28,  28,  29,  22,  23,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  72,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  77,  77,   0,   0,   0,   0,   0,   0,   0,   0,   0, 118,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  77,  77,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 122,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 173,   0, 173,   0, 173,   0, 173,   0, 173,   0, 173,   0, 173,   0, 173,   0, 173,   0, 173, 172, 173,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  11,  12,  12,  13,   0,   0,   0,   0,   0,   0,   0,   0,   0,  21,  22,  27,  28,  28,  28,  42,  43,  28,  28,  28,  65,  65,  65,  65,  65,  65,  65,  65,  28,  28,  69,  28,  28,  59,  28,  28,  65,  65,  65,  65,  65,  65,  28,  28,  28,  28,  28,  65,  65,  66,   0,   0,   0,   0,   0,  64,  65,  65,  28,  28,  38,  38,  38,   6,  28,  29,  25,  33,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  72,  72,  72,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 118,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  77,  77,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 122, 122,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 122, 122, 122,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 143,   0,   0,   0,   0, 143,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  11,  36,  22,  22,  35,  13,   0,   0,   0,   0,   0,   0,   0,  11,  36,  22,  37,  38,   6,  28,  28,  28,  28,  28,  66,   0,  52,  52,   0,   0,  52,  52,   0,  64,  28,  28,  28,  28,  28,  28,  66,   0,   0,  48,  48,   0,   0,  64,  28,  28,  65,  66,1003,1003,1003,1003,1003,   0,1003,1003,1003,1003,1003,  64,  65,  26,  22,  22,  37,  38,  39,  23,   0,   0,  72,  72,  72,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  72,   0,   0,   0,   0,   0,   0,  72,  72,  72,  72,  72,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  77,  77,  77,  77,   0,   0,  77,  77,  77,   0,   0,   0, 118,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  77,  77,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 122, 122,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 143, 143,1018,1018,1018,1018, 143,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  11,  36,  22,  22,  22,  22,  23,   0,   0,   0,   0,   0,   0,   0,  21,  22,  22,  22,  22,  27,  28,  28,  28,  65,  66,   0,   0,   0,   0,  55,  55,   0,   0,   0,   0,  64,  65,  65,  65,  65,  66,   0,   0,   0,   0,   0,   0,   0,   0,  64,  66,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  31,  32,  32,  26,  22,  25,  33,  73,  73,  73,  72,  72,  72,   0,   0,   0,   0,   0,   0,   0,   0,  72,  72,  72,   0,   0,   0,   0,   0,  72,  72,  72,  72,  72,   0,   0,  72,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 118,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  77,  77,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 122, 122,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 143, 143,1019,1019,1019,1019, 143,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 173,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 173,},
        {   0,   0,   0,   0,   0,   0,   0,   0,  10,  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  21,  22,  22,  22,  22,  22,  23,   0,   0,   0,   0,   0,   0,   0,  31,  32,  32,  26,  22,  16,  28,  65,  66,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  58,  48,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  31,  32,  33,   0,   0,   0,  72,  72,  72,   0,   0,   0,   0,   0,   0,   0,   0,  72,  72,  72,  72,  72,   0,   0,   0,   0,   0,  72,  71,  72,   0,   0,  72,  72,  72,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 118,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  77,  77,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 122, 122,   0,   0,   0,   0,   0,   0,   0, 123,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 123,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 143, 143, 143,1007,1007, 143, 143, 143,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 172,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 173,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  11,  36,  22,  22,  17,  19,  22,  35,  13,   0,   0,   0,   0,   0,   0,   0,   0,   0,  31,  32,  65,  66,   0,   0,   0,   0,   0,   0,   0,  55,  55,  55,  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  72,  10,   0,   0,   0,   0,  72,  72,  72,  72,  72,   0,   0,   0,   0,   0,   0,  71,   0,   0,   0,  72,  72,  72,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  77,  77,   0,   0,   0,   0,   0,   0,   0,   0,   0, 118,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  77,  77,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 122, 122, 122,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 142,   0,   0,   0,   0,   0,   0,   0,   0, 143, 143, 143,1007,1007, 143, 143, 143,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  10,   0,   0,   0,   0,   0,   0,   0, 172,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 172,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 173,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  21,  22,  22,  17,  16,  29,  22,  22,  35,  13,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,  55,  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  60,   0,   0,  70,   0,   0,   0,   0,   0,   0,   0,   0,  44,  45,  45,  46,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  72,  72,  72,   0,   0,   0,   0,  72,  72,  72,  72,  72,   0,   0,   0,   0,1002,1002,  71,   0,   0,  72,  72,  72,  72,  72,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121,  77,  77, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 122, 122, 122,   0,   0,   0,   0,   0,   0,   0,   0,   0, 123, 123,   0,   0,   0, 123, 123,   0,   0,   0,   0,   0,   0,   0,   0,   0, 142, 142,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 143, 143, 143,1007,1007, 143, 143, 143,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 172,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 173,},
        {   0,   0,   0,   0,   0,   0,   0,  10,  10,  10,  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  11,  12,  36,  22,  22,  27,  28,  15,  19,  22,  22,  35,  13,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,  55,   0,   0,  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,   0,   0,  55,   0,   0,   0,   0,   0,   0,   0,  44,  28,  28,  28,  28,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,  45,  45,  12,  13,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  72,  72,  72,   0,   0,   0,   0,   0,  72,  71,  72,   0,   0,  72,   0,   0,   0,   0,  71,   0,   0,   0,  72,  71,  72,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  84,  85,  85,  85,  86,1020,1020,1020,1020,1020,1020,1020,1020,1020,1020,1020,1020,1020,1020,  74,  76,1020,1020,1020,1020,1020,1020,1020,1020,1020,1020,1020,  84,  86,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 122, 122, 122,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 142,   0,   0,   0,   0,   0,   0,   0,   0, 143, 143, 143,1007,1007, 143, 143, 143,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 172,   0,   0, 172, 172, 172,   0,   0,   0,   0,   0, 172, 172, 172,   0,   0,   0,   0,   0,   0, 173,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  11,  36,  22,  22,  22,  22,  27,  28,  28,  29,  22,  22,  22,  23,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,  55,   0,   0,  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,   0,   0,  55,   0,   0,   0,   0,   0,   0,   0,  54,  28,  28,  28,  28,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019,  28,  28,  29,  23,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  72,  71,  72,   0,   0,  72,   0,1002,1002,  71,   0,   0,  72,  72,  72,   0,   0,   0,  71,1002,1002,   0,   0,  71,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  77,   0,   0,   0,   0,   0,   0,   0,   0,   0,  94,  95,  95,  95,  96,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,  94,  96,   0,   0,   0,   0,  80,  82,   0,   0,   0,   0,   0,   0,   0, 122, 122, 122, 122,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 143, 143, 143,1007,1007,1007, 143, 143,   0,   0, 140, 140,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 173,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  11,  36,  22,  22,  22,  22,  17,  16,  28,  28,  15,  19,  22,  22,  23,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,  55,   0,   0,  55,  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  68,  44,  45,  28,  28,  59,  28,  28,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,  28,  28,  28,  28,  29,  35,  12,  13,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  71,   0,   0,  72,  72,  72,   0,   0,  71,   0,   0,  72,  71,  72,   0,   0,   0,  71,   0,   0,   0,   0,  71,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  84,  89,  95,  95,  95,  96,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,  94,  96,   0,   0,   0,   0,  90, 108,  82,   0,   0,   0,   0,   0,   0, 122, 122, 122, 122,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 143, 143, 143,1007,1007,1007,1007, 143, 143,   0,   0, 140, 140,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  10,   0,   0,   0,   0,   0, 158, 155, 155, 155, 160,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 173,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  11,  36,  22,  22,  22,  22,  22,  27,  28,  28,  28,  28,  29,  22,  22,  35,  12,  13,   0,   0,   0,   0,   0,   0,   0,   0,  55,   0,   0,  55,  55,   0,   0,   0,   0,  44,  46,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  49,  28,  28,  28,  28,  28,  59,  69,  28,  28,1007,1007,1007,1007,1007,1007,1007,1007,1007,  28,  28,  28,  59,  15,  19,  22,  35,  12,  12,  13,   0,   0,   0,   0,   0,   0,   0,  71,   0,   0,  72,  71,  72,   0,   0,  71,   0,   0,   0,  71,   0,   0,   0,  11,  12,  13,   0,   0,   0,  71,   0,  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  84,  85,  85,  85,  85,  89,  95,  95,  95,  95,  96,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1001,  94,  96,   0,   0,   0,   0,  90,  91, 108,  82,   0,   0,   0,   0, 122, 122, 122, 122, 122,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 143, 143, 143,1007,1007,1007,1007, 143, 143, 143,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  11,  12,  13,   0,   0,   0,   0,   0, 169, 170, 171,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1009,   0, 173,},
        {  11,  12,  12,  12,  12,  12,  12,  12,  12,  12,  12,  12,  12,  12,  13,   0,   0,  11,  12,  12,  36,  22,  22,  22,  22,  22,  17,  16,  28,  28,  28,  28,  15,  19,  22,  22,  22,  35,  12,  13,   0,   0,   0,   0,   0,   0,  55,   0,   0,  55,  55,  55,  55,  55,  44,  28,  28,  46,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  44,  28,  28,  59,  28,  28,  59,  69,  28,  28,1007,1007,1007,1007,1007,1007,1007,  28,  28,  28,  28,  28,  59,  28,  15,  19,  22,  22,  22,  35,  12,  12,  12,  13,   0,   0,   0,  71,   0,   0,   0,  71,   0,   0,   0,  11,  13,   0,  11,  12,  13,   0,   0,  21,  22,  23,   0,   0,  11,  12,  12,  12,  13,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  84,  89,  95,  95,  95,  95,  95,  95,  95,  95,  95,  88,  86,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,  84,  85,  89,  96,   0,   0,   0,   0,  90,  91,  91, 108,  81,  81,  81,  82, 122, 122, 122, 122, 122,  80,  81,  82, 122, 122, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 122, 122,   0,   0, 141, 141, 141, 141, 141, 141,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018, 143, 143, 143, 143, 143, 143,1007,1007,1007, 143, 143, 143,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  31,  32,  33,   0,   0,   0,   0,   0, 164, 165, 166,   0,   0,   0,   0,   0,   0,   0,   0,  11,  12,  13, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173,},
        {  21,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  23,   0,   0,  21,  22,  22,  22,  22,  22,  22,  17,  18,  16,  28,  28,  28,  28,  28,  28,  29,  22,  22,  22,  22,  22,  35,  13,   0,   0,   0,   0,   0,   0,   0,   0,  55,  55,  55,  44,  45,  28,  41,  28,  56,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  44,  28,  28,  28,  59,  28,  28,  28,  59,  28,  28,  28,  28,1007,1007,1007,1007,1007,  28,  28,  28,  28,  28,  28,  28,  28,  29,  22,  22,  22,  22,  22,  22,  22,  35,  12,  12,  12,  12,  13,   0,  11,  12,  13,  10,  10,  21,  23,  10,  21,  22,  23,   0,   0,  21,  22,  23,   0,   0,  21,  22,  22,  22,  23,   0,   0,   0,  84,  85,  85,  86,   0,   0,   0,   0,   0,   0,   0, 120, 120,  84,  85,  85,  85,  85,  89,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  88,  86,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,  84,  89, 105,  95,  96,   0,   0,   0,   0,  90,  91,  91,  91,  91,  91,  98, 102, 122, 122, 122, 122, 122,  90,  91,  92, 122, 122, 122, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 122, 122, 122,   0,   0, 141, 141, 141, 141, 141, 141,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019,1019, 143, 143, 143, 141, 141, 143,1007,1007,1007, 143, 143, 143, 143,   0,1006,1006,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  31,  26,  35,  12,  12,  12,  12,  12,  12,  12,  12,  12,  12,  12,  12,  12,  12,  12,  12,  12,  12,  12,  12,  12,},
        {  21,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  23,   0,   0,  21,  22,  22,  22,  22,  22,  22,  27,  28,  28,  28,  28,  28,  28,  28,  28,  15,  19,  22,  22,  22,  22,  22,  35,  12,  46,   0,   0,   0,   0,   0,   0,  55,  55,  55,  54,  28,  28,  41,  28,  28,  46,   0,   0,   0,   0,   0,   0,   0,   0,   0,  54,  28,  28,  59,  69,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  59,  59,  28,  28,  28,  29,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  23,   0,  21,  22,  23,  10,  10,  21,  23,   0,  21,  22,  23,   0,   0,  21,  22,  23,   0,   0,  21,  22,  22,  22,  23,   0,   0,   0,  94,  95,  95,  96,1020,1020,1020,1020,1020,1020,1020,1020,1020,  94,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  88,  85,  86,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,  84,  85,  89,  96,   0,  94,  96,   0,   0,   0,   0,  90,  91,  91,  91,  91,  91,  92, 122, 122, 122, 122, 122, 122,  90,  91,  92, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122,   0,   0, 141, 141, 141, 141, 141, 141, 141, 141,1007,1007,1007,1007,1007,1007,1007, 143, 143, 143, 143, 143,   0,   0, 143, 143,1007,1007,1007, 143, 143, 143, 143, 141, 141,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  31,  32,  26,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,},
        {  21,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  23,   0,   0,  21,  22,  22,  22,  22,  17,  18,  16,  28,  28,  28,  28,  28,  28,  28,  28,  28,  15,  18,  18,  18,  18,  18,  18,  18,  28,  45,  45,  45,  45,  45,  45,  45,  45,  45,  28,  28,  43,  42,  41,  28,  28,  46,   0,   0,  44,  45,  45,  46,   0,   0,  54,  28,  59,  69,  69,  59,  28,  28,  28,  28,  28,  28,  59,  28,  28,  28,  28,  28,  28,  28,  59,  59,  28,  28,  28,   5,  39,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  23,   0,  21,  22,  23,  10,  10,  21,  23,   0,  21,  22,  23,   0,   0,  21,  22,  23,   0,   0,  21,  22,  22,  22,  23,   0,   0,   0,  94,  95,  95,  96,1008,1008,1008,1008,1008,1008,1008,1008,1008,  94,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  85,  86,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,  84,  85,  85,  85,  85,  89,  95,  95,  96,   0,  94,  96,   0,   0,   0,   0,  90,  91,  91,  91,  91,  91,  92, 122, 122, 122, 122, 122, 122,  90,  91,  92, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122,   0,   0, 141, 141, 141, 141, 141, 141, 141, 141, 141,1007,1007,1007,1007,1007, 143, 143, 143, 143, 143, 143,   0,   0, 143, 143,1007,1007,1007,1007,1007, 143, 143, 143, 141,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  31,  32,  26,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,},
        {  21,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  23,   9,   9,  21,  22,  22,  22,  17,  16,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  41,  41,  41,  28,  28,  28,  28,  42,  42,  28,  28,  56,  68,  68,  54,  59,  28,  56,  47,  47,  54,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  59,  69,  59,  28,  28,  28,  28,  28,  28,  59,  28,  28,  28,   5,  39,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  23,   8,  31,  32,  33,   8,   8,  31,  33,   8,  31,  32,  33,   8,   8,  31,  32,  33,   8,   8,  31,  32,  32,  32,  33,   8,   8,   8,  94,  95,  95,  88,  85,  85,  85,  85,  85,  85,  85,  85,  85,  89,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  88,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  95,  95,  95,  95,  95,  95,  95,  95,  95,  85,  95,  96,   8,   8,   8,   8,  90,  91,  91,  91,  91,  91, 108,  81,  81,  81,  81,  81,  81, 109,  91,  92, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 149, 149, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 143, 143, 143, 143, 143, 143, 143, 143, 141, 141, 141, 141, 143, 143,1007,1007,1007,1007,1007, 143, 143, 143, 141,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,  31,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,},
        };
        int[][] level21w2 = {
        {},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  20,   0,   0,   0,   0,  20,   0,   0,9001,   0,   0,   0,   0,  30,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9002,9250,9002,9001,   0,   0,   0,   0,1010,   0,   0,   0,   0,   0,   0,   0,   0,9001,9251,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9002,9002,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9004,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  20,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1010,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,   0,   0,9001,9004,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {},
        {   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,  20,   0,   0,   0,   0,   0,   0,   0,  30,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,9001,   0,9001,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9004,9004,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,1021,1021,   0,9001,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,1021,   0,1021,   0,1021,   0,   0,   0,   0,   0,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,1021,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  20,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,   0,   0,   0,   0,9004,   0,   0,9001,   0,   0,   0,   0,   0,9001,   0,   0,9001,9001,9001,9001,   0,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9004,   0,   0,   0,   0,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,9001,   0,   0,9002,9002,9002,   0,9001,9001,   0,   0,9001,9004,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {},
        {},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,  20,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,9001,9001,9001,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  20,  30,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,9001,   0,   0,9001,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,   0,   0,   0,9001,9004,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9002,9001,   0,   0,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9002,9004,   0,   0,   0,   0,9001,   0,9001,9001,   0,9001,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,9001,   0,9001,   0,9001,   0,   0,   0,   0,   0,9001,   0,9001,   0,9001,   0,9001,   0,9001,   0,9001,   0,9001,   0,9001,   0,9001,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  20,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  40,  30,   0,   0,   0,9001,9001,   0,   0,9001,9001,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  20,  20,  20,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,9001,   0,9001,   0,   0,  30,   0,  20,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9004,   0,1021,1021,1021,1021,1021,1021,1021,1021,1021,   0,   0,   0,   0,   0,1021,1021,1021,1021,1021,1021,1021,1021,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1010,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,9001,   0,9001,9001,   0,9001,   0,   0,  20,9004,  20,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,9001,9005,9001,9005,9001,9005,9001,9005,9001,9005,9001,9005,9001,9005,9001,   0,   0,   0,   0,},
        {  20,  20,  20,  20,  20,  40,  40,  40,  20,  20,  20,  20,  20,  20,  30,   0,   0,  20,  20,  20,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  20,  20,   0,   0,   0,9001,   0,   0,9001,9001,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  20,  40,  40,  20,   0,   0,   0,   0,   0,   0,9001,   0,9001,   0,   0,   0,  40,   0,  20,   0,  20,   0,   0,   0,   0,   0,   0,   0,  20,   0,  40,9004,  20,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,9001,   0,9004,   0,   0,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,9004,9001,9001,9001,9004,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 153,   0,   0, 153,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1010,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  20,  40,  40,   0,9001,   0,9001,   0,9001,   0,9001,   0,9001,   0,9001,   0,9001,   0,9001,   0,9001,   0,   0,   0,},
        {},
        {},
        {},
        {},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,1021,1021,1021,1021,1021,1021,1021,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,9001,9001,9002,9001,9001,9001,9001,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1021,   0,   0,   0,   0,1021,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        };
        Stage level21 = new Stage(level21w1,10,9,20);
        level21.layer2 = new TileMap(level21w2);
        level21.auxlayer2 = new TileMap(level21w2);
        level21.addEnemy(8,365,202,20,40);
        level21.addEnemy(7,591,4,20,40);
        level21.addEnemy(7,803,24,20,40);
        level21.addEnemy(7,1242,102,20,40);
        level21.addEnemy(7,1302,103,20,40);
        level21.addEnemy(8,1512,103,20,40);
        level21.addEnemy(8,1273,260,20,40);
        level21.addEnemy(8,1052,200,20,40);
        level21.addEnemy(8,893,262,20,40);
        level21.addEnemy(7,2023,22,20,40);
        level21.addEnemy(8,2085,221,20,40);
        level21.addEnemy(7,2283,22,20,40);
        level21.addEnemy(7,2562,42,20,40);
        level21.addEnemy(10,2789,286,20,40);
        level21.addEnemy(10,2929,286,20,40);
        level21.addEnemy(10,3683,210,20,40);
        level21.addEnemy(10,3382,210,20,40);
        level21.addEnemy(10,3475,270,20,40);
        level21.addEnemy(10,3733,166,20,40);
        level21.addEnemy(10,3510,167,20,40);
        level21.addEnemy(11,3583,231,20,40);
        level21.addEnemy(9,3002,219,20,40);
        level21.addEnemy(9,3234,115,20,40);
        level21.addEnemy(11,3120,164,20,40);
        level21.addEnemy(12,4443,205,20,40);
        level21.addEnemy(13,4392,143,20,40);
        level21.addEnemy(13,4494,144,20,40);
        level21.addEnemy(14,4584,83,20,40);
        level21.addEnemy(15,4305,83,20,40);
        level21.addEnemy(9,4562,197,20,40);
        level21.addEnemy(18,4826,205,20,40);
        level21.addEnemy(20,4882,123,20,40);
        level21.addEnemy(19,5272,142,20,40);
        level21.addEnemy(21,4710,17,20,40);
        level21.addEnemy(18,5164,26,20,40);
        level21.addEnemy(18,5106,26,20,40);
        level21.addEnemy(18,4945,207,20,40);
        level21.addEnemy(24,5801,198,20,40);
        level21.addEnemy(24,5841,154,20,40);
        level21.addEnemy(24,5880,103,20,40);
        level21.addEnemy(25,5632,149,20,40);
        level21.addEnemy(25,5433,153,20,40);
        level21.addEnemy(24,5380,150,20,40);
        level21.addEnemy(24,5482,150,20,40);
        level21.addEnemy(23,6056,66,20,40);
        level21.addEnemy(23,6213,65,20,40);
        level21.addEnemy(9,6220,112,20,40);
        level21.addEnemy(9,6061,110,20,40);
        level21.addEnemy(10,3479,206,20,40);
        level21.enlighten = false;
        level21.minLight = 100;
      
      	allStages[setupTimer] = level21;
      break
      case 21:
      	int[][] extra1w1 = {
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  10,  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,  10,  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   1,   2,   2,   3,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  14,   0,   0,  11,  13,1002,1002,  11,  13,   0,   0,   1,   2,   2,   2,   2,   3,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  11,  13,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   1,   3,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  24,   0,   0,  21,  35,  12,  12,  36,  23,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   4,   0,   0,   0,   0,  21,  35,  13,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  24,   0,   0,  21,  22,  22,  22,  22,  23,   0,   0,   0,   0,  10,   0,   0,   0,   0,   1,   2,   2,   3,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  21,  22,  35,  12,  12,  13,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,  10,  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  24,   0,   0,  21,  22,  22,  22,  22,  23,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  31,  32,  26,  22,  22,  35,  12,  13,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   1,   2,   2,   2,   2,   3,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  34,   0,   0,  31,  32,  32,  32,  26,  23,   0,   0,  10,  10,  10,  10,  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  21,  22,  22,  22,  22,  23,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1004,   0,  10,  10,  21,  23,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  21,  22,  22,  22,  22,  23,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1004,   0,  10,  10,  21,  23,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,  11,  12,  36,  22,  22,  22,  22,  23,   0,   0,   0,},
        {  11,  12,  12,  12,  12,  12,  12,  12,  12,  12,  12,  12,  12,  13,   0,   0,  11,  13,   0,   0,  11,  12,  12,  12,  12,  12,  12,  12,  12,  12,  12,  36,  35,  12,  12,  12,  12,  12,  12,  12,  12,  12,  12,  12,  12,  12,  12,  12,  12,  12,  12,  12,  12,  12,  12,  12,  12,  12,  12,  36,  22,  22,  22,  22,  22,  22,  23,   0,1009,   0,},
        {  21,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  23,   0,   0,  21,  23,   0,   0,  21,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  23,   0,   4,   0,},
        {  31,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  33,   8,   8,  31,  33,   8,   8,  31,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  33,   0,9001,   0,},
        };
        int[][] extra1w2 = {
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9002,   0,   0,   0,9001,9003,9003,9001,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,9002,9002,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,9001,9001,   0,   0,  20,  20,  40,  20,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  20,   0,   0,  20,  20,   0,   0,  20,  20,   0,   0,  20,  40,  40,  20,  20,  20,   0,   0,9001,9001,   0,   0,   0,   0,   0,   3,   0,   0,   0,9001,   0,   0,   0,   0,  20,  30,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,  20,  20,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,  20,   0,   0,   0,   0,  11,  13,  20,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1010,1010,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  20,  30,  20,  20,   0,   0,   0,   0,   0,   0,   0,   0,   4,   0,   0,   0,   0,  21,  35,  13,  40,  20,  20,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1010,1010,   0,   0,   0,   0,   0,   0,9002,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  21,  22,  35,  12,  12,  13,  20,  20,   0,   0,   0,},
        {   0,   0,   0,   0,   0,  20,  40,9001,9001,  20,  20,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1010,1010,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  22,  22,  35,  12,  13,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1010,1010,   0,   0,   0,   0,   0,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,  22,  22,  22,  22,  23,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,   0,  22,  22,  22,  22,  23,   0,   0,   0,},
        {  20,  20,  20,  40,  40,  20,  20,  20,  40,  20,  20,  20,  40,  20,   0,   0,  20,  30,   0,   0,  20,  20,  20,  20,  30,  40,  20,   0,   0,9001,9004,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   8,   8,   8,   8,   8,   8,   8,   8,   8,   0,   0,   0,  22,  22,  22,  22,  23,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  12,  12,  12,  12,  12,  12,  12,  12,  12,  36,  22,  22,  22,  22,  22,  22,  23,   0,1009,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  23,   0,   4,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  33,   0,9001,   0,},
        };

        Stage extra1 = new Stage(extra1w1,1,0,0);
        extra1.layer2 = new TileMap(extra1w2);
        extra1.auxlayer2 = new TileMap(extra1w2);
        extra1.addEnemy(8,738,80,15,15);
        extra1.addEnemy(8,868,120,15,15);
        extra1.addEnemy(8,964,60,15,15);
        extra1.addEnemy(8,1266,120,15,15);
      
      	extraStages[setupTimer-numStages] = extra1;
      break
      case 22:
      	int[][] extra2w1 = {
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,  72,  72,  72,   0,  72,  72,  72,   0,  72,  72,  72,   0,  72,  72,  72,   0,  72,  72,  72,   0,  72,  72,  72,   0,  72,  72,  72,   0,  72,  72,  72,   0,  72,  72,  72,   0,  72,  72,  72,   0,  72,  72,  72,   0,  72,  72,  72,   0,},
        {   0,   0,  72,  72,  72,   0,  72,  72,  72,   0,  72,  72,  72,   0,  72,  72,  72,   0,  72,  72,  72,   0,  72,  72,  72,   0,  72,  72,  72,   0,  72,  72,  72,   0,  72,  72,  72,   0,  72,  72,  72,   0,  72,  72,  72,   0,  72,  72,  72,   0,},
        {   0,   0,  72,  72,  72,   0,  72,  72,  72,   0,  72,  72,  72,   0,  72,  72,  72,   0,  72,  72,  72,   0,  72,  72,  72,   0,  72,  72,  72,   0,  72,  72,  72,   0,  72,  72,  72,   0,  72,  72,  72,   0,  72,  72,  72,   0,  72,  72,  72,   0,},
        {   0,   0,  72,  72,  72,   0,  72,  72,  72,   0,  72,  72,  72,   0,  72,  72,  72,   0,  72,  72,  72,   0,  72,  72,  72,   0,  72,  72,  72,   0,  72,  72,  72,   0,  72,  72,  72,   0,  72,  72,  72,   0,  72,  72,  72,   0,  72,  72,  72,   0,},
        {   0,   0,  72,  71,  72,   0,  72,  71,  72,   0,  72,  71,  72,   0,  72,  71,  72,   0,  72,  71,  72,   0,  72,  71,  72,   0,  72,  71,  72,   0,  72,  71,  72,   0,  72,  71,  72,   0,  72,  71,  72,   0,  72,  71,  72,   0,  72,  71,  72,   0,},
        {   0,   0,   0,  71,   0,   0,   0,  71,   0,   0,   0,  71,   0,   0,   0,  71,   0,   0,   0,  71,   0,   0,   0,  71,   0,   0,   0,  71,   0,   0,   0,  71,   0,   0,   0,  71,   0,   0,   0,  71,   0,   0,   0,  71,   0,   0,   0,  71,   0,1009,},
        {  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,},
        {1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,},
        };
        int[][] extra2w2 = {
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {9004,9004,9004,1010,9004,9004,9004,1010,9004,9004,9004,1010,9004,9004,9004,1010,9004,9004,9004,1010,9004,9004,9004,1010,9004,9004,9004,1010,9004,9004,9004,1010,9004,9004,9004,1010,9004,9004,9004,1010,9004,9004,9004,1010,9004,9004,9004,1010,9004,   0,},
        {   0,   0,   0,1010,   0,   0,   0,1010,   0,   0,   0,1010,   0,   0,   0,1010,   0,   0,   0,1010,   0,   0,   0,1010,   0,   0,   0,1010,   0,   0,   0,1010,   0,   0,   0,1010,   0,   0,   0,1010,   0,   0,   0,1010,   0,   0,   0,1010,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        };
        Stage extra2 = new Stage(extra2w1,1,0,0);
        extra2.layer2 = new TileMap(extra2w2);
        extra2.auxlayer2 = new TileMap(extra2w2);
        extra2.addEnemy(7,946,145,20,40);
        extra2.addEnemy(7,864,143,20,40);
        extra2.addEnemy(7,786,143,20,40);
        extra2.addEnemy(7,703,143,20,40);
        extra2.addEnemy(7,623,144,20,40);
        extra2.addEnemy(7,544,144,20,40);
        extra2.addEnemy(7,464,144,20,40);
        extra2.addEnemy(7,384,145,20,40);
        extra2.addEnemy(7,300,145,20,40);
        extra2.addEnemy(7,225,146,20,40);
        extra2.addEnemy(7,145,145,20,40);
        extra2.addEnemy(7,65,144,20,40);
        extra2.enlighten = false;
        extra2.minLight = 316.125;
      
      	extraStages[setupTimer-numStages] = extra2;
      break
      case 23:
      	int[][] extra3w1 = {
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  53,1005,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  53,1005,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   8,   8,   0,   0,   0,   0,   0,   8,   8,   0,   0,   0,   8,   0,   0,   0,   0,   8,   8,   0,   0,   0,   0,   8,   0,   0,   0,   8,   0,   0,   0,   8,   8,   0,   0,   0,   8,   0,   0,   0,  53,1005,   0,},
        {   0,   0,   0,   0,   0,   0,  53,  60,  60,  51,   0,   0,   0,  53,  60,  60,  51,   0,  53,  60,  51,   0,   0,  53,  60,  60,  51,   0,   0,  53,  60,  51,   0,  53,  60,  51,   0,  53,  60,  60,  51,   0,  53,  60,  51,   0,   0,  53,1005,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  53,1005,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  53,1005,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  53,1005,1009,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1002,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   8,   8,1001,1001,1001,1001,1001,1001,1001,   8,   8,   8,   8,   8,1001,1001,   8,   8,   8,1001,1001,   8,   8,   8,   8,   8,1001,1001,   8,   8,   8,   8,   8,1001,   8,   8,   8,   8,1001,1001,   8,   8,   8,   8,1001,1001,   8,   8,   8,1001,},
        };
        int[][] extra3w2 = {
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        };
        Stage extra3 = new Stage(extra3w1,4,0,0);
        extra3.layer2 = new TileMap(extra3w2);
        extra3.auxlayer2 = new TileMap(extra3w2);
        extra3.addEnemy(13,154,83,20,40);
        extra3.addEnemy(13,295,83,20,40);
        extra3.addEnemy(13,384,84,20,40);
        extra3.addEnemy(13,494,84,20,40);
        extra3.addEnemy(13,604,84,20,40);
        extra3.addEnemy(13,681,84,20,40);
        extra3.addEnemy(13,775,84,20,40);
        extra3.addEnemy(13,861,84,20,40);
        extra3.enlighten = false;
        extra3.minLight = 100;
      
      	extraStages[setupTimer-numStages] = extra3;
      break
      case 24:
      	int[][] extra4w1 = {
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1009,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 143,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 142,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 142, 142,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 142,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 142,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0, 142,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 142,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 142, 142,   0,   0,   0,   0,   0, 142,   0,   0, 142,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 142,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        { 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        { 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149,},
        { 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139,},
        };
        int[][] extra4w2 = {
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        };
        Stage extra4 = new Stage(extra4w1,8,0,0);
        extra4.layer2 = new TileMap(extra4w2);
        extra4.auxlayer2 = new TileMap(extra4w2);
        extra4.addEnemy(11,763,147,20,40);
        extra4.addEnemy(11,653,99,20,40);
        extra4.addEnemy(11,556,158,20,40);
        extra4.addEnemy(11,472,85,20,40);
        extra4.addEnemy(11,372,142,20,40);
        extra4.addEnemy(11,279,104,20,40);
        extra4.addEnemy(11,888,143,20,40);
        extra4.addEnemy(11,950,145,20,40);
        extra4.addEnemy(11,213,121,20,40);
        extra4.addEnemy(11,151,145,20,40);
        extra4.enlighten = false;
        extra4.minLight = 100;
      
      	extraStages[setupTimer-numStages] = extra4;
      break
      case 25:
      	int[][] extra5w1 = {
        {},
        {  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,  55,   0,   0,  55,  55,  55,  55,  55,  55,   0,   0,  55,  55,  55,  55,   0,   0,   0,   0,   0,   0,  55,  55,  55,  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  60,  60,  55,  55,  55,  55,  55,  55,  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,},
        {  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,  55,   0,   0,  55,  55,  55,  55,  55,  55,   0,   0,  55,  55,  55,  55,   0,   0,   0,   0,   0,   0,  55,  55,  55,  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  60,  60,  55,  55,  55,  55,  55,  55,  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,},
        {  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,  55,   0,   0,  55,  55,  55,  55,  55,  55,   0,   0,   0,  55,   0,   0,   0,   0,  55,  55,   0,   0,  55,  55,  55,  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1002,1002,1002,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1002,1002,1002,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  60,  60,  55,  55,  55,  55,  55,  55,  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,},
        {  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,  55,   0,   0,   0,   0,   0,   0,   0,   0,  55,  55,   0,   0,   0,  55,   0,   0,   0,   0,  55,  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  60,  60,  55,  55,  55,  55,  55,  55,  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,},
        {  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,  55,   0,   0,   0,   0,   0,   0,   0,   0,  55,  55,   0,   0,   0,  55,   0,   0,   0,   0,  55,  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  60,  60,  55,  55,  55,  55,  55,  55,  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,},
        {  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,  55,   0,   0,   0,   0,   0,   0,   0,   0,  55,  55,   0,   0,   0,  55,   0,   0,   0,   0,  55,  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  60,  60,  55,  55,  55,  55,  55,  55,  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,},
        {  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,  55,   0,   0,   0,   0,   0,   0,   0,   0,  55,  55,   0,   0,   0,  55,   0,   0,   0,   0,  55,  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,  55,  55,  55,  55,  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  60,  60,  55,  55,  55,  55,  55,  55,  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,},
        {  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,   0,  55,  55,  55,  55,   0,  55,   0,   0,   0,   0,   0,  55,  55,   0,   0,   0,   0,   0,   0,   0,   0,  55,  55,   0,   0,   0,  55,   0,   0,   0,   0,  55,  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,  55,  55,  55,  55,  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  60,  60,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,1009,  60,  60,  55,  55,  55,  55,  55,  55,  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,},
        {  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,   0,  55,   0,   0,  55,   0,  55,   0,   0,   0,   0,   0,   0,   0,  55,  55,   0,   0,  55,  55,  55,  55,  55,  55,   0,   0,   0,  55,  55,  55,   0,   0,  55,  55,   0,   0,  55,  55,  55,  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  60,  60,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,  55,  55,  55,  55,  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  60,  60,  60,  60,  55,  55,  55,  55,  55,  55,  55,   0,   0,1009,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,},
        {  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,  55,  55,  55,  55,   0,   0,   0,   0,   0,   0,   0,   0,  60,   0,  60,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,  55,  55,   0,   0,  55,  55,  55,   0,   0,   0,   0,   0,   0,   0,  55,  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  60,  60,   0,   0,   0,   0,  60,  60,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  60,  60,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  60,  60,  60,  60,  55,  55,  55,  55,  55,  55,  55,   0,  60,  60,   0,   0,  60,  60,   0,   0,  60,  60,   0,   0,  55,},
        {  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  60,   0,  60,   0,  60,   0,  60,   0,   0,   0,  60,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  60,  60,   0,   0,   0,   0,  60,  60,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  60,  60,  60,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,   0,  60,  60,   0,   0,  60,  60,   0,   0,  60,  60,   0,   0,  55,},
        {  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  60,   0,  60,   0,  60,   0,  60,   0,  60,   0,   0,   0,  60,   0,  60,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  60,  60,   0,   0,   0,   0,  60,  60,   0,   0,   0,   0,  60,  60,   0,   0,   0,   0,   0,  55,  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  60,  60,  60,  60,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,   0,  60,  60,   0,   0,  60,  60,   0,   0,  60,  60,   0,   0,  55,},
        {  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  60,   0,  60,   0,  60,   0,  60,   0,  60,   0,  60,   0,   0,   0,  60,   0,  60,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  60,  60,   0,   0,   0,   0,  60,  60,   0,   0,   0,   0,  60,  60,   0,   0,   0,   0,   0,  55,  55,   0,   0,   0,   0,   0,   0,   0,   0,   0,  60,  60,  60,  60,  60,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,  55,   0,  60,  60,   0,   0,  60,  60,   0,   0,  60,  60,   0,   0,  55,},
        {  28,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  46,   0,   0,   0,  44,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  46,   0,   0,  44,  46,   0,   0,  44,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  46,   0,   0,1002,1002,1002,   0,   0,  44,  45,  45,  45,  45,  45,  45,  46,   0,   0,1002,1002,1002,   0,   0,  44,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  45,  28,},
        {  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  56,   0,   0,   0,  54,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  56,   0,   0,  54,  56,   0,   0,  54,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  46,   0,   0,   0,   0,   0,   0,   0,  54,  28,  28,  28,  28,  28,  28,  46,   0,   0,   0,   0,   0,   0,   0,  54,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,  28,},
        };
        int[][] extra5w2 = {
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9002,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {},
        {},
        {},
        {},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,   0,9001,9001,9001,9001,   0,9004,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,9001,   0,   0,   0,   0,9004,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9004,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,9001,   0,   0,   0,   0,   0,   0,9001,9002,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9002,9001,9001,9001,9004,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,9001,9001,9001,   0,   0,9001,9001,9001,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,},
        {},
        {},
        {},
        {},
        {},
        };
        Stage extra5 = new Stage(extra5w1,2,0,0);
        extra5.layer2 = new TileMap(extra5w2);
        extra5.auxlayer2 = new TileMap(extra5w2);
        extra5.addEnemy(8,282,263,20,40);
        extra5.addEnemy(8,262,263,20,40);
        extra5.addEnemy(8,570,262,20,40);
        extra5.addEnemy(9,818,257,20,40);
        extra5.addEnemy(9,841,257,20,40);
        extra5.addEnemy(9,1042,257,20,40);
        extra5.addEnemy(8,1203,258,20,40);
        extra5.addEnemy(8,1252,259,20,40);
        extra5.addEnemy(8,1447,41,20,40);
        extra5.addEnemy(8,1502,210,20,40);
        extra5.addEnemy(8,1536,162,20,40);
        extra5.addEnemy(8,1968,262,20,40);
        extra5.addEnemy(8,1926,262,20,40);
        extra5.addEnemy(8,1946,261,20,40);
        extra5.addEnemy(7,2073,182,20,40);
        extra5.addEnemy(7,2193,142,20,40);
        extra5.addEnemy(7,2314,221,20,40);
        extra5.addEnemy(8,2256,260,20,40);
        extra5.addEnemy(8,2657,243,20,40);
        extra5.addEnemy(8,2681,221,20,40);
        extra5.addEnemy(9,2944,256,20,40);
        extra5.enlighten = false;
        extra5.minLight = 100;
      
      	extraStages[setupTimer-numStages] = extra5;
      break
    }
    
    setupTimer++;
    if(setupTimer == numStages+numExtras){
      curStage = allStages[0];
      
      allLoaded = true;
    }
  }
}

void update(){
  //FPS
  sec = second();
  timer++;
  if(lastSec != sec){
    lastSec = sec;
    FPS = timer;
    timer = 0;
  }
  
  //mouse a vector
  mouse.equal(mouseX,mouseY);
  
  //switch principal de estado
  switch(scene){
    case 0://niveles
    	if(escPressed && !endLevel && !dead && !playMap.active && !returnMap.active && !winMap.active){
        escPressed = false;
        pause = !pause;
      }

			if(!pause && !endLevel && !dead && !playMap.active){
        curPlayer.update();
        curStage.update();    	        
      }
    	globalParticleSystem.update();
    	if(dead){
        if(curPlayer.lives > 0 || curStage == editorStage){
          returnToMapBT.update();    
        }
        if(returnToMapBT.click){          
          returnMap.active = true;
          returnToMapBT.hover = false;
          returnToMapBT.click = false;
        }
        if(returnMap.mid){
          returnMap.mid = false;
          dead = false;
          if(lvIsIn(curStage,extraStages)){
            scene = 4;
          }else if(curStage == editorStage){
            scene = 3;
            editorStage.setup();
            editorStage.changeCamera(editorCamera);
          }else{
            scene = 2;
          }
      	}
      }
    	if(endLevel){    
        if(!lvIsIn(curStage,extraStages) && curStage != editorStage && !winMap.active){
          nextLvBT.update();
        }
        
        if(nextLvBT.click){          
          returnMap.active = true;
          nextLvBT.hover = false;
          nextLvBT.click = false;
        }
        
        if(returnMap.mid){
          returnMap.mid = false;         
          endLevel = false;
          allowEndRender = false;
          scene = 2;
          stageUnlock[curLevel] = true;
        }
      }
    	if(winMap.mid){
        winMap.mid = false;
        allowEndRender = true;
        pause = false;
        if(lvIsIn(curStage,extraStages)){
          scene = 4;
          endLevel = false;
          allowEndRender = false;
        }else if(curStage == editorStage){
          scene = 3;
          editorStage.setup();
        	editorStage.changeCamera(editorCamera);
          endLevel = false;
          allowEndRender = false;
        }
      }
    	if(pause){ 
        if(lvIsIn(curStage,extraStages)){
          returnMpBT.tx = "Volver a extras";
        }else if(curStage == editorStage){
          returnMpBT.tx = "Volver al editor";
        }else{
          returnMpBT.tx = "Volver al mapa";
        }
        if(!returnMap.active){
          returnLvBT.update();
        	returnMpBT.update();
        }      
        
       	if(returnLvBT.click == true){
          pause = false;
          returnLvBT.hover = false;
          returnLvBT.click = false;
        }
        if(returnMpBT.click){
          returnMap.active = true;
          returnMpBT.hover = false;
          returnMpBT.click = false;
        }
        if(returnMap.mid){
          returnMap.mid = false;
          if(lvIsIn(curStage,extraStages)){
          	scene = 4;
        	}else if(curStage == editorStage){
            scene = 3;
            editorStage.setup();
        		editorStage.changeCamera(editorCamera);
          }else{
            scene = 2;
          }
          pause = false;
        }
      }
    break
    case 1://menu principal
    	playBT.update();
    	editorBT.update();
    	communityBT.update();
    	settingBT.update();
    
    	//cambio de estado
    	if(!toMain.active){
        if(playBT.click == true){
          fromMain.changeVar = 2;
          fromMain.active = true;
          playBT.hover = false;
          playBT.click = false;
        }
        if(editorBT.click == true){
          fromMain.changeVar = 3;
          fromMain.active = true;
          editorCamera.equal(0,0);

          editorBT.hover = false;
          editorBT.click = false;
        }
        if(communityBT.click == true){
          fromMain.changeVar = 4;
          fromMain.active = true;
          communityBT.hover = false;
          communityBT.click = false;
        }
        if(settingBT.click == true){
          fromMain.active = true;
          fromMain.changeVar = 5;
          settingBT.hover = false;
          settingBT.click = false;
        }
      }
    	
    	if(fromMain.mid){
        fromMain.mid = false;
        scene = fromMain.changeVar;
      }
    	
    break
    case 2://mapa del juego
    	//if(!cutScene1.active){
        if(wPressed && stageUnlock[curLevel] && !moveMap && curLevel < mainMap.pos.length-1){
          moveMap = true;
          moveMapDir = mainMap.dir[curLevel];
          curLevel++;
        }
        if(sPressed && !moveMap && curLevel > 0){
          moveMap = true;
          curLevel--;
          moveMapDir = multVector(mainMap.dir[curLevel],-1);
        }
        double impX = 160;
        double impY = 180;
        if(moveMap){
          if(moveMapDir.x < 0){
            mainAvatar.aniState = 2;
          }else{
            mainAvatar.aniState = 1;
          }
          double vel = 5;
          double margin = 6;
          mapCamera.add(multVector(moveMapDir,5));
          if(isAround(-mapCamera.x+impX,mainMap.pos[curLevel].x,margin) && isAround(-mapCamera.y+impY,mainMap.pos[curLevel].y,margin)){
            mapCamera.x = -mainMap.pos[curLevel].x+impX;
            mapCamera.y = -mainMap.pos[curLevel].y+impY;
            moveMap = false;
            mainAvatar.aniState = 0;
          }
         
        }else{
          if(!fromMain.active && !toMain.active && !playMap.active){
          	playLvBT.update();
          }
        }
        
        if(playLvBT.click == true){          
          playMap.active = true;
          playLvBT.hover = false;
          playLvBT.click = false;
        }
        if(playMap.mid){
          playMap.mid = false;
          scene = 0;
          curStage = allStages[curLevel];
          curStage.setup();
        }
        
        if(!playMap.active){
          returnBT.update();
        }
        
    
        if(returnBT.click && !fromMain.active){
          toMain.active = true;
          returnBT.hover = false;
          returnBT.click = false;
        }
        if(toMain.mid){
          toMain.mid = false;
          scene = 1;
        }
    	
      //}
    break
    case 3://editor
    	vector cameraVel = new vector(0,0);
    	double vel = 10;
    	//mueve el editor
    	if(aPressed){
        cameraVel.x = vel;
      }
    	if(dPressed){
        cameraVel.x = -vel;
      }
    	if(wPressed){
        cameraVel.y = vel;
      }
    	if(sPressed){
        cameraVel.y = -vel;
      }
    	//slots para las tiles que se escogan
      if(!fromMain.active && !toMain.active && !returnMap.active && !winMap.active){
				if(onePressed){
          tileSlot = 0;
        }
        if(twoPressed){
          tileSlot = 1;
        }
        if(thrPressed){
          tileSlot = 2;
        }
        if(fouPressed){
          tileSlot = 3;
        }
        editorCamera.add(cameraVel);

        returnBT.update();

        itemsEdBT.update();
        bgEdBT.update();
        enemiesEdBT.update();
        delEnemiesEdBT.update();
        optionsEdBT.update();
        playEdBT.update();
        saveEdBT.update();
        centerEdBT.update();
      }
    	
    	
   		if(edMenu == 1){
        earthItemEdBT.update();
        waterItemEdBT.update();
        fireItemEdBT.update();
        windItemEdBT.update();
        pickupItemEdBT.update();
        miscItemEdBT.update();
      }else if(edMenu == 2){
        for(int i = bgPage*4; i < bgPage*4+4; i++){
          if(i < bgsEdBT.length){
            bgsEdBT[i].update();
          }          
        }
        upArrowBgEdBT.update();
        downArrowBgEdBT.update();
      }else if(edMenu == 3){        
        earthEnemyEdBT.update();
        waterEnemyEdBT.update();
        fireEnemyEdBT.update();
        windEnemyEdBT.update();
        bossEnemyEdBT.update();
    		miscEnemyEdBT.update();
      }else if(edMenu == 5){
        gridEdBT.update();
        applyEdBT.update();
        lantern.update();
        
        editorStage.minLight = minRadius.getValue();
        
        if(lantern.click){
          editorStage.enlighten = !editorStage.enlighten;
        }
        
        int newWidth = round(lvlWidth.getValue());
        
        if(applyEdBT.click){
          tile[][] aux = editorStage.layer1.Tiles;
          tile[][] aux2 = editorStage.layer2.Tiles;
          editorStage.layer1.Tiles = new tile[aux.length][newWidth];
          editorStage.auxlayer1.Tiles = new tile[aux.length][newWidth];
         
          editorStage.layer2.Tiles = new tile[aux2.length][newWidth];
          editorStage.auxlayer2.Tiles = new tile[aux2.length][newWidth];
          
          for(int i = 0; i < newWidth; i++){
            for(int j = 0; j < editorStage.layer1.Tiles.length; j++){
              if(i >= sizeOf(aux,2)){
                tile tileTemplate = new tile(0);
                tile tileTemplate2 = new tile(0);
        				tileTemplate.trigger = getTriggersFromID(0);
                editorStage.layer1.Tiles[j][i] = tileTemplate;
                editorStage.auxlayer1.Tiles[j][i] = tileTemplate;
                editorStage.layer2.Tiles[j][i] = tileTemplate2;
                editorStage.auxlayer2.Tiles[j][i] = tileTemplate2;
              }else{
                editorStage.layer1.Tiles[j][i] = aux[j][i];
                editorStage.auxlayer1.Tiles[j][i] = aux[j][i];
                
                editorStage.layer2.Tiles[j][i] = aux2[j][i];
                editorStage.auxlayer2.Tiles[j][i] = aux2[j][i];
              }            	
          	}
          }
        }
      }
    	
    	//Pone el menu dependiendo del boton dado
    	if(itemsEdBT.click){
      	if(edMenu == 1){
          edMenu = 0;
        }else{ 
          edMenu = 1;
        }
      }
    	if(bgEdBT.click){
      	if(edMenu == 2){
          edMenu = 0;
        }else{ 
          edMenu = 2;
        }
      }
    	if(enemiesEdBT.click){
      	if(edMenu == 3){
          edMenu = 0;
        }else{ 
          TileSize = 20;
          edMenu = 3;
        }
      }
    	if(delEnemiesEdBT.click){
        if(edMenu == 4){
          edMenu = 0;
        }else{ 
          edMenu = 4;
        }
      }
    	if(optionsEdBT.click){
      	if(edMenu == 5){
          edMenu = 0;
        }else{ 
          edMenu = 5;
        }
      }
    	
    	if(playEdBT.click){
        playEdBT.click = false;
        editorStage.setup();
        editorStage.changeCamera(camera);
        curStage = editorStage;
        TileSize = 20;
        scene = 0;
      }
    
    	if(saveEdBT.click){
        //guardar
        //capa1
        editorCamera.equal(0,0);
        TileSize = 20;
        for(int i = 0; i < editorStage.stageEnemies.length; i++){
        	editorStage.stageEnemies[i].getSize();
        }
        editorStage.renderEnemies();
        
        println("int[][] level = {");
      	for(int i = 0; i < sizeOf(editorStage.layer1.Tiles); i++){
          print("{");
          for(int j = 0; j < sizeOf(editorStage.layer1.Tiles,2); j++){
            String printed = ""; 
            int nDigits = digits(editorStage.layer1.Tiles[i][j].ID);
            if(nDigits == 1){
              printed += "   ";
            }else if(nDigits == 2){
              printed += "  ";
            }else if(nDigits == 3){
              printed += " ";
            }
            printed += editorStage.layer1.Tiles[i][j].ID+",";
          	print(printed);
        	}
          println("},");
        }
        println("};");
        //capa2
        println("int[][] levelLayer2 = {");
      	for(int i = 0; i < sizeOf(editorStage.layer2.Tiles); i++){
          print("{");
          for(int j = 0; j < sizeOf(editorStage.layer2.Tiles,2); j++){
            String printed = ""; 
            int nDigits = digits(editorStage.layer2.Tiles[i][j].ID);
            if(nDigits == 1){
              printed += "   ";
            }else if(nDigits == 2){
              printed += "  ";
            }else if(nDigits == 3){
              printed += " ";
            }
            printed += editorStage.layer2.Tiles[i][j].ID+",";
          	print(printed);
        	}
          println("},");
        }
        println("};");
        //nivel
        println("Stage newStage = new Stage(level,"+editorStage.BG+",0,0);");
        //poner capa2        
        println("newStage.layer2 = new TileMap(levelLayer2);");
        println("newStage.auxlayer2 = new TileMap(levelLayer2);");
        //enemigos
        for(int i = 0; i < editorStage.stageEnemies.length; i++){
          println("newStage.addEnemy("+editorStage.stageEnemies[i].e.ID+","+editorStage.stageEnemies[i].falsePos.x+
                  ","+editorStage.stageEnemies[i].falsePos.y+",20,40);");
        }
        //misc
        println("newStage.enlighten = "+editorStage.enlighten+";");
        println("newStage.minLight = "+editorStage.minLight+";");
      }
    
    	if(earthItemEdBT.click){
        itemsEdBT.subMenu = 0;
      }
    	if(waterItemEdBT.click){
        itemsEdBT.subMenu = 1;
      }
    	if(fireItemEdBT.click){
        itemsEdBT.subMenu = 2;
      }
    	if(windItemEdBT.click){
        itemsEdBT.subMenu = 3;
      }
    	if(pickupItemEdBT.click){
        itemsEdBT.subMenu = 4;
      }
    	if(miscItemEdBT.click){
        itemsEdBT.subMenu = 5;
      }
    
    	if(earthEnemyEdBT.click){
        enemiesEdBT.subMenu = 0;
      }
    	if(waterEnemyEdBT.click){
        enemiesEdBT.subMenu = 1;
      }
    	if(fireEnemyEdBT.click){
        enemiesEdBT.subMenu = 2;
      }
    	if(windEnemyEdBT.click){
        enemiesEdBT.subMenu = 3;
      }
    	if(bossEnemyEdBT.click){
        enemiesEdBT.subMenu = 4;
      }
    	if(miscEnemyEdBT.click){
        enemiesEdBT.subMenu = 5;
      }
    	
    	if(gridEdBT.click){
        grid = !grid;
      }
    	//colision raton bgs
    	for(int i = bgPage*4; i < bgPage*4+4; i++){
        if(i < bgsEdBT.length && bgsEdBT[i].click){
          editorStage.BG = i+1;
        }
      }
    
    	if(upArrowBgEdBT.click && bgPage > 0){
        bgPage--;
      }
    	if(downArrowBgEdBT.click && bgPage < floor((bgsEdBT.length-1) / 4)){
        bgPage++;
      }
    
    	if(edMenu == 0){
        //solo puedes poner enemigos en tileSize 20
        if(tileSlots[tileSlot] < 0){
        	TileSize = 20;
        }
        //poner y quitar bloques
        if(mousePressed){
          int[] pos = editorStage.layer1.getTile(mouseX,mouseY);
          if(pos[0] >= 0 && pos[0] < sizeOf(editorStage.layer1.Tiles,2) && pos[1] >= 0 &&
             pos[1] < sizeOf(editorStage.layer1.Tiles)){
            if(mouseButton == 1){
              //enemigos
              if(tileSlots[tileSlot] < 0){
                editorStage.addEnemy(-tileSlots[tileSlot],mouseX-editorCamera.x,mouseY-editorCamera.y,15,15);
              }else{//tiles
                if(searchNum(getTriggersFromID(tileSlots[tileSlot]),12) > 0){//layer2
                  editorStage.layer2.Tiles[pos[1]][pos[0]].ID = tileSlots[tileSlot];
									editorStage.auxlayer2.Tiles[pos[1]][pos[0]].ID = tileSlots[tileSlot];
                }else{//layer1
                  editorStage.layer1.Tiles[pos[1]][pos[0]].ID = tileSlots[tileSlot];
									editorStage.auxlayer1.Tiles[pos[1]][pos[0]].ID = tileSlots[tileSlot];
                }              
              }
              
            }else if(mouseButton == 3){
              editorStage.layer1.Tiles[pos[1]][pos[0]].ID = 0;
              editorStage.auxlayer1.Tiles[pos[1]][pos[0]].ID = 0;
              editorStage.layer2.Tiles[pos[1]][pos[0]].ID = 0;
              editorStage.auxlayer2.Tiles[pos[1]][pos[0]].ID = 0;
            }
            editorStage.layer1.Tiles[pos[1]][pos[0]].setup();
            editorStage.auxlayer1.Tiles[pos[1]][pos[0]].setup();
            editorStage.layer2.Tiles[pos[1]][pos[0]].setup();
            editorStage.auxlayer2.Tiles[pos[1]][pos[0]].setup();
          }
          
        }       
      }
    	//colision tiles editor 
    	if(edMenu == 1){
        if(itemsEdBT.subMenu == 0){
          tileArr = earthTiles;
        }
        if(itemsEdBT.subMenu == 1){
          tileArr = waterTiles;
        }
        if(itemsEdBT.subMenu == 2){
          tileArr = fireTiles;
        }
        if(itemsEdBT.subMenu == 3){
          tileArr = windTiles;
        }
        if(itemsEdBT.subMenu == 4){
          tileArr = pickupTiles;
        }
        if(itemsEdBT.subMenu == 5){
          tileArr = miscTiles;
        }
        if(tileArr != null){
          int j = -1;
          int k = 0;
          for(int i = 0; i < tileArr.length; i++){
            if(i % 10 == 0){
              j++;
              k = 0;
            }
            if(intersectPR(60+k*20,100+j*20,20-1,20-1,mouseX,mouseY) && mousePressed){
              mousePressed = false;
              tileSlots[tileSlot] = tileArr[i].ID;
            }
            k++;
          }
        }
        
      }
    	//colision enemigos editor
    	if(edMenu == 3){
        if(enemiesEdBT.subMenu == 0){
          enemyArr = earthEnemies;
        }
        if(enemiesEdBT.subMenu == 1){
          enemyArr = waterEnemies;
        }
        if(enemiesEdBT.subMenu == 2){
          enemyArr = fireEnemies;
        }
        if(enemiesEdBT.subMenu == 3){
          enemyArr = windEnemies;
        }
        if(enemiesEdBT.subMenu == 4){
          enemyArr = bossEnemies;
        }
        if(enemiesEdBT.subMenu == 5){
          enemyArr = miscEnemies;
        }
        if(enemyArr != null){
          for(int i = 0; i < enemyArr.length; i++){
            if(intersectPR(enemyArr[i].e.pos.x,enemyArr[i].e.pos.y,enemyArr[i].e.width,enemyArr[i].e.height,mouseX,mouseY) && mousePressed){
              mousePressed = false;
              tileSlots[tileSlot] = -enemyArr[i].e.ID;
            }
          }
        }
      }
    
    	//deleteo de enemigos
    	if(edMenu == 4){
        for(int i = 0; i < editorStage.stageEnemies.length; i++){
          enemy en = editorStage.stageEnemies[i];
          if(intersectPR(en.e.pos.x,en.e.pos.y,en.e.width,en.e.height,mouseX,mouseY) && mousePressed){
						mousePressed = false;
            editorStage.stageEnemies = editorStage.delEnemy(editorStage.stageEnemies,i);
            editorStage.auxEnemies = editorStage.delEnemy(editorStage.auxEnemies,i);
          }
        }
      }
    	
    	if(qPressed && TileSize > 5 && tileSlots[tileSlot] >= 0){
        TileSize--;
      }
    	if(ePressed && TileSize < 40 && tileSlots[tileSlot] >= 0){
        TileSize++;
      }
    
    	if(centerEdBT.click){
        editorCamera.equal(0,0);
      }
    
    	if(returnBT.click){        
        TileSize = 20;
        returnBT.hover = false;
        returnBT.click = false;
        toMain.active = true;
      }
    	if(toMain.mid){
        toMain.mid = false;
        scene = 1;
        edMenu = 0;
      }
    break
    case 4://extras
    	if(!playMap.active){
        returnBT.update();

        for(int i = extraPage*lvPerPage; i < min(extraPage*lvPerPage+lvPerPage,extraBT.length); i++){
          extraBT[i].update();
        }
        
        upArrowExBT.update();
        downArrowExBT.update();
      }
    	
    
    	for(int i = extraPage*lvPerPage; i < min(extraPage*lvPerPage+lvPerPage,extraBT.length); i++){
        if(extraBT[i].click){     
          playMap.active = true;
          extraBT[i].hover = false;
          extraBT[i].click = false;
          extraLevel = i;
        }
      }
    
    	if(playMap.mid){
      	playMap.mid = false;
        scene = 0;
        curStage = extraStages[extraLevel];
        curStage.setup();
      }
    
    	if(upArrowExBT.click && extraPage > 0){
        extraPage--;
      }
    	if(downArrowExBT.click && extraPage < floor((extraBT.length-1) / lvPerPage)){
        extraPage++;        
      }
    
    	if(returnBT.click == true && !fromMain.active){   
       	returnBT.hover = false;
        returnBT.click = false;
        toMain.active = true;
      }
    	if(toMain.mid){
        toMain.mid = false;
        scene = 1;
      }
    break
    case 5://opciones
    	returnBT.update();
    	showFps = showFpsBt.getBoolValue();
    	crosshair = crossBt.getBoolValue();
    	curPlayer.infiniteMana = godMana.getBoolValue();
    	curPlayer.infiniteHealth = godHealth.getBoolValue();
    	curPlayer.infiniteLifes = godLife.getBoolValue();
    	  
    	if(returnBT.click && !fromMain.active){
        toMain.active = true;
        returnBT.hover = false;
        returnBT.click = false;
      }
    	if(toMain.mid){
        toMain.mid = false;
        scene = 1;
      }
    break
  }
  
  render();
}

void render(){ 
  background(bgColor[0],bgColor[1],bgColor[2]);
  animationTimers();
  //switch principal de estado
  switch(scene){
    case 0://niveles
    	//fondo - layer2 - enemigos - jugador - layer1 - particulas - luz - ui
    
    	curStage.renderBG();    
			curStage.render(curStage.layer2);
      curStage.renderEnemies();    
      curPlayer.render();    	
    	curStage.render(curStage.layer1);
    	globalParticleSystem.render();
    	curStage.light();
    	if(!hideUI){
        curPlayer.renderUI();
      }		
    	if(unlockScreen != 0){
        unlockScreenTimer++;
        
        String tex = "Has desbloqueado el Poder de ";
        
        switch(unlockScreen){
          case 1:
          	tex +="Tierra";
          break
          case 2:
          	tex +="Agua";
          break
          case 3:
          	tex +="Fuego";
          break
          case 4:
          	tex +="Viento";
          break
        }
        
        double texWidth = textWidth(tex);
        
        image("https://1.bp.blogspot.com/-p3fmcPEWL5Q/YDQIuwHoYSI/AAAAAAAADwU/CkU2JeWE58oWKMwR10sBvn1YUpmnC3yCQCLcBGAsYHQ/s0/simplebutton.png",150-texWidth/2,280,texWidth+20,30);
        textSize(10);
        fill(255);
        text(tex,160-texWidth/2,300);
        
        if(unlockScreenTimer >= 60){
          unlockScreenTimer = 0;
          unlockScreen = 0;
        }
      }
    
      textSize(10);
      if(debug){
        fill(0);
        text("X: "+camera.x,10,60);
        text("Y: "+camera.y,10,80);
        text("X: "+curPlayer.e.pos.x,10,100);
        text("Y: "+curPlayer.e.pos.y,10,120);
      }
    
    	if(pause){
        noStroke();
        fill(0,0,0,0.56);
        rect(0,0,320,320);
        fill(0);
        rect(-10,-10,1,1);
        //vidas
        textSize(11);
        image("https://1.bp.blogspot.com/-d6pmfpUFROo/YHGuWKlsY4I/AAAAAAAAEPw/ZJfPUuwKVwUJAB6ZtRPppjzyFknIiIJ3gCLcBGAsYHQ/s0/lifes.png",
              260,10,55,32);
        fill(255,255,255);
        text("x"+curPlayer.lives,265,35);
        textSize(10);
        //coleccionables
        for(int i = 0; i < curStage.collectibles.length; i++){         
          tile newTile = new tile(9050+curStage.ID*10+i);      
          if(curStage.collectibles[i]){
            newTile.render(16+i*32,280);
          }
        }
        returnLvBT.render();
        returnMpBT.render();
      }
    
    	if(dead){
        fill(255,0,0,0.56);
        rect(-1,-1,320,320);
        fill(255,255,255);
        textSize(20);
        text("Has Muerto...",160-textWidth("Has Muerto...")/2,60);
        image("https://1.bp.blogspot.com/-d6pmfpUFROo/YHGuWKlsY4I/AAAAAAAAEPw/ZJfPUuwKVwUJAB6ZtRPppjzyFknIiIJ3gCLcBGAsYHQ/s0/lifes.png",
              160-55/2,150,55,32);
        textSize(11);
        text("x"+curPlayer.lives,160-55/2+5,175);
        if(curPlayer.lives <= 0){
          textSize(12);
          text("No te quedan más vidas",160-textWidth("No te quedan más vidas")/2,140);
          text("Reinicia",160-textWidth("Reinicia")/2,220);
        }else{
          returnToMapBT.render();    
        }   		
        textSize(10);
      }
    
    	if(endLevel && allowEndRender){
        image("https://1.bp.blogspot.com/-ba34sRqxENc/YEErO7_8o3I/AAAAAAAADx8/ENH5KlzJDBMWKMTRsUtTNieOoBUgw21qACLcBGAsYHQ/s0/endScreen.png",0,0,320,320);
        fill(255,255,255); 
        textSize(12);
        text("Monedas: "+curStage.coinCounter,160-textWidth("Monedas: "+curStage.coinCounter)/2,120); 
        if(curStage.collectibles.length > 0){
          text("Coleccionables",160-textWidth("Coleccionables")/2,160);
        } 
        if(curStage == allStages[20]){
          text("FIN",160-textWidth("FIN")/2,210);
          text("¡Gracias por jugar el juego!",160-textWidth("¡Gracias por jugar el juego!")/2,240);
        }
        for(int i = 0; i < curStage.collectibles.length; i++){         
          tile newTile = new tile(9050+curStage.ID*10+i); 
          if(curStage.collectibles[i]){
            newTile.render(6+i*32+(10-curStage.collectibles.length)*32/2,170);
          }
          stroke(255,255,255);
          noFill();
          //rect(16+i*32+(9-curStage.collectibles.length)/2*32+6,170,20,20);
          
        }
        nextLvBT.render();
      }
    break
    case 1://menu principal
    	switch(titleScreen){
        case 0:
        	image("https://1.bp.blogspot.com/-WXdeLoKw8Jo/YEE3rAlPCoI/AAAAAAAADyM/sXhXjsJr3EE77lAfGfKCYlBEgJPXmhNEQCLcBGAsYHQ/s320/Screenshot1.png",
           -50,-50,370,370);
        break
        case 1:
        	image("https://1.bp.blogspot.com/-iCKZhF4hGi4/YGNiHpxqQ4I/AAAAAAAAEC4/X4jGSfs_-nQJhp8pVUrTyWYAK3Z7Kl1lACLcBGAsYHQ/s320/extra2.png",
           -50,-50,370,370);
        break
        case 2:
        	image("https://1.bp.blogspot.com/-C9jXRfW6X5w/YGxhmEXJlZI/AAAAAAAAELo/C9hjbuyScp0eSsS1ocgxwxbeJOTHYo6RACLcBGAsYHQ/s320/extra3.png",
           -50,-50,370,370);
        break
        case 3:
        	image("https://1.bp.blogspot.com/-g2wNk9c5yzs/YG3uDuH7kWI/AAAAAAAAEPg/weoszFtTwBMxHNHSY39j62veGJ8EhLeHgCLcBGAsYHQ/s320/extra4.png",
           -50,-50,370,370);
        break
        case 4:
        	image("https://1.bp.blogspot.com/-stxbllQOk2E/YHXxmidt8eI/AAAAAAAAETk/54Gkf5a_QUQPoYpBuVLhNa8S9w5n7-TqQCLcBGAsYHQ/s320/extra5.png",
           -50,-50,370,370);
        break
      }    	
    	textSize(25);
    	fill(118,252,255);
     	image("https://1.bp.blogspot.com/-j3TAo32ZTYY/YEE2q8iXpSI/AAAAAAAADyE/uMD0jpHMHawBM7-E1mx-Pvob2fHDWQJcQCLcBGAsYHQ/s0/logo1.png",76,20,168,96);
    	playBT.render();
    	editorBT.render();
    	communityBT.render();
    	settingBT.render();
    break
    case 2://mapa del juego
    	/*if(!fromMain.active){
        cutScene1.render(0,0,320,320);
      }*/
    	
    	//if(!cutScene1.active){
        fill(77,155,230);
        rect(-20,-20,400,400);
        image("https://1.bp.blogspot.com/-3LDAtC_dXgY/YGxMv-WvgrI/AAAAAAAAELg/H2vZ833C6cYVX0W-7s97XQLk9uKYi0S8ACLcBGAsYHQ/s960/wordlMapFinal.png",mapCamera.x,mapCamera.y,960,960);
        returnBT.render();
        
        //mainMap.render();
        
        mainAvatar.render();
        
        if(!moveMap){
          fill(255,255,255);
          textSize(15);
          text(levelNames[curLevel],10,25);
          
          playLvBT.render();
        }
      //}
    break
    case 3://editor   
    	editorStage.renderBG();
    	editorStage.render(editorStage.layer2);
    	editorStage.render(editorStage.layer1);   	
    	for(int i = 0; i < editorStage.stageEnemies.length; i++){
        editorStage.stageEnemies[i].getSize();
        if(TileSize == 20.0){
          editorStage.stageEnemies[i].render();
        }
        
      }
    	int[] pos = editorStage.layer1.getTile(mouseX,mouseY);
      if(pos[0] >= 0 && pos[0] < sizeOf(editorStage.layer1.Tiles,2) && pos[1] >= 0 &&
         pos[1] < sizeOf(editorStage.layer1.Tiles) && edMenu != 4){
        fill(60,245,74,0.5);
        if(mousePressed && mouseButton == 3){
          fill(245,60,60,0.5);
        }
        noStroke();
        if(tileSlots[tileSlot] < 0){
          mousePressed = false;
          enemy preview = new enemy(-tileSlots[tileSlot],mouseX-editorCamera.x,mouseY-editorCamera.y,20,40);
          preview.render();
          fill(255,255,255,0.2);
          noStroke();
          rect(mouseX,mouseY,preview.e.width,preview.e.height);
        }else{
          rect(pos[0]*TileSize+editorCamera.x,pos[1]*TileSize+editorCamera.y,TileSize,TileSize);
        }       
      }
    	if(edMenu == 4){
        double rad = 5;
        stroke(255,0,0);
        line(mouseX-rad,mouseY-rad,mouseX+rad,mouseY+rad);
        line(mouseX+rad,mouseY-rad,mouseX-rad,mouseY+rad);
      }
    	returnBT.render();
    	centerEdBT.render();
    
    	itemsEdBT.render();
    	bgEdBT.render();
    	enemiesEdBT.render();
    	delEnemiesEdBT.render();
    	optionsEdBT.render();
    	playEdBT.render();
    	saveEdBT.render();
    
    	if(edMenu == 1){
        fill(80,211,237);
        stroke(0);
        image("https://1.bp.blogspot.com/-bmaZ6bcqgZA/YDwYnPN3UAI/AAAAAAAADw0/IqiYhEDzrV44QUwIWzP0IsqJ0U_i5k06gCLcBGAsYHQ/s0/mediumBox.png",40,80,240,200);

        double auxSize = TileSize;
        TileSize = 20;
        int j = -1;
        int k = 0;

        for(int i = 0; i < tileArr.length; i++){
          if(i % 10 == 0){
            j++;
            k = 0;
          }
          tileArr[i].render(60+k*20,100+j*20);
          if(intersectPR(60+k*20,100+j*20,TileSize-1,TileSize-1,mouseX,mouseY)){
            fill(76,253,64,0.4);           
						stroke(76,253,64);
            rect(60+k*20,100+j*20,20,20);
          }
          k++;
        }
        TileSize = auxSize;
        earthItemEdBT.render();
        waterItemEdBT.render();
        fireItemEdBT.render();
        windItemEdBT.render();
        pickupItemEdBT.render();
    		miscItemEdBT.render();
      }else if(edMenu == 2){
        image("https://1.bp.blogspot.com/-h5v9uNo2LHk/YDwYnDtngjI/AAAAAAAADww/dyIjZLeXKdoDQ6yUabtgVKw0mPR14ywkgCLcBGAsYHQ/s0/bigBox.png",40,60,240,220);
        
        for(int i = bgPage*4; i < bgPage*4+4; i++){
          if(i < bgsEdBT.length){
            bgsEdBT[i].render();
          }         
        }
        
        upArrowBgEdBT.render();
        downArrowBgEdBT.render();
      }else if(edMenu == 3){
        image("https://1.bp.blogspot.com/-bmaZ6bcqgZA/YDwYnPN3UAI/AAAAAAAADw0/IqiYhEDzrV44QUwIWzP0IsqJ0U_i5k06gCLcBGAsYHQ/s0/mediumBox.png",40,80,240,200);
        
        earthEnemyEdBT.render();
        waterEnemyEdBT.render();
        fireEnemyEdBT.render();
        windEnemyEdBT.render();
        bossEnemyEdBT.render();
    		miscEnemyEdBT.render();
        
        for(int i = 0; i < enemyArr.length; i++){
          enemyArr[i].render();       
          if(intersectPR(enemyArr[i].e.pos.x,enemyArr[i].e.pos.y,enemyArr[i].e.width,enemyArr[i].e.height,mouseX,mouseY)){
          	fill(76,253,64,0.4);           
						stroke(76,253,64);
            rect(enemyArr[i].e.pos.x,enemyArr[i].e.pos.y,enemyArr[i].e.width,enemyArr[i].e.height);
          }
        }
      }else if(edMenu == 5){
        image("https://1.bp.blogspot.com/-h5v9uNo2LHk/YDwYnDtngjI/AAAAAAAADww/dyIjZLeXKdoDQ6yUabtgVKw0mPR14ywkgCLcBGAsYHQ/s0/bigBox.png",40,60,240,220);
        gridEdBT.render();
        applyEdBT.render();
        lvlWidth.render();
        lantern.render();
				minRadius.render();
      } 
    	double auxSize = TileSize;
      TileSize = 20;
    	int[] tileIDs = {tileSlots[0],tileSlots[1],tileSlots[2],tileSlots[3]};
    	for(int i = 0; i < tileIDs.length; i++){       
        if(tileIDs[i] < 0){
        	tileIDs[i] = 9999;
      	}
      }
      
    	tile slot1 = new tile(tileIDs[0]);
    	tile slot2 = new tile(tileIDs[1]);
    	tile slot3 = new tile(tileIDs[2]);
    	tile slot4 = new tile(tileIDs[3]);
    	slot1.render(10,50);
    	slot2.render(10,90);
    	slot3.render(10,130);
    	slot4.render(10,170);
    	stroke(255,255,255);
    	noFill();
    	if(tileSlot == 0){
        stroke(60,245,74);
      }
    	if(edMenu == 4){
        stroke(255,0,0);
      }
    	rect(10,50,20,20);
    	stroke(255,255,255);
    	if(tileSlot == 1){
        stroke(60,245,74);
      }
    	if(edMenu == 4){
        stroke(255,0,0);
      }
    	rect(10,90,20,20);
    	stroke(255,255,255);
    	if(tileSlot == 2){
        stroke(60,245,74);
      }
    	if(edMenu == 4){
        stroke(255,0,0);
      }
    	rect(10,130,20,20);
    	stroke(255,255,255);
    	if(tileSlot == 3){
        stroke(60,245,74);
      }
    	if(edMenu == 4){
        stroke(255,0,0);
      }
    	rect(10,170,20,20);
    	TileSize = auxSize;
    break
    case 4://extras    	
    	image("https://1.bp.blogspot.com/-ba34sRqxENc/YEErO7_8o3I/AAAAAAAADx8/ENH5KlzJDBMWKMTRsUtTNieOoBUgw21qACLcBGAsYHQ/s0/endScreen.png",0,0,320,320);
    	fill(205,104,61);
    	stroke(205,104,61);
    	rect(20,20,280,280);    	
    	returnBT.render();
    
    	for(int i = extraPage*lvPerPage; i < min(extraPage*lvPerPage+lvPerPage,extraBT.length); i++){
      	extraBT[i].render();
      }      
      upArrowExBT.render();
      downArrowExBT.render();
    break
    case 5://opciones    	
    	image("https://1.bp.blogspot.com/-ba34sRqxENc/YEErO7_8o3I/AAAAAAAADx8/ENH5KlzJDBMWKMTRsUtTNieOoBUgw21qACLcBGAsYHQ/s0/endScreen.png",0,0,320,320);
    	fill(205,104,61);
    	stroke(205,104,61);
    	rect(20,20,280,280);
    	showFpsBt.render();
    	crossBt.render();
    	godMana.render();
    	godHealth.render();
    	godLife.render();
    	fill(255,255,255);
    	textSize(10);
    	text("Mostrar FPS",45,35);
    	text("Punto de mira",45,65);
    	text("Mana infinito (Trucos)",45,95);
    	text("Salud infinita (Trucos)",45,125);
    	text("Vidas infinitas (Trucos)",45,155);
    	returnBT.render();
    break
  }
  if(fromMain.active){
  	fromMain.render();
  }
  if(toMain.active){
  	toMain.render();
  }
  if(returnMap.active){
    returnMap.render();
  }
  if(playMap.active){
    playMap.render();
  }
  if(winMap.active){
    winMap.render();
  }
  
  textSize(10);
  if(showFps){
    fill(255,255,255);
    //text("Size: " + TileSize,270,305);
    text("FPS: " + FPS,265,315);
  }
  
}
